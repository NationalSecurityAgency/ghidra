<?xml version="1.0" encoding="UTF-8"?>
<compiler_spec>
 <data_organization>
   <absolute_max_alignment value="0" />
   <machine_alignment value="1" />
   <default_alignment value="1" />
   <default_pointer_alignment value="1" />
   <pointer_size value="2" />
   <wchar_size value="1" />
   <short_size value="2" />
   <integer_size value="2" />
   <long_size value="4" />
   <long_long_size value="4" />
   <float_size value="4" />
   <double_size value="4" />
   <long_double_size value="4" />
   <size_alignment_map>
     <entry size="1" alignment="1" />
     <entry size="2" alignment="1" />
     <entry size="4" alignment="1" />
   </size_alignment_map>
 </data_organization>

 <global>
   <range space="IFLASH"/>
   <range space="CODE"/>
   <range space="INTMEM"/>
   <range space="SFR"/>
   <range space="XRAM"/>
   <range space="RAM"/>
   <range space="BITS"/>
 </global>

 <stackpointer register="SP" space="RAM" growth="positive"/>

 <default_proto>
   <prototype name="__stdcall" extrapop="2" stackshift="2" strategy="register">
     <input>
       <pentry minsize="1" maxsize="1" metatype="float">
         <register name="R4"/>
       </pentry>
       <pentry minsize="1" maxsize="1" metatype="float">
         <register name="R5"/>
       </pentry>
       <pentry minsize="1" maxsize="1">
         <register name="R7"/>
       </pentry>
       <pentry minsize="1" maxsize="1">
         <register name="R6"/>
       </pentry>
       <pentry minsize="1" maxsize="1">
         <register name="R5"/>
       </pentry>
       <pentry minsize="1" maxsize="1">
         <register name="R4"/>
       </pentry>
       <pentry minsize="1" maxsize="1">
         <register name="R3"/>
       </pentry>
       <pentry minsize="1" maxsize="4">
         <addr space="RAM" offset="0"/>
       </pentry>
     </input>
     <output>
       <pentry minsize="1" maxsize="1">
         <register name="R7"/>
       </pentry>
       <pentry minsize="1" maxsize="1">
         <register name="R6"/>
       </pentry>
       <pentry minsize="1" maxsize="1">
         <register name="R7"/>
       </pentry>
       <pentry minsize="1" maxsize="1">
         <register name="R4"/>
       </pentry>
       <pentry minsize="1" maxsize="1">
         <register name="R5"/>
       </pentry>
       <pentry minsize="1" maxsize="1">
         <register name="R6"/>
       </pentry>
       <pentry minsize="1" maxsize="1">
         <register name="R7"/>
       </pentry>
     </output>
     <unaffected>
       <register name="SP"/>
       <register name="PSW"/>
     </unaffected>
   </prototype>
 </default_proto>

 <funcptr align="2" />
 <aggressivetrim signext="true"/>
 <returnaddress>
   <varnode space="stack" offset="0" size="2"/>
 </returnaddress>

 <segmentop space="CODE" userop="segment" farpointer="yes">
   <pcode>
     <input name="baseValue" size="2"/>
     <input name="innerValue" size="2"/>
     <output name="res" size="4"/>
     <body><![CDATA[
       res = baseValue;
       res = res << 16;
       res = res | innerValue;
     ]]></body>
   </pcode>
 </segmentop>
</compiler_spec>