# RV32 Bitmanip Extension
imm2024: op2024 is op2024 {local tmp:$(XLEN) = op2024; export tmp;}
imm2025: op2025 is op2025 {local tmp:$(XLEN) = op2025; export tmp;}
imm2026: op2026 is op2026 {local tmp:$(XLEN) = op2026; export tmp;}

define pcodeop add_uw;
:zext.w rd, rs1      is op0006=0x3b & op1214=0x0 & op1519=0x0 & op2531=0x04 & rd & rs1       {rd=zext(rs1:4);}
:add.uw rd, rs1, rs2 is op0006=0x3b & op1214=0x0              & op2531=0x04 & rd & rs1 & rs2 {rd=zext(rs1:4)+rs2;}

:andn rd, rs1, rs2 is op0006=0x33 & op1214=0x7 & op2531=0x20 & rd & rs1 & rs2 {rd=rs1 & ~rs2;}

:bext rd, rs1, rs2 is op0006=0x33 & op1214=0x5 & op2531=0x24 & rd & rs1 & rs2 {rd=(rs1 >> rs2) & 1;}

define pcodeop clmul;
:clmul  rd, rs1, rs2 is op0006=0x33 & op1214=0x1 & op2531=0x5 & rd & rs1 & rs2 {rd=clmul(rs1,rs2);}

define pcodeop clmulh;
:clmulh rd, rs1, rs2 is op0006=0x33 & op1214=0x3 & op2531=0x5 & rd & rs1 & rs2 {rd=clmulh(rs1,rs2);}

define pcodeop clmulr;
:clmulr rd, rs1, rs2 is op0006=0x33 & op1214=0x2 & op2531=0x5 & rd & rs1 & rs2 {rd=clmulr(rs1,rs2);}

define pcodeop clz;
:clz rd, rs1 is op0006=0x13 & op1214=0x1 & op2024=0x0 & op2531=0x30 & rd & rs1 {rd=clz(rs1);}

define pcodeop clzw;
:clzw rd, rs1 is op0006=0x1b & op1214=0x1 & op2024=0x0 & op2531=0x30 & rd & rs1 {rd=clzw(rs1);}

define pcodeop ctz;
:ctz rd, rs1 is op0006=0x13 & op1214=0x1 & op2024=0x1 & op2531=0x30 & rd & rs1 {rd=ctz(rs1);}

define pcodeop ctzw;
:ctzw rd, rs1 is op0006=0x1b & op1214=0x1 & op2024=0x1 & op2531=0x30 & rd & rs1 {rd=ctzw(rs1);}

define pcodeop orc_b;
:orc.b rd, rs1 is op0006=0x13 & rd & op1214=0x5 & rs1 & op2025=0x07 & op2631=0x0a {rd=orc_b(rs1);}

define pcodeop rev8;
define pcodeop rev_b;
#define pcodeop grevi;
#                   rev8 has different encodings for 32 and 64 bit CPUs
:rev.b rd, rs1         is op0006=0x13 & op1214=0x5 & op2731=0xd & op2026=0x7  & rd & rs1 {rd=rev_b(rs1);}
:rev8  rd, rs1         is op0006=0x13 & op1214=0x5 & op2731=0xd & op2026=0x18 & rd & rs1 {rd=rev8(rs1);}
:rev8  rd, rs1         is op0006=0x13 & op1214=0x5 & op2731=0xd & op2026=0x38 & rd & rs1 {rd=rev8(rs1);}

define pcodeop minu;
:minu  rd, rs1, rs2 is op0006=0x33 & op1214=0x5 & op2531=0x5 & rd & rs1 & rs2 {rd=minu(rs1,rs2);}

define pcodeop maxu;
:maxu rd, rs1, rs2 is op0006=0x33 & op1214=0x7 & op2531=0x5 & rd & rs1 & rs2 {rd=maxu(rs1,rs2);}

define pcodeop min;
:min  rd, rs1, rs2 is op0006=0x33 & op1214=0x4 & op2531=0x5 & rd & rs1 & rs2 {rd=min(rs1,rs2);}

define pcodeop max;
:max rd, rs1, rs2 is op0006=0x33 & op1214=0x6 & op2531=0x5 & rd & rs1 & rs2 {rd=max(rs1,rs2);}

:orn  rd, rs1, rs2 is op0006=0x33 & op1214=0x6 & op2531=0x20 & rd & rs1 & rs2 {rd=rs1 | ~rs2;}

define pcodeop pack;
:pack  rd, rs1, rs2 is op0006=0x33 & op1214=0x4 & op2531=0x4 & rd & rs1 & rs2 {rd=pack(rs1,rs2);}

define pcodeop packh;
:packh rd, rs1, rs2 is op0006=0x33 & op1214=0x7 & op2531=0x4 & rd & rs1 & rs2 {rd=packh(rs1,rs2);}

define pcodeop packw;
:packw rd, rs1, rs2 is op0006=0x3b & op1214=0x4 & op2531=0x04 & rd & rs1 & rs2 {rd=packw(rs1,rs2);}

define pcodeop zext_h;
:zext.h rd, rs1 is op0006=0x3b & op1214=0x4 & op2531=0x04 & rd & op2024=0 & rs1 {rd=zext_h(rs1);}

define pcodeop cpop;
:cpop rd, rs1 is op0006=0x13 & op1214=0x1 & op2024=0x2 & op2531=0x30 & rd & rs1 {rd=cpop(rs1);}

define pcodeop cpopw;
:cpopw rd, rs1 is op0006=0x1b & op1214=0x1 & op2024=0x2 & op2531=0x30 & rd & rs1 {rd=cpopw(rs1);}

define pcodeop rol;
:rol  rd, rs1, rs2 is op0006=0x33 & op1214=0x1 & op2531=0x30 & rd & rs1 & rs2 {rd=rol(rs1,rs2);}

define pcodeop rolw;
:rolw  rd, rs1, rs2 is op0006=0x3b & op1214=0x1 & op2531=0x30 & rd & rs1 & rs2 {rd=rolw(rs1,rs2);}

define pcodeop ror;
:ror  rd, rs1, rs2 is op0006=0x33 & op1214=0x5 & op2531=0x30 & rd & rs1 & rs2 {rd=ror(rs1,rs2);}

define pcodeop rorw;
:rorw  rd, rs1, rs2 is op0006=0x3b & op1214=0x5 & op2531=0x30 & rd & rs1 & rs2 {rd=rorw(rs1,rs2);}

define pcodeop rori;
:rori rd, rs1, imm2026 is op0006=0x13 & op1214=0x5 & op2731=0x0c & imm2026 & rd & rs1 {rd=rori(rs1,imm2026);}

define pcodeop roriw;
:roriw rd, rs1, imm2024 is op0006=0x1b & op1214=0x5 & op2531=0x30 & imm2024 & rd & rs1 {rd=roriw(rs1,imm2024);}

define pcodeop bclr;
:bclr  rd, rs1, rs2 is op0006=0x33 & op1214=0x1 & op2531=0x24 & rd & rs1 & rs2 {rd=bclr(rs1,rs2);}

define pcodeop bclri;
:bclri rd, rs1, imm2026 is op0006=0x13 & op1214=0x1 & op2731=0x9 & imm2026 & rd & rs1 {rd=bclri(rs1,imm2026);}

define pcodeop bexti;
:bexti rd, rs1, imm2026 is op0006=0x13 & op1214=0x5 & op2731=0x9 & imm2026 & rd & rs1 {rd=bexti(rs1,imm2026);}

define pcodeop binv;
:binv  rd, rs1, rs2 is op0006=0x33 & op1214=0x1 & op2531=0x34 & rd & rs1 & rs2 {rd=binv(rs1,rs2);}

define pcodeop binvi;
:binvi rd, rs1, imm2026 is op0006=0x13 & op1214=0x1 & op2731=0xd & imm2026 & rd & rs1 {rd=binvi(rs1,imm2026);}

define pcodeop bset;
:bset  rd, rs1, rs2 is op0006=0x33 & op1214=0x1 & op2531=0x14 & rd & rs1 & rs2 {rd=bset(rs1,rs2);}

define pcodeop bseti;
:bseti rd, rs1, imm2026 is op0006=0x13 & op1214=0x1 & op2731=0x5 & imm2026 & rd & rs1 {rd=bseti(rs1,imm2026);}

define pcodeop sext_b;
:sext.b rd, rs1 is op0006=0x13 & op1214=0x1 & op2024=0x4 & op2531=0x30 & rd & rs1 {rd=sext_b(rs1);}

define pcodeop sext_h;
:sext.h rd, rs1 is op0006=0x13 & op1214=0x1 & op2024=0x5 & op2531=0x30 & rd & rs1 {rd=sext_h(rs1);}

:sh1add rd, rs1, rs2 is op0006=0x33 & op1214=0x2 & op2531=0x10 & rd & rs1 & rs2 {rd=rs2+rs1<<1;}

:sh1add.uw rd, rs1, rs2 is op0006=0x3b & op1214=0x2 & op2531=0x10 & rd & rs1 & rs2 {rd=rs2+zext(rs1<<1);}

:sh2add rd, rs1, rs2 is op0006=0x33 & op1214=0x4 & op2531=0x10 & rd & rs1 & rs2 {rd=rs2+(rs1<<2);}

:sh2add.uw rd, rs1, rs2 is op0006=0x3b & op1214=0x4 & op2531=0x10 & rd & rs1 & rs2 {rd=rs2+zext(rs1<<2);}

:sh3add rd, rs1, rs2 is op0006=0x33 & op1214=0x6 & op2531=0x10 & rd & rs1 & rs2 {rd=rs2+(rs1<<3);}

:sh3add.uw rd, rs1, rs2 is op0006=0x3b & op1214=0x6 & op2531=0x10 & rd & rs1 & rs2 {rd=rs2+zext(rs1<<3);}

:slli.uw rd, rs1, imm2025 is op0006=0x1b & op1214=0x1 & op2631=0x2 & imm2025 & rd & rs1 {rd=zext(rs1:4)<<imm2025;}

:xnor rd, rs1, rs2 is op0006=0x33 & op1214=0x4 & op2531=0x20 & rd & rs1 & rs2 {rd=~(rs1^rs2);}

define pcodeop unzip;
:unzip rd, rs1 is op0006=0x13 & op1214=0x5 & op2024=0x1f & rd & rs1 & op2531=0x04 {rd=unzip(rs1);}

define pcodeop zip;
:zip rd, rs1 is op0006=0x13 & op1214=0x1 & op2024=0x1e & rd & rs1 & op2531=0x04 {rd=zip(rs1);}

define pcodeop xperm_b;
:xperm.b rd, rs1, rs2 is op0006=0x33 & rd & op1214=0x4 & rs1 & rs2 & op2531=0x14 {rd=xperm_b(rs1,rs2);}

define pcodeop xperm_n;
:xperm.nf rd, rs1, rs2 is op0006=0x33 & rd & op1214=0x2 & rs1 & rs2 & op2531=0x14 {rd=xperm_n(rs1,rs2);}