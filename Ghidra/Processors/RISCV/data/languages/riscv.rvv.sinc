# Vector Extension
#  See https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc

# sew: "e8"    is vsew=0 {}
# sew: "e16"   is vsew=1 {}
# sew: "e32"   is vsew=2 {}
# sew: "e64"   is vsew=3 {}
# sew: "e128"  is vsew=4 {}
# sew: "e256"  is vsew=5 {}
# sew: "e512"  is vsew=6 {}
# sew: "e1024" is vsew=7 {}

# vmul: "m1"   is vlmul=0 {}
# vmul: "m2"   is vlmul=1 {}
# vmul: "m4"   is vlmul=2 {}
# vmul: "m8"   is vlmul=3 {}
# vmul: "mf8"  is vlmul=5 {}
# vmul: "mf4"  is vlmul=6 {}
# vmul: "mf2"  is vlmul=7 {}

# vmask: "mu"  is vma=0 {}
# vmask: "ma"  is vma=1 {}
# vtail: "tu"  is vta=0 {}
# vtail: "ta"  is vta=1 {}

#TODO  possible tables
# mop=0  unit-stride        VLE<EEW>
# mop=2  strided            VLSE<EEW>
# mop=3  indexed            VLXEI<EEW>
# mop=0  unit-stride        VSE<EEW>
# mop=1  indexed-unordered  VSUXEI<EEW>
# mop=2  strided            VSSE<EEW>
# mop=3  indexed-ordered    VSOXEI<EEW>
# lumop=0  unit-stride
# lumop=8  unit-stride,whole registers
# lumop=16 unit-stride fault-only-first
# sumop=0  unit-stride
# sumop=8  unit-stride,whole registers
# sumop=16 unit-stride fault-only-first
# nfields imm is nf [ imm = nf + 1; ] { export *[const]:1 imm; }

# Many instructions support two modes - masked via v0 or unmasked.  The reference
# disassembler objdump renders these explicitly, so we do too.

define pcodeop vaadd_vv;
# vaadd.vv       31..26=0x09 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vaadd.vv vd, vs2, vs1, vm   # roundoff_signed(vs2[i] + vs1[i], 1)
:vaadd.vv  vd, vs2, vs1         is op2631=0x9 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vaadd_vv(vs2,vs1);}
:vaadd.vv  vd, vs2, vs1, "v0.t" is op2631=0x9 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vaadd_vv(vs2,vs1,v0);}

define pcodeop vaadd_vx;
# vaadd.vx       31..26=0x09 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vaadd.vx vd, vs2, rs1, vm   # roundoff_signed(vs2[i] + x[rs1], 1)
:vaadd.vx  vd, vs2, rs1         is op2631=0x9 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vaadd_vx(vs2,rs1);}
:vaadd.vx  vd, vs2, rs1, "v0.t" is op2631=0x9 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vaadd_vx(vs2,rs1,v0);}

define pcodeop vaaddu_vv;
# vaaddu.vv      31..26=0x08 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vaaddu.vv vd, vs2, vs1, vm   # roundoff_unsigned(vs2[i] + vs1[i], 1)
:vaaddu.vv  vd, vs2, vs1         is op2631=0x8 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vaaddu_vv(vs2,vs1);}
:vaaddu.vv  vd, vs2, vs1, "v0.t" is op2631=0x8 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vaaddu_vv(vs2,vs1,v0);}

define pcodeop vaaddu_vx;
# vaaddu.vx      31..26=0x08 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vaaddu.vx vd, vs2, rs1, vm   # roundoff_unsigned(vs2[i] + x[rs1], 1)
:vaaddu.vx  vd, vs2, rs1         is op2631=0x8 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vaaddu_vx(vs2,rs1);}
:vaaddu.vx  vd, vs2, rs1, "v0.t" is op2631=0x8 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vaaddu_vx(vs2,rs1,v0);}

define pcodeop vadc_vim;
# vadc.vim       31..26=0x10 25=0 vs2 simm5 14..12=0x3 vd 6..0=0x57
# vadc.vim   vd, vs2, simm5, v0  # Vector-immediate
:vadc.vim    vd, vs2, simm5, v0  is op2631=0x10 & op2525=0x0 & vs2 & simm5 & op1214=0x3 & v0 & vd & op0006=0x57 {vd=vadc_vim(vs2,simm5);}

define pcodeop vadc_vvm;
# vadc.vvm       31..26=0x10 25=0 vs2 vs1 14..12=0x0 vd 6..0=0x57
# vadc.vvm   vd, vs2, vs1, v0  # Vector-vector
:vadc.vvm    vd, vs2, vs1, v0 is op2631=0x10 & op2525=0x0 & vs2 & vs1 & op1214=0x0 & v0 & vd & op0006=0x57 {vd=vadc_vvm(vs2,vs1,v0);}

define pcodeop vadc_vxm;
# vadc.vxm       31..26=0x10 25=0 vs2 rs1 14..12=0x4 vd 6..0=0x57
# vadc.vxm   vd, vs2, rs1, v0  # Vector-scalar
:vadc.vxm    vd, vs2, rs1, v0 is op2631=0x10 & op2525=0x0 & vs2 & rs1 & op1214=0x4 & v0 & vd & op0006=0x57 {vd=vadc_vxm(vs2,rs1,v0);}

define pcodeop vadd_vi;
# vadd.vi        31..26=0x00 vm vs2 simm5 14..12=0x3 vd 6..0=0x57
# vadd.vi vd, vs2, simm5, vm   # vector-immediate
:vadd.vi  vd, vs2, simm5         is op2631=0 & op2525=0x1 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vadd_vi(vs2,simm5);}
:vadd.vi  vd, vs2, simm5, "v0.t" is op2631=0 & op2525=0x0 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vadd_vi(vs2,simm5,v0);}

define pcodeop vadd_vv;
# vadd.vv         31..26=0x00 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vadd.vv vd, vs2, vs1, vm   # Vector-vector
:vadd.vv  vd, vs2, vs1         is op2631=0 & op2525=0x1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vadd_vv(vs2,vs1);}
:vadd.vv  vd, vs2, vs1, "v0.t" is op2631=0 & op2525=0x0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vadd_vv(vs2,vs1,v0);}

define pcodeop vadd_vx;
# vadd.vx        31..26=0x00 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vadd.vx vd, vs2, rs1, vm   # vector-scalar
:vadd.vx  vd, vs2, rs1         is op2631=0 & op2525=0x1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vadd_vx(vs2,rs1);}
:vadd.vx  vd, vs2, rs1, "v0.t" is op2631=0 & op2525=0x0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vadd_vx(vs2,rs1,v0);}

define pcodeop vamoaddei16_v;
# vamoaddei16.v  31..27=0x00 wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamoaddei16.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoaddei16.v  vd, (rs1), vs2, vs3         is op2731=0x0 & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x5 & vs3 & vd & op0006=0x2f {vd=vamoaddei16_v(rs1,vs2,vs3);}
:vamoaddei16.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0x0 & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x5 & vs3 & vd & op0006=0x2f {vd=vamoaddei16_v(rs1,vs2,vs3,v0);}

# vamoaddei16.v  31..27=0x00 wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamoaddei16.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoaddei16.v  zero, (rs1), vs2, vs3         is op2731=0x0 & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x5 & zero & vs3 & vd & op0006=0x2f {vamoaddei16_v(rs1,vs2,vs3);}
:vamoaddei16.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0x0 & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x5 & zero & vs3 & vd & op0006=0x2f {vamoaddei16_v(rs1,vs2,vs3,v0);}

define pcodeop vamoaddei32_v;
# vamoaddei32.v  31..27=0x00 wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamoaddei32.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoaddei32.v  vd, (rs1), vs2, vs3         is op2731=0x0 & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x6 & vs3 & vd & op0006=0x2f {vd=vamoaddei32_v(rs1,vs2,vs3);}
:vamoaddei32.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0x0 & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x6 & vs3 & vd & op0006=0x2f {vd=vamoaddei32_v(rs1,vs2,vs3,v0);}

# vamoaddei32.v  31..27=0x00 wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamoaddei32.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoaddei32.v  zero, (rs1), vs2, vs3         is op2731=0x0 & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x6 & zero & vs3 & vd & op0006=0x2f {vamoaddei32_v(rs1,vs2,vs3);}
:vamoaddei32.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0x0 & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x6 & zero & vs3 & vd & op0006=0x2f {vamoaddei32_v(rs1,vs2,vs3,v0);}

define pcodeop vamoaddei64_v;
# vamoaddei64.v  31..27=0x00 wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamoaddei64.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoaddei64.v  vd, (rs1), vs2, vs3         is op2731=0x0 & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x7 & vs3 & vd & op0006=0x2f {vd=vamoaddei64_v(rs1,vs2,vs3);}
:vamoaddei64.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0x0 & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x7 & vs3 & vd & op0006=0x2f {vd=vamoaddei64_v(rs1,vs2,vs3,v0);}

# vamoaddei64.v  31..27=0x00 wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamoaddei64.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoaddei64.v  zero, (rs1), vs2, vs3         is op2731=0x0 & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x7 & zero & vs3 & vd & op0006=0x2f {vamoaddei64_v(rs1,vs2,vs3);}
:vamoaddei64.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0x0 & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x7 & zero & vs3 & vd & op0006=0x2f {vamoaddei64_v(rs1,vs2,vs3,v0);}

define pcodeop vamoaddei8_v;
# vamoaddei8.v   31..27=0x00 wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamoaddei8.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoaddei8.v  vd, (rs1), vs2, vs3         is op2731=0x0 & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x0 & vs3 & vd & op0006=0x2f {vd=vamoaddei8_v(rs1,vs2,vs3);}
:vamoaddei8.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0x0 & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x0 & vs3 & vd & op0006=0x2f {vd=vamoaddei8_v(rs1,vs2,vs3,v0);}

# vamoaddei8.v   31..27=0x00 wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamoaddei8.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoaddei8.v  zero, (rs1), vs2, vs3          is op2731=0x0 & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x0 & zero & vs3 & vd & op0006=0x2f {vamoaddei8_v(rs1,vs2,vs3);}
:vamoaddei8.v  zero, (rs1), vs2, vs3 , "v0.t" is op2731=0x0 & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x0 & zero & vs3 & vd & op0006=0x2f {vamoaddei8_v(rs1,vs2,vs3,v0);}

define pcodeop vamoandei16_v;
# vamoandei16.v  31..27=0x0c wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamoandei16.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoandei16.v  vd, (rs1), vs2, vs3         is op2731=0xc & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x5 & vs3 & vd & op0006=0x2f {vd=vamoandei16_v(rs1,vs2,vs3);}
:vamoandei16.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0xc & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x5 & vs3 & vd & op0006=0x2f {vd=vamoandei16_v(rs1,vs2,vs3,v0);}

# vamoandei16.v  31..27=0x0c wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamoandei16.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoandei16.v  zero, (rs1), vs2, vs3         is op2731=0xc & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x5 & zero & vs3 & vd & op0006=0x2f {vamoandei16_v(rs1,vs2,vs3);}
:vamoandei16.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0xc & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x5 & zero & vs3 & vd & op0006=0x2f {vamoandei16_v(rs1,vs2,vs3,v0);}

define pcodeop vamoandei32_v;
# vamoandei32.v  31..27=0x0c wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamoandei32.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoandei32.v  vd, (rs1), vs2, vs3         is op2731=0xc & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x6 & vs3 & vd & op0006=0x2f {vd=vamoandei32_v(rs1,vs2,vs3);}
:vamoandei32.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0xc & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x6 & vs3 & vd & op0006=0x2f {vd=vamoandei32_v(rs1,vs2,vs3,v0);}

# vamoandei32.v  31..27=0x0c wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamoandei32.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoandei32.v  zero, (rs1), vs2, vs3         is op2731=0xc & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x6 & zero & vs3 & op0006=0x2f {vamoandei32_v(rs1,vs2,vs3);}
:vamoandei32.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0xc & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x6 & zero & vs3 & op0006=0x2f {vamoandei32_v(rs1,vs2,vs3,v0);}

define pcodeop vamoandei64_v;
# vamoandei64.v  31..27=0x0c wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamoandei64.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoandei64.v  vd, (rs1), vs2, vs3         is op2731=0xc & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x7 & vs3 & vd & op0006=0x2f {vd=vamoandei64_v(rs1,vs2,vs3);}
:vamoandei64.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0xc & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x7 & vs3 & vd & op0006=0x2f {vd=vamoandei64_v(rs1,vs2,vs3,v0);}

# vamoandei64.v  31..27=0x0c wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamoandei64.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoandei64.v  zero, (rs1), vs2, vs3         is op2731=0xc & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x7 & zero & vs3 & op0006=0x2f {vamoandei64_v(rs1,vs2,vs3);}
:vamoandei64.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0xc & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x7 & zero & vs3 & op0006=0x2f {vamoandei64_v(rs1,vs2,vs3,v0);}

define pcodeop vamoandei8_v;
# vamoandei8.v   31..27=0x0c wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamoandei8.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoandei8.v  vd, (rs1), vs2, vs3         is op2731=0xc & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x0 & vs3 & vd & op0006=0x2f {vd=vamoandei8_v(rs1,vs2,vs3);}
:vamoandei8.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0xc & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x0 & vs3 & vd & op0006=0x2f {vd=vamoandei8_v(rs1,vs2,vs3,v0);}

# vamoandei8.v   31..27=0x0c wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamoandei8.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoandei8.v  zero, (rs1), vs2, vs3         is op2731=0xc & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x0 & zero & vs3 & op0006=0x2f {vamoandei8_v(rs1,vs2,vs3);}
:vamoandei8.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0xc & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x0 & zero & vs3 & op0006=0x2f {vamoandei8_v(rs1,vs2,vs3,v0);}

define pcodeop vamomaxei16_v;
# vamomaxei16.v  31..27=0x14 wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamomaxei16.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamomaxei16.v  vd, (rs1), vs2, vs3         is op2731=0x14 & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x5 & vs3 & vd & op0006=0x2f {vd=vamomaxei16_v(rs1,vs2,vs3);}
:vamomaxei16.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0x14 & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x5 & vs3 & vd & op0006=0x2f {vd=vamomaxei16_v(rs1,vs2,vs3,v0);}

# vamomaxei16.v  31..27=0x14 wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamomaxei16.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamomaxei16.v  zero, (rs1), vs2, vs3         is op2731=0x14 & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x5 & zero & vs3 & op0006=0x2f {vamomaxei16_v(rs1,vs2,vs3);}
:vamomaxei16.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0x14 & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x5 & zero & vs3 & op0006=0x2f {vamomaxei16_v(rs1,vs2,vs3,v0);}

define pcodeop vamomaxei32_v;
# vamomaxei32.v  31..27=0x14 wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamomaxei32.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamomaxei32.v  vd, (rs1), vs2, vs3         is op2731=0x14 & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x6 & vs3 & vd & op0006=0x2f {vd=vamomaxei32_v(rs1,vs2,vs3);}
:vamomaxei32.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0x14 & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x6 & vs3 & vd & op0006=0x2f {vd=vamomaxei32_v(rs1,vs2,vs3,v0);}

# vamomaxei32.v  31..27=0x14 wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamomaxei32.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamomaxei32.v  zero, (rs1), vs2, vs3         is op2731=0x14 & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x6 & zero & vs3 & op0006=0x2f {vamomaxei32_v(rs1,vs2,vs3);}
:vamomaxei32.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0x14 & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x6 & zero & vs3 & op0006=0x2f {vamomaxei32_v(rs1,vs2,vs3,v0);}

define pcodeop vamomaxei64_v;
# vamomaxei64.v  31..27=0x14 wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamomaxei64.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamomaxei64.v  vd, (rs1), vs2, vs3         is op2731=0x14 & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x7 & vs3 & vd & op0006=0x2f {vd=vamomaxei64_v(rs1,vs2,vs3);}
:vamomaxei64.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0x14 & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x7 & vs3 & vd & op0006=0x2f {vd=vamomaxei64_v(rs1,vs2,vs3,v0);}

# vamomaxei64.v  31..27=0x14 wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamomaxei64.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamomaxei64.v  zero, (rs1), vs2, vs3         is op2731=0x14 & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x7 & zero & vs3 & op0006=0x2f {vamomaxei64_v(rs1,vs2,vs3);}
:vamomaxei64.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0x14 & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x7 & zero & vs3 & op0006=0x2f {vamomaxei64_v(rs1,vs2,vs3,v0);}

define pcodeop vamomaxei8_v;
# vamomaxei8.v   31..27=0x14 wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamomaxei8.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamomaxei8.v  vd, (rs1), vs2, vs3         is op2731=0x14 & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x0 & vs3 & vd & op0006=0x2f {vd=vamomaxei8_v(rs1,vs2,vs3);}
:vamomaxei8.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0x14 & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x0 & vs3 & vd & op0006=0x2f {vd=vamomaxei8_v(rs1,vs2,vs3,v0);}

# vamomaxei8.v   31..27=0x14 wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamomaxei8.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamomaxei8.v  zero, (rs1), vs2, vs3         is op2731=0x14 & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x0 & zero & vs3 & vd & op0006=0x2f {vamomaxei8_v(rs1,vs2,vs3);}
:vamomaxei8.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0x14 & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x0 & zero & vs3 & vd & op0006=0x2f {vamomaxei8_v(rs1,vs2,vs3,v0);}

define pcodeop vamomaxuei16_v;
# vamomaxuei16.v 31..27=0x1c wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamomaxuei16.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamomaxuei16.v  vd, (rs1), vs2, vs3         is op2731=0x1c & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x5 & vs3 & vd & op0006=0x2f {vd=vamomaxuei16_v(rs1,vs2,vs3);}
:vamomaxuei16.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0x1c & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x5 & vs3 & vd & op0006=0x2f {vd=vamomaxuei16_v(rs1,vs2,vs3,v0);}

# vamomaxuei16.v 31..27=0x1c wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamomaxuei16.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamomaxuei16.v  zero, (rs1), vs2, vs3         is op2731=0x1c & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x5 & zero & vs3 & op0006=0x2f {vamomaxuei16_v(rs1,vs2,vs3);}
:vamomaxuei16.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0x1c & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x5 & zero & vs3 & op0006=0x2f {vamomaxuei16_v(rs1,vs2,vs3,v0);}

define pcodeop vamomaxuei32_v;
# vamomaxuei32.v 31..27=0x1c wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamomaxuei32.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamomaxuei32.v  vd, (rs1), vs2, vs3         is op2731=0x1c & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x6 & vs3 & vd & op0006=0x2f {vd=vamomaxuei32_v(rs1,vs2,vs3);}
:vamomaxuei32.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0x1c & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x6 & vs3 & vd & op0006=0x2f {vd=vamomaxuei32_v(rs1,vs2,vs3,v0);}

# vamomaxuei32.v 31..27=0x1c wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamomaxuei32.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamomaxuei32.v  zero, (rs1), vs2, vs3         is op2731=0x1c & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x6 & zero & vs3 & op0006=0x2f {vamomaxuei32_v(rs1,vs2,vs3);}
:vamomaxuei32.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0x1c & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x6 & zero & vs3 & op0006=0x2f {vamomaxuei32_v(rs1,vs2,vs3,v0);}

define pcodeop vamomaxuei64_v;
# vamomaxuei64.v 31..27=0x1c wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamomaxuei64.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamomaxuei64.v  vd, (rs1), vs2, vs3         is op2731=0x1c & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x7 & vs3 & vd & op0006=0x2f {vd=vamomaxuei64_v(rs1,vs2,vs3);}
:vamomaxuei64.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0x1c & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x7 & vs3 & vd & op0006=0x2f {vd=vamomaxuei64_v(rs1,vs2,vs3,v0);}

# vamomaxuei64.v 31..27=0x1c wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamomaxuei64.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamomaxuei64.v  zero, (rs1), vs2, vs3         is op2731=0x1c & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x7 & zero & vs3 & op0006=0x2f {vamomaxuei64_v(rs1,vs2,vs3);}
:vamomaxuei64.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0x1c & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x7 & zero & vs3 & op0006=0x2f {vamomaxuei64_v(rs1,vs2,vs3,v0);}

define pcodeop vamomaxuei8_v;
# vamomaxuei8.v  31..27=0x1c wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamomaxuei8.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamomaxuei8.v  vd, (rs1), vs2, vs3         is op2731=0x1c & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x0 & vs3 & vd & op0006=0x2f {vd=vamomaxuei8_v(rs1,vs2,vs3);}
:vamomaxuei8.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0x1c & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x0 & vs3 & vd & op0006=0x2f {vd=vamomaxuei8_v(rs1,vs2,vs3,v0);}

# vamomaxuei8.v  31..27=0x1c wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamomaxuei8.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamomaxuei8.v  zero, (rs1), vs2, vs3         is op2731=0x1c & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x0 & zero & vs3 & op0006=0x2f {vamomaxuei8_v(rs1,vs2,vs3);}
:vamomaxuei8.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0x1c & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x0 & zero & vs3 & op0006=0x2f {vamomaxuei8_v(rs1,vs2,vs3,v0);}

define pcodeop vamominei16_v;
# vamominei16.v  31..27=0x10 wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamominei16.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamominei16.v  vd, (rs1), vs2, vs3         is op2731=0x10 & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x5 & vs3 & vd & op0006=0x2f {vd=vamominei16_v(rs1,vs2,vs3);}
:vamominei16.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0x10 & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x5 & vs3 & vd & op0006=0x2f {vd=vamominei16_v(rs1,vs2,vs3,v0);}

# vamominei16.v  31..27=0x10 wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamominei16.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamominei16.v  zero, (rs1), vs2, vs3         is op2731=0x10 & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x5 & zero & vs3 & op0006=0x2f {vamominei16_v(rs1,vs2,vs3);}
:vamominei16.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0x10 & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x5 & zero & vs3 & op0006=0x2f {vamominei16_v(rs1,vs2,vs3,v0);}

define pcodeop vamominei32_v;
# vamominei32.v  31..27=0x10 wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamominei32.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamominei32.v  vd, (rs1), vs2, vs3         is op2731=0x10 & wd=0x1 & op2525=0x1 & vs2 & rs1 & op1214=0x6 & vs3 & vd & op0006=0x2f {vd=vamominei32_v(rs1,vs2,vs3);}
:vamominei32.v  vd, (rs1), vs2, vs3, "v0.t" is op2731=0x10 & wd=0x1 & op2525=0x0 & vs2 & rs1 & op1214=0x6 & vs3 & vd & op0006=0x2f {vd=vamominei32_v(rs1,vs2,vs3,v0);}

# vamominei32.v  31..27=0x10 wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamominei32.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamominei32.v  zero, (rs1), vs2, vs3         is op2731=0x10 & wd=0x0 & op2525=0x1 & vs2 & rs1 & op1214=0x6 & zero & vs3 & op0006=0x2f {vamominei32_v(rs1,vs2,vs3);}
:vamominei32.v  zero, (rs1), vs2, vs3, "v0.t" is op2731=0x10 & wd=0x0 & op2525=0x0 & vs2 & rs1 & op1214=0x6 & zero & vs3 & op0006=0x2f {vamominei32_v(rs1,vs2,vs3,v0);}

define pcodeop vamominei64_v;
# vamominei64.v  31..27=0x10 wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamominei64.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamominei64.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x10 & wd=0x1 & vm & vs2 & rs1 & op1214=0x7 & vs3 & vd & op0006=0x2f {vd=vamominei64_v(rs1,vs2,vs3,vm);}

# vamominei64.v  31..27=0x10 wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamominei64.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamominei64.v  zero, (rs1), vs2, vs3, vm  is op2731=0x10 & wd=0x0 & vm & vs2 & rs1 & op1214=0x7 & zero & vs3 & op0006=0x2f {vamominei64_v(rs1,vs2,vs3,vm);}

define pcodeop vamominei8_v;
# vamominei8.v   31..27=0x10 wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamominei8.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamominei8.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x10 & wd=0x1 & vm & vs2 & rs1 & op1214=0x0 & vs3 & vd & op0006=0x2f {vd=vamominei8_v(rs1,vs2,vs3,vm);}

# vamominei8.v   31..27=0x10 wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamominei8.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamominei8.v  zero, (rs1), vs2, vs3, vm  is op2731=0x10 & wd=0x0 & vm & vs2 & rs1 & op1214=0x0 & zero & vs3 & op0006=0x2f {vamominei8_v(rs1,vs2,vs3,vm);}

define pcodeop vamominuei16_v;
# vamominuei16.v 31..27=0x18 wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamominuei16.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamominuei16.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x18 & wd=0x1 & vm & vs2 & rs1 & op1214=0x5 & vs3 & vd & op0006=0x2f {vd=vamominuei16_v(rs1,vs2,vs3,vm);}

# vamominuei16.v 31..27=0x18 wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamominuei16.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamominuei16.v  zero, (rs1), vs2, vs3, vm  is op2731=0x18 & wd=0x0 & vm & vs2 & rs1 & op1214=0x5 & zero & vs3 & op0006=0x2f {vamominuei16_v(rs1,vs2,vs3,vm);}

define pcodeop vamominuei32_v;
# vamominuei32.v 31..27=0x18 wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamominuei32.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamominuei32.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x18 & wd=0x1 & vm & vs2 & rs1 & op1214=0x6 & vs3 & vd & op0006=0x2f {vd=vamominuei32_v(rs1,vs2,vs3,vm);}

# vamominuei32.v 31..27=0x18 wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamominuei32.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamominuei32.v  zero, (rs1), vs2, vs3, vm  is op2731=0x18 & wd=0x0 & vm & vs2 & rs1 & op1214=0x6 & zero & vs3 & op0006=0x2f {vamominuei32_v(rs1,vs2,vs3,vm);}

define pcodeop vamominuei64_v;
# vamominuei64.v 31..27=0x18 wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamominuei64.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamominuei64.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x18 & wd=0x1 & vm & vs2 & rs1 & op1214=0x7 & vs3 & vd & op0006=0x2f {vd=vamominuei64_v(rs1,vs2,vs3,vm);}

# vamominuei64.v 31..27=0x18 wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamominuei64.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamominuei64.v  zero, (rs1), vs2, vs3, vm  is op2731=0x18 & wd=0x0 & vm & vs2 & rs1 & op1214=0x7 & zero & vs3 & op0006=0x2f {vamominuei64_v(rs1,vs2,vs3,vm);}

define pcodeop vamominuei8_v;
# vamominuei8.v  31..27=0x18 wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamominuei8.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamominuei8.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x18 & wd=0x1 & vm & vs2 & rs1 & op1214=0x0 & vs3 & vd & op0006=0x2f {vd=vamominuei8_v(rs1,vs2,vs3,vm);}

# vamominuei8.v  31..27=0x18 wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamominuei8.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamominuei8.v  zero, (rs1), vs2, vs3, vm  is op2731=0x18 & wd=0x0 & vm & vs2 & rs1 & op1214=0x0 & zero & vs3 & op0006=0x2f {vamominuei8_v(rs1,vs2,vs3,vm);}

define pcodeop vamoorei16_v;
# vamoorei16.v   31..27=0x08 wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamoorei16.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoorei16.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x8 & wd=0x1 & vm & vs2 & rs1 & op1214=0x5 & vs3 & vd & op0006=0x2f {vd=vamoorei16_v(rs1,vs2,vs3,vm);}

# vamoorei16.v   31..27=0x08 wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamoorei16.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoorei16.v  zero, (rs1), vs2, vs3, vm  is op2731=0x8 & wd=0x0 & vm & vs2 & rs1 & op1214=0x5 & zero & vs3 & op0006=0x2f {vamoorei16_v(rs1,vs2,vs3,vm);}

define pcodeop vamoorei32_v;
# vamoorei32.v   31..27=0x08 wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamoorei32.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoorei32.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x8 & wd=0x1 & vm & vs2 & rs1 & op1214=0x6 & vs3 & vd & op0006=0x2f {vd=vamoorei32_v(rs1,vs2,vs3,vm);}

# vamoorei32.v   31..27=0x08 wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamoorei32.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoorei32.v  zero, (rs1), vs2, vs3, vm  is op2731=0x8 & wd=0x0 & vm & vs2 & rs1 & op1214=0x6 & zero & vs3 & op0006=0x2f {vamoorei32_v(rs1,vs2,vs3,vm);}

define pcodeop vamoorei64_v;
# vamoorei64.v   31..27=0x08 wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamoorei64.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoorei64.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x8 & wd=0x1 & vm & vs2 & rs1 & op1214=0x7 & vs3 & vd & op0006=0x2f {vd=vamoorei64_v(rs1,vs2,vs3,vm);}

# vamoorei64.v   31..27=0x08 wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamoorei64.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoorei64.v  zero, (rs1), vs2, vs3, vm  is op2731=0x8 & wd=0x0 & vm & vs2 & rs1 & op1214=0x7 & zero & vs3 & op0006=0x2f {vamoorei64_v(rs1,vs2,vs3,vm);}

define pcodeop vamoorei8_v;
# vamoorei8.v    31..27=0x08 wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamoorei8.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoorei8.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x8 & wd=0x1 & vm & vs2 & rs1 & op1214=0x0 & vs3 & vd & op0006=0x2f {vd=vamoorei8_v(rs1,vs2,vs3,vm);}

# vamoorei8.v    31..27=0x08 wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamoorei8.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoorei8.v  zero, (rs1), vs2, vs3, vm  is op2731=0x8 & wd=0x0 & vm & vs2 & rs1 & op1214=0x0 & zero & vs3 & op0006=0x2f {vamoorei8_v(rs1,vs2,vs3,vm);}

define pcodeop vamoswapei16_v;
# vamoswapei16.v 31..27=0x01 wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamoswapei16.v vd, (rs1), vs2, vs3, vm # Write original value to register, wd=1
:vamoswapei16.v  vd, (rs1), vs2, vs3, vm  is op2731=0x1 & wd=0x1 & vm & vs2 & rs1 & op1214=0x5 & vs3 & vd & op0006=0x2f {vd=vamoswapei16_v(rs1,vs2,vs3,vm);}

# vamoswapei16.v 31..27=0x01 wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamoswapei16.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoswapei16.v  zero, (rs1), vs2, vs3, vm  is op2731=0x1 & wd=0x0 & vm & vs2 & rs1 & op1214=0x5 & zero & vs3 & op0006=0x2f {vamoswapei16_v(rs1,vs2,vs3,vm);}

define pcodeop vamoswapei32_v;
# vamoswapei32.v 31..27=0x01 wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamoswapei32.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoswapei32.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x1 & wd=0x1 & vm & vs2 & rs1 & op1214=0x6 & vs3 & vd & op0006=0x2f {vd=vamoswapei32_v(rs1,vs2,vs3,vm);}

# vamoswapei32.v 31..27=0x01 wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamoswapei32.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoswapei32.v  zero, (rs1), vs2, vs3, vm  is op2731=0x1 & wd=0x0 & vm & vs2 & rs1 & op1214=0x6 & zero & vs3 & op0006=0x2f {vamoswapei32_v(rs1,vs2,vs3,vm);}

define pcodeop vamoswapei64_v;
# vamoswapei64.v 31..27=0x01 wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamoswapei64.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoswapei64.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x1 & wd=0x1 & vm & vs2 & rs1 & op1214=0x7 & vs3 & vd & op0006=0x2f {vd=vamoswapei64_v(rs1,vs2,vs3,vm);}

# vamoswapei64.v 31..27=0x01 wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamoswapei64.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoswapei64.v  zero, (rs1), vs2, vs3, vm  is op2731=0x1 & wd=0x0 & vm & vs2 & rs1 & op1214=0x7 & zero & vs3 & op0006=0x2f {vamoswapei64_v(rs1,vs2,vs3,vm);}

define pcodeop vamoswapei8_v;
# vamoswapei8.v  31..27=0x01 wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamoswapei8.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoswapei8.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x1 & wd=0x1 & vm & vs2 & rs1 & op1214=0x0 & vs3 & vd & op0006=0x2f {vd=vamoswapei8_v(rs1,vs2,vs3,vm);}

# vamoswapei8.v  31..27=0x01 wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamoswapei8.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoswapei8.v  zero, (rs1), vs2, vs3, vm  is op2731=0x1 & wd=0x0 & vm & vs2 & rs1 & op1214=0x0 & zero & vs3 & op0006=0x2f {vamoswapei8_v(rs1,vs2,vs3,vm);}

define pcodeop vamoxorei16_v;
# vamoxorei16.v  31..27=0x04 wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamoxorei16.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoxorei16.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x4 & wd=0x1 & vm & vs2 & rs1 & op1214=0x5 & vs3 & vd & op0006=0x2f {vd=vamoxorei16_v(rs1,vs2,vs3,vm);}

# vamoxorei16.v  31..27=0x04 wd vm vs2 rs1 14..12=0x5 vd 6..0=0x2f
# vamoxorei16.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoxorei16.v  zero, (rs1), vs2, vs3, vm  is op2731=0x4 & wd=0x0 & vm & vs2 & rs1 & op1214=0x5 & zero & vs3 & op0006=0x2f {vamoxorei16_v(rs1,vs2,vs3,vm);}

define pcodeop vamoxorei32_v;
# vamoxorei32.v  31..27=0x04 wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamoxorei32.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoxorei32.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x4 & wd=0x1 & vm & vs2 & rs1 & op1214=0x6 & vs3 & vd & op0006=0x2f {vd=vamoxorei32_v(rs1,vs2,vs3,vm);}

# vamoxorei32.v  31..27=0x04 wd vm vs2 rs1 14..12=0x6 vd 6..0=0x2f
# vamoxorei32.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoxorei32.v  zero, (rs1), vs2, vs3, vm  is op2731=0x4 & wd=0x0 & vm & vs2 & rs1 & op1214=0x6 & zero & vs3 & op0006=0x2f {vamoxorei32_v(rs1,vs2,vs3,vm);}

define pcodeop vamoxorei64_v;
# vamoxorei64.v  31..27=0x04 wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamoxorei64.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoxorei64.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x4 & wd=0x1 & vm & vs2 & rs1 & op1214=0x7 & vs3 & vd & op0006=0x2f {vd=vamoxorei64_v(rs1,vs2,vs3,vm);}

# vamoxorei64.v  31..27=0x04 wd vm vs2 rs1 14..12=0x7 vd 6..0=0x2f
# vamoxorei64.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoxorei64.v  zero, (rs1), vs2, vs3, vm  is op2731=0x4 & wd=0x0 & vm & vs2 & rs1 & op1214=0x7 & zero & vs3 & op0006=0x2f {vamoxorei64_v(rs1,vs2,vs3,vm);}

define pcodeop vamoxorei8_v;
# vamoxorei8.v   31..27=0x04 wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamoxorei8.v vd, (rs1), vs2, vs3,  vm # Write original value to register, wd=1
:vamoxorei8.v  vd, (rs1), vs2, vs3,  vm  is op2731=0x4 & wd=0x1 & vm & vs2 & rs1 & op1214=0x0 & vs3 & vd & op0006=0x2f {vd=vamoxorei8_v(rs1,vs2,vs3,vm);}

# vamoxorei8.v   31..27=0x04 wd vm vs2 rs1 14..12=0x0 vd 6..0=0x2f
# vamoxorei8.v zero, (rs1), vs2, vs3, vm # Do not write original value to register, wd=0
:vamoxorei8.v  zero, (rs1), vs2, vs3, vm  is op2731=0x4 & wd=0x0 & vm & vs2 & rs1 & op1214=0x0 & zero & vs3 & vd & op0006=0x2f {vamoxorei8_v(rs1,vs2,vs3,vm);}

define pcodeop vand_vi;
# vand.vi        31..26=0x09 vm vs2 simm5 14..12=0x3 vd 6..0=0x57
# vand.vi vd, vs2, simm5, vm   # vector-immediate
:vand.vi  vd, vs2, simm5         is op2631=0x9 & op2525=1 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vand_vi(vs2,simm5);}
:vand.vi  vd, vs2, simm5, "v0.t" is op2631=0x9 & op2525=0 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vand_vi(vs2,simm5,v0);}

define pcodeop vand_vv;
# vand.vv         31..26=0x09 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vand.vv vd, vs2, vs1, vm   # Vector-vector
:vand.vv  vd, vs2, vs1         is op2631=0x9 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vand_vv(vs2,vs1);}
:vand.vv  vd, vs2, vs1, "v0.t" is op2631=0x9 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vand_vv(vs2,vs1,v0);}

define pcodeop vand_vx;
# vand.vx        31..26=0x09 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vand.vx vd, vs2, rs1, vm   # vector-scalar
:vand.vx  vd, vs2, rs1         is op2631=0x9 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vand_vx(vs2,rs1);}
:vand.vx  vd, vs2, rs1, "v0.t" is op2631=0x9 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vand_vx(vs2,rs1,v0);}

define pcodeop vasub_vv;
# vasub.vv       31..26=0x0b vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vasub.vv vd, vs2, vs1, vm   # roundoff_signed(vs2[i] - vs1[i], 1)
:vasub.vv  vd, vs2, vs1         is op2631=0xb & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vasub_vv(vs2,vs1);}
:vasub.vv  vd, vs2, vs1, "v0.t" is op2631=0xb & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vasub_vv(vs2,vs1,v0);}

define pcodeop vasub_vx;
# vasub.vx       31..26=0x0b vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vasub.vx vd, vs2, rs1, vm   # roundoff_signed(vs2[i] - x[rs1], 1)
:vasub.vx  vd, vs2, rs1         is op2631=0xb & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vasub_vx(vs2,rs1);}
:vasub.vx  vd, vs2, rs1, "v0.t" is op2631=0xb & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vasub_vx(vs2,rs1,v0);}

define pcodeop vasubu_vv;
# vasubu.vv      31..26=0x0a vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vasubu.vv vd, vs2, vs1, vm   # roundoff_unsigned(vs2[i] - vs1[i], 1)
:vasubu.vv  vd, vs2, vs1         is op2631=0xa & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vasubu_vv(vs2,vs1);}
:vasubu.vv  vd, vs2, vs1, "v0.t" is op2631=0xa & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vasubu_vv(vs2,vs1,v0);}

define pcodeop vasubu_vx;
# vasubu.vx      31..26=0x0a vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vasubu.vx vd, vs2, rs1, vm   # roundoff_unsigned(vs2[i] - x[rs1], 1)
:vasubu.vx  vd, vs2, rs1         is op2631=0xa & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vasubu_vx(vs2,rs1);}
:vasubu.vx  vd, vs2, rs1, "v0.t" is op2631=0xa & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vasubu_vx(vs2,rs1,v0);}

define pcodeop vcompress_vm;
# vcompress.vm   31..26=0x17 25=1 vs2 vs1 14..12=0x2 vd 6..0=0x57
# vcompress.vm vd, vs2, vs1  # Compress into vd elements of vs2 where vs1 is enabled
:vcompress.vm  vd, vs2, vs1         is op2631=0x17 & op2525=0x1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vcompress_vm(vs2,vs1);}
:vcompress.vm  vd, vs2, vs1, "v0.t" is op2631=0x17 & op2525=0x0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vcompress_vm(vs2,vs1,v0);}

define pcodeop vdiv_vv;
# vdiv.vv        31..26=0x21 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vdiv.vv vd, vs2, vs1, vm   # Vector-vector
:vdiv.vv  vd, vs2, vs1         is op2631=0x21 & op2525=0x1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vdiv_vv(vs2,vs1);}
:vdiv.vv  vd, vs2, vs1, "v0.t" is op2631=0x21 & op2525=0x0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vdiv_vv(vs2,vs1,v0);}

define pcodeop vdiv_vx;
# vdiv.vx        31..26=0x21 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vdiv.vx vd, vs2, rs1, vm   # vector-scalar
:vdiv.vx  vd, vs2, rs1         is op2631=0x21 & op2525=0x1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vdiv_vx(vs2,rs1);}
:vdiv.vx  vd, vs2, rs1, "v0.t" is op2631=0x21 & op2525=0x0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vdiv_vx(vs2,rs1,v0);}

define pcodeop vdivu_vv;
# vdivu.vv       31..26=0x20 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vdivu.vv vd, vs2, vs1, vm   # Vector-vector
:vdivu.vv  vd, vs2, vs1         is op2631=0x20 & op2525=0x1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vdivu_vv(vs2,vs1);}
:vdivu.vv  vd, vs2, vs1, "v0.t" is op2631=0x20 & op2525=0x0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vdivu_vv(vs2,vs1,v0);}

define pcodeop vdivu_vx;
# vdivu.vx       31..26=0x20 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vdivu.vx vd, vs2, rs1, vm   # vector-scalar
:vdivu.vx  vd, vs2, rs1         is op2631=0x20 & op2525=0x1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vdivu_vx(vs2,rs1);}
:vdivu.vx  vd, vs2, rs1, "v0.t" is op2631=0x20 & op2525=0x0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vdivu_vx(vs2,rs1,v0);}

define pcodeop vdot_vv;
# vdot.vv        31..26=0x39 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vdot.vv vd, vs2, vs1, vm # Vector-vector
:vdot.vv  vd, vs2, vs1         is op2631=0x39 & op2525=0x1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vdot_vv(vs2,vs1);}
:vdot.vv  vd, vs2, vs1, "v0.t" is op2631=0x39 & op2525=0x0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vdot_vv(vs2,vs1,v0);}

define pcodeop vdotu_vv;
# vdotu.vv       31..26=0x38 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vdotu.vv vd, vs2, vs1, vm # Vector-vector
:vdotu.vv  vd, vs2, vs1         is op2631=0x38 & op2525=0x1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vdotu_vv(vs2,vs1);}
:vdotu.vv  vd, vs2, vs1, "v0.t" is op2631=0x38 & op2525=0x0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vdotu_vv(vs2,vs1,v0);}

define pcodeop vfadd_vf;
# vfadd.vf        31..26=0x00 vm vs2 rs1 14..12=0x5 vd 6..0=0x57
# vfadd.vf vd, vs2, frs1, vm   # vector-scalar
:vfadd.vf  vd, vs2, frs1         is op2631=0x0 & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfadd_vf(vs2,frs1);}
:vfadd.vf  vd, vs2, frs1, "v0.t" is op2631=0x0 & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfadd_vf(vs2,frs1,v0);}

define pcodeop vfadd_vv;
# vfadd.vv       31..26=0x00 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfadd.vv vd, vs2, vs1, vm   # Vector-vector
:vfadd.vv  vd, vs2, vs1         is op2631=0x0 & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfadd_vv(vs2,vs1);}
:vfadd.vv  vd, vs2, vs1, "v0.t" is op2631=0x0 & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfadd_vv(vs2,vs1,v0);}

define pcodeop vfclass_v;
# vfclass.v      31..26=0x13 vm vs2 19..15=0x10 14..12=0x1 vd 6..0=0x57
# vfclass.v vd, vs2, vm   # Vector-vector
:vfclass.v  vd, vs2         is op2631=0x13 & op2525=0x1 & vs2 & op1519=0x10 & op1214=0x1 & vd & op0006=0x57 {vd=vfclass_v(vs2);}
:vfclass.v  vd, vs2, "v0.t" is op2631=0x13 & op2525=0x0 & vs2 & op1519=0x10 & op1214=0x1 & vd & op0006=0x57 {vd=vfclass_v(vs2,v0);}

define pcodeop vfcvt_fxv;
# vfcvt.f.x.v      31..26=0x12 vm vs2 19..15=0x03 14..12=0x1 vd 6..0=0x57
# vfcvt.f.x.v  vd, vs2, vm       # Convert signed integer to float.
:vfcvt.f.x.v   vd, vs2         is op2631=0x12 & op2525=0x1 & vs2 & op1519=0x3 & op1214=0x1 & vd & op0006=0x57 {vd=vfcvt_fxv(vs2);}
:vfcvt.f.x.v   vd, vs2, "v0.t" is op2631=0x12 & op2525=0x0 & vs2 & op1519=0x3 & op1214=0x1 & vd & op0006=0x57 {vd=vfcvt_fxv(vs2,v0);}

define pcodeop vfcvt_fxuv;
# vfcvt.f.xu.v     31..26=0x12 vm vs2 19..15=0x02 14..12=0x1 vd 6..0=0x57
# vfcvt.f.xu.v vd, vs2, vm       # Convert unsigned integer to float.
:vfcvt.f.xu.v  vd, vs2         is op2631=0x12 & op2525=0x1 & vs2 & op1519=0x2 & op1214=0x1 & vd & op0006=0x57 {vd=vfcvt_fxuv(vs2);}
:vfcvt.f.xu.v  vd, vs2, "v0.t" is op2631=0x12 & op2525=0x0 & vs2 & op1519=0x2 & op1214=0x1 & vd & op0006=0x57 {vd=vfcvt_fxuv(vs2,v0);}

define pcodeop vfcvt_rtzxfv;
# vfcvt.rtz.x.f.v  31..26=0x12 vm vs2 19..15=0x07 14..12=0x1 vd 6..0=0x57
# vfcvt.rtz.x.f.v  vd, vs2, vm   # Convert float to signed integer, truncating.
:vfcvt.rtz.x.f.v   vd, vs2         is op2631=0x12 & op2525=0x1 & vs2 & op1519=0x7 & op1214=0x1 & vd & op0006=0x57 {vd=vfcvt_rtzxfv(vs2);}
:vfcvt.rtz.x.f.v   vd, vs2, "v0.t" is op2631=0x12 & op2525=0x0 & vs2 & op1519=0x7 & op1214=0x1 & vd & op0006=0x57 {vd=vfcvt_rtzxfv(vs2,v0);}

define pcodeop vfcvt_rtzxufv;
# vfcvt.rtz.xu.f.v 31..26=0x12 vm vs2 19..15=0x06 14..12=0x1 vd 6..0=0x57
# vfcvt.rtz.xu.f.v vd, vs2, vm   # Convert float to unsigned integer, truncating.
:vfcvt.rtz.xu.f.v  vd, vs2         is op2631=0x12 & op2525=0x1 & vs2 & op1519=0x6 & op1214=0x1 & vd & op0006=0x57 {vd=vfcvt_rtzxufv(vs2);}
:vfcvt.rtz.xu.f.v  vd, vs2, "v0.t" is op2631=0x12 & op2525=0x0 & vs2 & op1519=0x6 & op1214=0x1 & vd & op0006=0x57 {vd=vfcvt_rtzxufv(vs2,v0);}

define pcodeop vfcvt_xfv;
# vfcvt.x.f.v      31..26=0x12 vm vs2 19..15=0x01 14..12=0x1 vd 6..0=0x57
# vfcvt.x.f.v  vd, vs2, vm       # Convert float to signed integer.
:vfcvt.x.f.v   vd, vs2         is op2631=0x12 & op2525=0x1 & vs2 & op1519=0x1 & op1214=0x1 & vd & op0006=0x57 {vd=vfcvt_xfv(vs2);}
:vfcvt.x.f.v   vd, vs2, "v0.t" is op2631=0x12 & op2525=0x0 & vs2 & op1519=0x1 & op1214=0x1 & vd & op0006=0x57 {vd=vfcvt_xfv(vs2,v0);}

define pcodeop vfcvt_xufv;
# vfcvt.xu.f.v     31..26=0x12 vm vs2 19..15=0x00 14..12=0x1 vd 6..0=0x57
# vfcvt.xu.f.v vd, vs2, vm       # Convert float to unsigned integer.
:vfcvt.xu.f.v  vd, vs2         is op2631=0x12 & op2525=0x1 & vs2 & op1519=0x0 & op1214=0x1 & vd & op0006=0x57 {vd=vfcvt_xufv(vs2);}
:vfcvt.xu.f.v  vd, vs2, "v0.t" is op2631=0x12 & op2525=0x0 & vs2 & op1519=0x0 & op1214=0x1 & vd & op0006=0x57 {vd=vfcvt_xufv(vs2,v0);}

define pcodeop vfdiv_vf;
# vfdiv.vf       31..26=0x20 vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfdiv.vf vd, vs2, frs1, vm   # vector-scalar
:vfdiv.vf  vd, vs2, frs1         is op2631=0x20 & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfdiv_vf(vs2,frs1);}
:vfdiv.vf  vd, vs2, frs1, "v0.t" is op2631=0x20 & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfdiv_vf(vs2,frs1,v0);}

define pcodeop vfdiv_vv;
# vfdiv.vv       31..26=0x20 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfdiv.vv vd, vs2, vs1, vm   # Vector-vector
:vfdiv.vv  vd, vs2, vs1         is op2631=0x20 & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfdiv_vv(vs2,vs1);}
:vfdiv.vv  vd, vs2, vs1, "v0.t" is op2631=0x20 & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfdiv_vv(vs2,vs1,v0);}

define pcodeop vfdot_vv;
# vfdot.vv       31..26=0x39 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfdot.vv vd, vs2, vs1, vm # Vector-vector
:vfdot.vv  vd, vs2, vs1          is op2631=0x39 & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfdot_vv(vs2,vs1);}
:vfdot.vv  vd, vs2, vs1, "v0.t"  is op2631=0x39 & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfdot_vv(vs2,vs1,v0);}

define pcodeop vfirst_m;
# vfirst.m       31..26=0x10 vm vs2 19..15=0x11 14..12=0x2 rd 6..0=0x57
# vfirst.m rd, vs2, vm
:vfirst.m  rd, vs2         is op2631=0x10 & op2525=0x1 & vs2 & op1519=0x11 & op1214=0x2 & rd & op0006=0x57 {rd=vfirst_m(vs2);}
:vfirst.m  rd, vs2, "v0.t" is op2631=0x10 & op2525=0x0 & vs2 & op1519=0x11 & op1214=0x2 & rd & op0006=0x57 {rd=vfirst_m(vs2,v0);}

define pcodeop vfmacc_vf;
# vfmacc.vf      31..26=0x2c vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfmacc.vf vd, frs1, vs2, vm    # vd[i] = +(f[rs1] * vs2[i]) + vd[i]
:vfmacc.vf  vd, frs1, vs2         is op2631=0x2c & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmacc_vf(frs1,vs2);}
:vfmacc.vf  vd, frs1, vs2, "v0.t" is op2631=0x2c & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmacc_vf(frs1,vs2,v0);}

define pcodeop vfmacc_vv;
# vfmacc.vv      31..26=0x2c vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfmacc.vv vd, vs1, vs2, vm    # vd[i] = +(vs1[i] * vs2[i]) + vd[i]
:vfmacc.vv  vd, vs1, vs2         is op2631=0x2c & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfmacc_vv(vs1,vs2);}
:vfmacc.vv  vd, vs1, vs2, "v0.t" is op2631=0x2c & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfmacc_vv(vs1,vs2,v0);}

define pcodeop vfmadd_vf;
# vfmadd.vf      31..26=0x28 vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfmadd.vf vd, frs1, vs2, vm    # vd[i] = +(f[rs1] * vd[i]) + vs2[i]
:vfmadd.vf  vd, frs1, vs2         is op2631=0x28 & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmadd_vf(frs1,vs2);}
:vfmadd.vf  vd, frs1, vs2, "v0.t" is op2631=0x28 & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmadd_vf(frs1,vs2,v0);}

define pcodeop vfmadd_vv;
# vfmadd.vv      31..26=0x28 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfmadd.vv vd, vs1, vs2, vm    # vd[i] = +(vs1[i] * vd[i]) + vs2[i]
:vfmadd.vv  vd, vs1, vs2         is op2631=0x28 & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfmadd_vv(vs1,vs2);}
:vfmadd.vv  vd, vs1, vs2, "v0.t" is op2631=0x28 & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfmadd_vv(vs1,vs2,v0);}

define pcodeop vfmax_vf;
# vfmax.vf        31..26=0x06 vm vs2 rs1 14..12=0x5 vd 6..0=0x57
# vfmax.vf vd, vs2, frs1, vm   # vector-scalar
:vfmax.vf  vd, vs2, frs1         is op2631=0x6 & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmax_vf(vs2,frs1);}
:vfmax.vf  vd, vs2, frs1, "v0.t" is op2631=0x6 & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmax_vf(vs2,frs1,v0);}

define pcodeop vfmax_vv;
# vfmax.vv       31..26=0x06 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfmax.vv vd, vs2, vs1, vm   # Vector-vector
:vfmax.vv  vd, vs2, vs1         is op2631=0x6 & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfmax_vv(vs2,vs1);}
:vfmax.vv  vd, vs2, vs1, "v0.t" is op2631=0x6 & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfmax_vv(vs2,vs1,v0);}

define pcodeop vfmerge_vfm;
# vfmerge.vfm    31..26=0x17 25=0 vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfmerge.vfm vd, vs2, frs1, v0  # vd[i] = v0.mask[i] ? f[frs1] : vs2[i]
:vfmerge.vfm  vd, vs2, frs1, v0   is op2631=0x17 & op2525=0x0 & vs2 & frs1 & op1214=0x5 & v0 & vd & op0006=0x57 {vd=vfmerge_vfm(vs2,frs1,v0);}

define pcodeop vfmin_vf;
# vfmin.vf        31..26=0x04 vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfmin.vf vd, vs2, frs1, vm   # vector-scalar
:vfmin.vf  vd, vs2, frs1         is op2631=0x4 & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmin_vf(vs2,frs1);}
:vfmin.vf  vd, vs2, frs1, "v0.t" is op2631=0x4 & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmin_vf(vs2,frs1,v0);}

define pcodeop vfmin_vv;
# vfmin.vv       31..26=0x04 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfmin.vv vd, vs2, vs1, vm   # Vector-vector
:vfmin.vv  vd, vs2, vs1         is op2631=0x4 & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfmin_vv(vs2,vs1);}
:vfmin.vv  vd, vs2, vs1, "v0.t" is op2631=0x4 & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfmin_vv(vs2,vs1,v0);}

define pcodeop vfmsac_vf;
# vfmsac.vf      31..26=0x2e vm vs2 rs1 14..12=0x5 vd 6..0=0x57
# vfmsac.vf vd, frs1, vs2, vm    # vd[i] = +(f[rs1] * vs2[i]) - vd[i]
:vfmsac.vf  vd, frs1, vs2         is op2631=0x2e & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmsac_vf(frs1,vs2);}
:vfmsac.vf  vd, frs1, vs2, "v0.t" is op2631=0x2e & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmsac_vf(frs1,vs2,v0);}

define pcodeop vfmsac_vv;
# vfmsac.vv      31..26=0x2e vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfmsac.vv vd, vs1, vs2, vm    # vd[i] = +(vs1[i] * vs2[i]) - vd[i]
:vfmsac.vv  vd, vs1, vs2         is op2631=0x2e & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfmsac_vv(vs1,vs2);}
:vfmsac.vv  vd, vs1, vs2, "v0.t" is op2631=0x2e & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfmsac_vv(vs1,vs2,v0);}

define pcodeop vfmsub_vf;
# vfmsub.vf      31..26=0x2a vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfmsub.vf vd, frs1, vs2, vm    # vd[i] = +(f[rs1] * vd[i]) - vs2[i]
:vfmsub.vf  vd, frs1, vs2         is op2631=0x2a & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmsub_vf(frs1,vs2);}
:vfmsub.vf  vd, frs1, vs2, "v0.t" is op2631=0x2a & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmsub_vf(frs1,vs2,v0);}

define pcodeop vfmsub_vv;
# vfmsub.vv      31..26=0x2a vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfmsub.vv vd, vs1, vs2, vm    # vd[i] = +(vs1[i] * vd[i]) - vs2[i]
:vfmsub.vv  vd, vs1, vs2         is op2631=0x2a & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfmsub_vv(vs1,vs2);}
:vfmsub.vv  vd, vs1, vs2, "v0.t" is op2631=0x2a & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfmsub_vv(vs1,vs2,v0);}

define pcodeop vfmul_vf;
# vfmul.vf       31..26=0x24 vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfmul.vf vd, vs2, rs1, vm   # vector-scalar
:vfmul.vf  vd, vs2, frs1         is op2631=0x24 & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmul_vf(vs2,frs1);}
:vfmul.vf  vd, vs2, frs1, "v0.t" is op2631=0x24 & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmul_vf(vs2,frs1,v0);}

define pcodeop vfmul_vv;
# vfmul.vv       31..26=0x24 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfmul.vv vd, vs2, vs1, vm   # Vector-vector
:vfmul.vv  vd, vs2, vs1         is op2631=0x24 & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfmul_vv(vs2,vs1);}
:vfmul.vv  vd, vs2, vs1, "v0.t" is op2631=0x24 & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfmul_vv(vs2,vs1,v0);}

define pcodeop vfmv_fs;
# vfmv.f.s       31..26=0x10 25=1 vs2      19..15=0 14..12=0x1 rd 6..0=0x57
# vfmv.f.s frd, vs2  # f[frd] = vs2[0] (rs1=0)
:vfmv.f.s  frd, vs2 is op2631=0x10 & op2525=0x1 & vs2 & op1519=0x0 & op1214=0x1 & frd & op0006=0x57 {frd=vfmv_fs(vs2);}

define pcodeop vfmv_sf;
# vfmv.s.f        31..26=0x10 25=1 24..20=0 rs1      14..12=0x5 vd 6..0=0x57
# vfmv.s.f vd, frs1  # vd[0] = f[frs1] (vs2=0)
:vfmv.s.f  vd, frs1 is op2631=0x10 & op2525=0x1 & op2024=0x0 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmv_sf(frs1);}

define pcodeop vfmv_vf;
# vfmv.v.f       31..26=0x17 25=1 24..20=0 rs1 14..12=0x5 vd 6..0=0x57
# vfmv.v.f vd, frs1  # vd[i] = f[frs1]
:vfmv.v.f  vd, frs1 is op2631=0x17 & op2525=0x1 & op2024=0x0 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfmv_vf(frs1);}

define pcodeop vfncvt_ffw;
# vfncvt.f.f.w      31..26=0x12 vm vs2 19..15=0x14 14..12=0x1 vd 6..0=0x57
# vfncvt.f.f.w vd, vs2, vm        # Convert double-width float to single-width float.
:vfncvt.f.f.w  vd, vs2         is op2631=0x12 & op2525=0x1 & vs2 & op1519=0x14 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_ffw(vs2);}
:vfncvt.f.f.w  vd, vs2, "v0.t" is op2631=0x12 & op2525=0x0 & vs2 & op1519=0x14 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_ffw(vs2,v0);}

define pcodeop vfncvt_fxw;
# vfncvt.f.x.w      31..26=0x12 vm vs2 19..15=0x13 14..12=0x1 vd 6..0=0x57
# vfncvt.f.x.w  vd, vs2, vm       # Convert double-width signed integer to float.
:vfncvt.f.x.w   vd, vs2         is op2631=0x12 & op2525=0x1 & vs2 & op1519=0x13 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_fxw(vs2);}
:vfncvt.f.x.w   vd, vs2, "v0.t" is op2631=0x12 & op2525=0x0 & vs2 & op1519=0x13 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_fxw(vs2,v0);}

define pcodeop vfncvt_fxuw;
# vfncvt.f.xu.w     31..26=0x12 vm vs2 19..15=0x12 14..12=0x1 vd 6..0=0x57
# vfncvt.f.xu.w vd, vs2, vm       # Convert double-width unsigned integer to float.
:vfncvt.f.xu.w  vd, vs2         is op2631=0x12 & op2525=0x1 & vs2 & op1519=0x12 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_fxuw(vs2);}
:vfncvt.f.xu.w  vd, vs2, "v0.t" is op2631=0x12 & op2525=0x0 & vs2 & op1519=0x12 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_fxuw(vs2,v0);}

define pcodeop vfncvt_rod_ffw;
# vfncvt.rod.f.f.w  31..26=0x12 vm vs2 19..15=0x15 14..12=0x1 vd 6..0=0x57
# vfncvt.rod.f.f.w vd, vs2, vm    # Convert double-width float to single-width float,
:vfncvt.rod.f.f.w  vd, vs2         is op2631=0x12 & op2525=0x1 & vs2 & op1519=0x15 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_rod_ffw(vs2);}
:vfncvt.rod.f.f.w  vd, vs2, "v0.t" is op2631=0x12 & op2525=0x0 & vs2 & op1519=0x15 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_rod_ffw(vs2,v0);}

define pcodeop vfncvt_rtz_xfw;
# vfncvt.rtz.x.f.w  31..26=0x12 vm vs2 19..15=0x17 14..12=0x1 vd 6..0=0x57
# vfncvt.rtz.x.f.w  vd, vs2, vm   # Convert double-width float to signed integer, truncating.
:vfncvt.rtz.x.f.w   vd, vs2         is op2631=0x12 & op2525=0x1 & vs2 & op1519=0x17 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_rtz_xfw(vs2);}
:vfncvt.rtz.x.f.w   vd, vs2, "v0.t" is op2631=0x12 & op2525=0x0 & vs2 & op1519=0x17 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_rtz_xfw(vs2,v0);}

define pcodeop vfncvt_rtz_xufw;
# vfncvt.rtz.xu.f.w 31..26=0x12 vm vs2 19..15=0x16 14..12=0x1 vd 6..0=0x57
# vfncvt.rtz.xu.f.w vd, vs2, vm   # Convert double-width float to unsigned integer, truncating.
:vfncvt.rtz.xu.f.w  vd, vs2         is op2631=0x12 & op2525=0x1 & vs2 & op1519=0x16 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_rtz_xufw(vs2);}
:vfncvt.rtz.xu.f.w  vd, vs2, "v0.t" is op2631=0x12 & op2525=0x0 & vs2 & op1519=0x16 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_rtz_xufw(vs2,v0);}

define pcodeop vfncvt_xfw;
# vfncvt.x.f.w      31..26=0x12 vm vs2 19..15=0x11 14..12=0x1 vd 6..0=0x57
# vfncvt.x.f.w  vd, vs2, vm       # Convert double-width float to signed integer.
:vfncvt.x.f.w   vd, vs2         is op2631=0x12 & op2525=0x1 & vs2 & op1519=0x11 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_xfw(vs2);}
:vfncvt.x.f.w   vd, vs2, "v0.t" is op2631=0x12 & op2525=0x0 & vs2 & op1519=0x11 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_xfw(vs2,v0);}

define pcodeop vfncvt_xufw;
# vfncvt.xu.f.w     31..26=0x12 vm vs2 19..15=0x10 14..12=0x1 vd 6..0=0x57
# vfncvt.xu.f.w vd, vs2, vm       # Convert double-width float to unsigned integer.
:vfncvt.xu.f.w  vd, vs2         is op2631=0x12 & op2525=0x1 & vs2 & op1519=0x10 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_xufw(vs2);}
:vfncvt.xu.f.w  vd, vs2, "v0.t" is op2631=0x12 & op2525=0x0 & vs2 & op1519=0x10 & op1214=0x1 & vd & op0006=0x57 {vd=vfncvt_xufw(vs2,v0);}

define pcodeop vfnmacc_vf;
# vfnmacc.vf     31..26=0x2d vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfnmacc.vf vd, frs1, vs2, vm   # vd[i] = -(f[rs1] * vs2[i]) - vd[i]
:vfnmacc.vf  vd, frs1, vs2         is op2631=0x2d & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfnmacc_vf(frs1,vs2);}
:vfnmacc.vf  vd, frs1, vs2, "v0.t" is op2631=0x2d & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfnmacc_vf(frs1,vs2,v0);}

define pcodeop vfnmacc_vv;
# vfnmacc.vv     31..26=0x2d vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfnmacc.vv vd, vs1, vs2, vm   # vd[i] = -(vs1[i] * vs2[i]) - vd[i]
:vfnmacc.vv  vd, vs1, vs2         is op2631=0x2d & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfnmacc_vv(vs1,vs2);}
:vfnmacc.vv  vd, vs1, vs2, "v0.t" is op2631=0x2d & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfnmacc_vv(vs1,vs2,v0);}

define pcodeop vfnmadd_vf;
# vfnmadd.vf     31..26=0x29 vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfnmadd.vf vd, frs1, vs2, vm   # vd[i] = -(f[rs1] * vd[i]) - vs2[i]
:vfnmadd.vf  vd, frs1, vs2         is op2631=0x29 & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfnmadd_vf(frs1,vs2);}
:vfnmadd.vf  vd, frs1, vs2, "v0.t" is op2631=0x29 & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfnmadd_vf(frs1,vs2,v0);}

define pcodeop vfnmadd_vv;
# vfnmadd.vv     31..26=0x29 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfnmadd.vv vd, vs1, vs2, vm   # vd[i] = -(vs1[i] * vd[i]) - vs2[i]
:vfnmadd.vv  vd, vs1, vs2         is op2631=0x29 & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfnmadd_vv(vs1,vs2);}
:vfnmadd.vv  vd, vs1, vs2, "v0.t" is op2631=0x29 & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfnmadd_vv(vs1,vs2,v0);}

define pcodeop vfnmsac_vf;
# vfnmsac.vf     31..26=0x2f vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfnmsac.vf vd, frs1, vs2, vm   # vd[i] = -(f[rs1] * vs2[i]) + vd[i]
:vfnmsac.vf  vd, frs1, vs2         is op2631=0x2f & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfnmsac_vf(frs1,vs2);}
:vfnmsac.vf  vd, frs1, vs2, "v0.t" is op2631=0x2f & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfnmsac_vf(frs1,vs2,v0);}

define pcodeop vfnmsac_vv;
# vfnmsac.vv     31..26=0x2f vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfnmsac.vv vd, vs1, vs2, vm   # vd[i] = -(vs1[i] * vs2[i]) + vd[i]
:vfnmsac.vv  vd, vs1, vs2         is op2631=0x2f & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfnmsac_vv(vs1,vs2);}
:vfnmsac.vv  vd, vs1, vs2, "v0.t" is op2631=0x2f & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfnmsac_vv(vs1,vs2,v0);}

define pcodeop vfnmsub_vf;
# vfnmsub.vf     31..26=0x2b vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfnmsub.vf vd, frs1, vs2, vm   # vd[i] = -(f[rs1] * vd[i]) + vs2[i]
:vfnmsub.vf  vd, frs1, vs2         is op2631=0x2b & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfnmsub_vf(frs1,vs2);}
:vfnmsub.vf  vd, frs1, vs2, "v0.t" is op2631=0x2b & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfnmsub_vf(frs1,vs2,v0);}

define pcodeop vfnmsub_vv;
# vfnmsub.vv     31..26=0x2b vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfnmsub.vv vd, vs1, vs2, vm   # vd[i] = -(vs1[i] * vd[i]) + vs2[i]
:vfnmsub.vv  vd, vs1, vs2         is op2631=0x2b & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfnmsub_vv(vs1,vs2);}
:vfnmsub.vv  vd, vs1, vs2, "v0.t" is op2631=0x2b & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfnmsub_vv(vs1,vs2,v0);}

define pcodeop vfrdiv_vf;
# vfrdiv.vf      31..26=0x21 vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfrdiv.vf vd, vs2, frs1, vm  # scalar-vector, vd[i] = f[rs1]/vs2[i]
:vfrdiv.vf  vd, vs2, frs1         is op2631=0x21 & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfrdiv_vf(vs2,frs1);}
:vfrdiv.vf  vd, vs2, frs1, "v0.t" is op2631=0x21 & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfrdiv_vf(vs2,frs1,v0);}

define pcodeop vfredmax_vs;
# vfredmax.vs    31..26=0x07 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfredmax.vs  vd, vs2, vs1, vm # Maximum value
:vfredmax.vs   vd, vs2, vs1         is op2631=0x7 & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfredmax_vs(vs2,vs1);}
:vfredmax.vs   vd, vs2, vs1, "v0.t" is op2631=0x7 & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfredmax_vs(vs2,vs1,v0);}

define pcodeop vfredmin_vs;
# vfredmin.vs    31..26=0x05 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfredmin.vs  vd, vs2, vs1, vm # Minimum value
:vfredmin.vs   vd, vs2, vs1         is op2631=0x5 & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfredmin_vs(vs2,vs1);}
:vfredmin.vs   vd, vs2, vs1, "v0.t" is op2631=0x5 & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfredmin_vs(vs2,vs1,v0);}

define pcodeop vfredosum_vs;
# vfredosum.vs   31..26=0x03 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfredosum.vs vd, vs2, vs1, vm # Ordered sum
:vfredosum.vs  vd, vs2, vs1         is op2631=0x3 & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfredosum_vs(vs2,vs1);}
:vfredosum.vs  vd, vs2, vs1, "v0.t" is op2631=0x3 & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfredosum_vs(vs2,vs1,v0);}

define pcodeop vfredusum_vs;
# vfredusum.vs    31..26=0x01 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfredusum.vs  vd, vs2, vs1, vm # Unordered sum
:vfredusum.vs   vd, vs2, vs1         is op2631=0x1 & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfredusum_vs(vs2,vs1);}
:vfredusum.vs   vd, vs2, vs1, "v0.t" is op2631=0x1 & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfredusum_vs(vs2,vs1,v0);}

define pcodeop vfrsub_vf;
# vfrsub.vf      31..26=0x27 vm vs2 rs1 14..12=0x5 vd 6..0=0x57
# vfrsub.vf vd, vs2, frs1, vm  # Scalar-vector vd[i] = f[rs1] - vs2[i]
:vfrsub.vf  vd, vs2, frs1         is op2631=0x27 & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfrsub_vf(vs2,frs1);}
:vfrsub.vf  vd, vs2, frs1, "v0.t" is op2631=0x27 & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfrsub_vf(vs2,frs1,v0);}

define pcodeop vfsgnj_vf;
# vfsgnj.vf       31..26=0x08 vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfsgnj.vf vd, vs2, frs1, vm   # vector-scalar
:vfsgnj.vf  vd, vs2, frs1         is op2631=0x8 & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfsgnj_vf(vs2,frs1);}
:vfsgnj.vf  vd, vs2, frs1, "v0.t" is op2631=0x8 & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfsgnj_vf(vs2,frs1,v0);}

define pcodeop vfsgnj_vv;
# vfsgnj.vv      31..26=0x08 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfsgnj.vv vd, vs2, vs1, vm   # Vector-vector
:vfsgnj.vv  vd, vs2, vs1         is op2631=0x8 & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfsgnj_vv(vs2,vs1);}
:vfsgnj.vv  vd, vs2, vs1, "v0.t" is op2631=0x8 & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfsgnj_vv(vs2,vs1,v0);}

define pcodeop vfsgnjn_vf;
# vfsgnjn.vf      31..26=0x09 vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfsgnjn.vf vd, vs2, frs1, vm   # vector-scalar
:vfsgnjn.vf  vd, vs2, frs1         is op2631=0x9 & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfsgnjn_vf(vs2,frs1);}
:vfsgnjn.vf  vd, vs2, frs1, "v0.t" is op2631=0x9 & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfsgnjn_vf(vs2,frs1,v0);}

define pcodeop vfsgnjn_vv;
define pcodeop vfneg_vv;
# vfsgnjn.vv     31..26=0x09 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfsgnjn.vv vd, vs2, vs1, vm   # Vector-vector
#:vfneg.v     vd, vs2              is op2631=0x9 & op2525=0x1 & vs2 & vs1=vs2 & op1214=0x1 & vd & op0006=0x57 {vd=vfneg_vv(vs2);}
#:vfneg.v     vd, vs2, "v0.t"      is op2631=0x9 & op2525=0x0 & vs2 & vs1=vs2 & op1214=0x1 & vd & op0006=0x57 {vd=vfneg_vv(vs2,v0);}
:vfsgnjn.vv  vd, vs2, vs1         is op2631=0x9 & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfsgnjn_vv(vs2,vs1);}
:vfsgnjn.vv  vd, vs2, vs1, "v0.t" is op2631=0x9 & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfsgnjn_vv(vs2,vs1,v0);}

define pcodeop vfsgnjx_vf;
# vfsgnjx.vf      31..26=0x0a vm vs2 rs1 14..12=0x5 vd 6..0=0x57
# vfsgnjx.vf vd, vs2, frs1, vm   # vector-scalar
:vfsgnjx.vf  vd, vs2, frs1         is op2631=0xa & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfsgnjx_vf(vs2,frs1);}
:vfsgnjx.vf  vd, vs2, frs1, "v0.t" is op2631=0xa & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfsgnjx_vf(vs2,frs1,v0);}

define pcodeop vfsgnjx_vv;
# vfsgnjx.vv     31..26=0x0a vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfsgnjx.vv vd, vs2, vs1, vm   # Vector-vector
#:vfabs.v    vd, vs2              is op2631=0xa & op2525=0x1 & vs2 & vs1=vs2 & op1214=0x1 & vd & op0006=0x57 unimpl
#:vfabs.v    vd, vs2, "v0.t"      is op2631=0xa & op2525=0x0 & vs2 & vs1=vs2 & op1214=0x1 & vd & op0006=0x57 unimpl
:vfsgnjx.vv  vd, vs2, vs1         is op2631=0xa & op2525=0x1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfsgnjx_vv(vs2,vs1);}
:vfsgnjx.vv  vd, vs2, vs1, "v0.t" is op2631=0xa & op2525=0x0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfsgnjx_vv(vs2,vs1,v0);}

define pcodeop vfslide1down_vf;
# vfslide1down.vf 31..26=0x0f vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfslide1down.vf vd, vs2, frs1, vm      # vd[i] = vs2[i+1], vd[vl-1]=f[rs1]
:vfslide1down.vf  vd, vs2, frs1         is op2631=0xf & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfslide1down_vf(vs2,frs1);}
:vfslide1down.vf  vd, vs2, frs1, "v0.t" is op2631=0xf & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfslide1down_vf(vs2,frs1,v0);}

define pcodeop vfslide1up_vf;
# vfslide1up.vf   31..26=0x0e vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfslide1up.vf vd, vs2, frs1, vm        # vd[0]=f[rs1], vd[i+1] = vs2[i]
:vfslide1up.vf  vd, vs2, frs1         is op2631=0xe & op2525=0x1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfslide1up_vf(vs2,frs1);}
:vfslide1up.vf  vd, vs2, frs1, "v0.t" is op2631=0xe & op2525=0x0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfslide1up_vf(vs2,frs1,v0);}

define pcodeop vfsqrt_v;
# vfsqrt.v       31..26=0x13 vm vs2 19..15=0x00 14..12=0x1 vd 6..0=0x57
# vfsqrt.v vd, vs2, vm   # Vector-vector square root
:vfsqrt.v   vd, vs2         is op2631=0x13 & op2525=1 & vs2 & op1519=0x0 & op1214=0x1 & vd & op0006=0x57 {vd=vfsqrt_v(vs2);}
:vfsqrt.v   vd, vs2, "v0.t" is op2631=0x13 & op2525=0 & vs2 & op1519=0x0 & op1214=0x1 & vd & op0006=0x57 {vd=vfsqrt_v(vs2,v0);}

define pcodeop vfsqrt7_v;
:vfrsqrt7.v vd, vs2         is op2631=0x13 & op2525=1 & vs2 & op1519=0x4 & op1214=0x1 & vd & op0006=0x57 {vd=vfsqrt7_v(vs2);}
:vfrsqrt7.v vd, vs2, "v0.t" is op2631=0x13 & op2525=0 & vs2 & op1519=0x4 & op1214=0x1 & vd & op0006=0x57 {vd=vfsqrt7_v(vs2,v0);}

define pcodeop vfrec7_v;
:vfrec7.v   vd, vs2         is op2631=0x13 & op2525=1 & vs2 & op1519=0x5 & op1214=0x1 & vd & op0006=0x57 {vd=vfrec7_v(vs2);}
:vfrec7.v   vd, vs2, "v0.t" is op2631=0x13 & op2525=0 & vs2 & op1519=0x5 & op1214=0x1 & vd & op0006=0x57 {vd=vfrec7_v(vs2,v0);}

define pcodeop vfsub_vf;
# vfsub.vf        31..26=0x02 vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfsub.vf vd, vs2, frs1, vm   # Vector-scalar vd[i] = vs2[i] - f[rs1]
:vfsub.vf  vd, vs2, frs1         is op2631=0x2 & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfsub_vf(vs2,frs1);}
:vfsub.vf  vd, vs2, frs1, "v0.t" is op2631=0x2 & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfsub_vf(vs2,frs1,v0);}

define pcodeop vfsub_vv;
# vfsub.vv       31..26=0x02 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfsub.vv vd, vs2, vs1, vm   # Vector-vector
:vfsub.vv  vd, vs2, vs1         is op2631=0x2 & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfsub_vv(vs2,vs1);}
:vfsub.vv  vd, vs2, vs1, "v0.t" is op2631=0x2 & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfsub_vv(vs2,vs1,v0);}

define pcodeop vfwadd_vf;
# vfwadd.vf      31..26=0x30 vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfwadd.vf vd, vs2, frs1, vm  # vector-scalar
:vfwadd.vf  vd, vs2, frs1         is op2631=0x30 & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwadd_vf(vs2,frs1);}
:vfwadd.vf  vd, vs2, frs1, "v0.t" is op2631=0x30 & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwadd_vf(vs2,frs1,v0);}

define pcodeop vfwadd_vv;
# vfwadd.vv      31..26=0x30 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfwadd.vv vd, vs2, vs1, vm  # vector-vector
:vfwadd.vv  vd, vs2, vs1         is op2631=0x30 & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwadd_vv(vs2,vs1);}
:vfwadd.vv  vd, vs2, vs1, "v0.t" is op2631=0x30 & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwadd_vv(vs2,vs1,v0);}

define pcodeop vfwadd_wf;
# vfwadd.wf      31..26=0x34 vm vs2 rs1 14..12=0x5 vd 6..0=0x57
# vfwadd.wf  vd, vs2, frs1, vm  # vector-scalar
:vfwadd.wf   vd, vs2, frs1         is op2631=0x34 & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwadd_wf(vs2,frs1);}
:vfwadd.wf   vd, vs2, frs1, "v0.t" is op2631=0x34 & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwadd_wf(vs2,frs1,v0);}

define pcodeop vfwadd_wv;
# vfwadd.wv      31..26=0x34 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfwadd.wv  vd, vs2, vs1, vm  # vector-vector
:vfwadd.wv   vd, vs2, vs1         is op2631=0x34 & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwadd_wv(vs2,vs1);}
:vfwadd.wv   vd, vs2, vs1, "v0.t" is op2631=0x34 & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwadd_wv(vs2,vs1,v0);}

define pcodeop vfwcvt_f_f_v;
# vfwcvt.f.f.v      31..26=0x12 vm vs2 19..15=0x0C 14..12=0x1 vd 6..0=0x57
# vfwcvt.f.f.v vd, vs2, vm        # Convert single-width float to double-width float.
:vfwcvt.f.f.v  vd, vs2         is op2631=0x12 & op2525=1 & vs2 & op1519=0xc & op1214=0x1 & vd & op0006=0x57 {vd=vfwcvt_f_f_v(vs2);}
:vfwcvt.f.f.v  vd, vs2, "v0.t" is op2631=0x12 & op2525=0 & vs2 & op1519=0xc & op1214=0x1 & vd & op0006=0x57 {vd=vfwcvt_f_f_v(vs2,v0);}

define pcodeop vfwcvt_f_x_v;
# vfwcvt.f.x.v      31..26=0x12 vm vs2 19..15=0x0B 14..12=0x1 vd 6..0=0x57
# vfwcvt.f.x.v  vd, vs2, vm       # Convert signed integer to double-width float.
:vfwcvt.f.x.v   vd, vs2         is op2631=0x12 & op2525=1 & vs2 & op1519=0xb & op1214=0x1 & vd & op0006=0x57 {vd=vfwcvt_f_x_v(vs2);}
:vfwcvt.f.x.v   vd, vs2, "v0.t" is op2631=0x12 & op2525=0 & vs2 & op1519=0xb & op1214=0x1 & vd & op0006=0x57 {vd=vfwcvt_f_x_v(vs2,v0);}

define pcodeop vfwcvt_f_xu_v;
# vfwcvt.f.xu.v     31..26=0x12 vm vs2 19..15=0x0A 14..12=0x1 vd 6..0=0x57
# vfwcvt.f.xu.v vd, vs2, vm       # Convert unsigned integer to double-width float.
:vfwcvt.f.xu.v  vd, vs2         is op2631=0x12 & op2525=1 & vs2 & op1519=0xa & op1214=0x1 & vd & op0006=0x57 {vd=vfwcvt_f_xu_v(vs2);}
:vfwcvt.f.xu.v  vd, vs2, "v0.t" is op2631=0x12 & op2525=0 & vs2 & op1519=0xa & op1214=0x1 & vd & op0006=0x57 {vd=vfwcvt_f_xu_v(vs2,v0);}

define pcodeop vfwcvt_rtz_x_f_v;
# vfwcvt.rtz.x.f.v  31..26=0x12 vm vs2 19..15=0x0F 14..12=0x1 vd 6..0=0x57
# vfwcvt.rtz.x.f.v  vd, vs2, vm   # Convert float to double-width signed integer, truncating.
:vfwcvt.rtz.x.f.v   vd, vs2         is op2631=0x12 & op2525=1 & vs2 & op1519=0xf & op1214=0x1 & vd & op0006=0x57 {vd=vfwcvt_rtz_x_f_v(vs2);}
:vfwcvt.rtz.x.f.v   vd, vs2, "v0.t" is op2631=0x12 & op2525=0 & vs2 & op1519=0xf & op1214=0x1 & vd & op0006=0x57 {vd=vfwcvt_rtz_x_f_v(vs2,v0);}

define pcodeop vfwcvt_rtz_xu_f_v;
# vfwcvt.rtz.xu.f.v 31..26=0x12 vm vs2 19..15=0x0E 14..12=0x1 vd 6..0=0x57
# vfwcvt.rtz.xu.f.v vd, vs2, vm   # Convert float to double-width unsigned integer, truncating.
:vfwcvt.rtz.xu.f.v  vd, vs2         is op2631=0x12 & op2525=1 & vs2 & op1519=0xe & op1214=0x1 & vd & op0006=0x57 {vd=vfwcvt_rtz_xu_f_v(vs2);}
:vfwcvt.rtz.xu.f.v  vd, vs2, "v0.t" is op2631=0x12 & op2525=0 & vs2 & op1519=0xe & op1214=0x1 & vd & op0006=0x57 {vd=vfwcvt_rtz_xu_f_v(vs2,v0);}

define pcodeop vfwcvt_x_f_v;
# vfwcvt.x.f.v      31..26=0x12 vm vs2 19..15=0x09 14..12=0x1 vd 6..0=0x57
# vfwcvt.x.f.v  vd, vs2, vm       # Convert float to double-width signed integer.
:vfwcvt.x.f.v   vd, vs2         is op2631=0x12 & op2525=1 & vs2 & op1519=0x9 & op1214=0x1 & vd & op0006=0x57 {vd=vfwcvt_x_f_v(vs2);}
:vfwcvt.x.f.v   vd, vs2, "v0.t" is op2631=0x12 & op2525=0 & vs2 & op1519=0x9 & op1214=0x1 & vd & op0006=0x57 {vd=vfwcvt_x_f_v(vs2,v0);}

define pcodeop vfwcvt_xu_f_v;
# vfwcvt.xu.f.v     31..26=0x12 vm vs2 19..15=0x08 14..12=0x1 vd 6..0=0x57
# vfwcvt.xu.f.v vd, vs2, vm       # Convert float to double-width unsigned integer.
:vfwcvt.xu.f.v  vd, vs2         is op2631=0x12 & op2525=1 & vs2 & op1519=0x8 & op1214=0x1 & vd & op0006=0x57 {vd=vfwcvt_xu_f_v(vs2);}
:vfwcvt.xu.f.v  vd, vs2, "v0.t" is op2631=0x12 & op2525=0 & vs2 & op1519=0x8 & op1214=0x1 & vd & op0006=0x57 {vd=vfwcvt_xu_f_v(vs2,v0);}

define pcodeop vfwmacc_vf;
# vfwmacc.vf     31..26=0x3c vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfwmacc.vf vd, frs1, vs2, vm    # vd[i] = +(f[rs1] * vs2[i]) + vd[i]
:vfwmacc.vf  vd, frs1, vs2         is op2631=0x3c & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwmacc_vf(frs1,vs2);}
:vfwmacc.vf  vd, frs1, vs2, "v0.t" is op2631=0x3c & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwmacc_vf(frs1,vs2,v0);}

define pcodeop vfwmacc_vv;
# vfwmacc.vv     31..26=0x3c vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfwmacc.vv vd, vs1, vs2, vm    # vd[i] = +(vs1[i] * vs2[i]) + vd[i]
:vfwmacc.vv  vd, vs1, vs2         is op2631=0x3c & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwmacc_vv(vs1,vs2);}
:vfwmacc.vv  vd, vs1, vs2, "v0.t" is op2631=0x3c & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwmacc_vv(vs1,vs2,v0);}

define pcodeop vfwmsac_vf;
# vfwmsac.vf     31..26=0x3e vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfwmsac.vf vd, frs1, vs2, vm    # vd[i] = +(f[rs1] * vs2[i]) - vd[i]
:vfwmsac.vf  vd, frs1, vs2         is op2631=0x3e & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwmsac_vf(frs1,vs2);}
:vfwmsac.vf  vd, frs1, vs2, "v0.t" is op2631=0x3e & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwmsac_vf(frs1,vs2,v0);}

define pcodeop vfwmsac_vv;
# vfwmsac.vv     31..26=0x3e vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfwmsac.vv vd, vs1, vs2, vm    # vd[i] = +(vs1[i] * vs2[i]) - vd[i]
:vfwmsac.vv  vd, vs1, vs2         is op2631=0x3e & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwmsac_vv(vs1,vs2);}
:vfwmsac.vv  vd, vs1, vs2, "v0.t" is op2631=0x3e & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwmsac_vv(vs1,vs2,v0);}

define pcodeop vfwmul_vf;
# vfwmul.vf      31..26=0x38 vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfwmul.vf    vd, vs2, frs1, vm # vector-scalar
:vfwmul.vf     vd, vs2, frs1         is op2631=0x38 & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwmul_vf(vs2,frs1);}
:vfwmul.vf     vd, vs2, frs1, "v0.t" is op2631=0x38 & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwmul_vf(vs2,frs1,v0);}

define pcodeop vfwmul_vv;
# vfwmul.vv      31..26=0x38 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfwmul.vv    vd, vs2, vs1, vm # vector-vector
:vfwmul.vv     vd, vs2, vs1         is op2631=0x38 & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwmul_vv(vs2,vs1);}
:vfwmul.vv     vd, vs2, vs1, "v0.t" is op2631=0x38 & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwmul_vv(vs2,vs1,v0);}

define pcodeop vfwnmacc_vf;
# vfwnmacc.vf    31..26=0x3d vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfwnmacc.vf vd, frs1, vs2, vm   # vd[i] = -(f[frs1] * vs2[i]) - vd[i]
:vfwnmacc.vf  vd, frs1, vs2         is op2631=0x3d & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwnmacc_vf(frs1,vs2);}
:vfwnmacc.vf  vd, frs1, vs2, "v0.t" is op2631=0x3d & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwnmacc_vf(frs1,vs2,v0);}

define pcodeop vfwnmacc_vv;
# vfwnmacc.vv    31..26=0x3d vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfwnmacc.vv vd, vs1, vs2, vm   # vd[i] = -(vs1[i] * vs2[i]) - vd[i]
:vfwnmacc.vv  vd, vs1, vs2         is op2631=0x3d & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwnmacc_vv(vs1,vs2);}
:vfwnmacc.vv  vd, vs1, vs2, "v0.t" is op2631=0x3d & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwnmacc_vv(vs1,vs2,v0);}

define pcodeop vfwnmsac_vf;
# vfwnmsac.vf    31..26=0x3f vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfwnmsac.vf vd, frs1, vs2, vm   # vd[i] = -(f[rs1] * vs2[i]) + vd[i]
:vfwnmsac.vf  vd, frs1, vs2         is op2631=0x3f & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwnmsac_vf(frs1,vs2);}
:vfwnmsac.vf  vd, frs1, vs2, "v0.t" is op2631=0x3f & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwnmsac_vf(frs1,vs2,v0);}

define pcodeop vfwnmsac_vv;
# vfwnmsac.vv    31..26=0x3f vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfwnmsac.vv vd, vs1, vs2, vm   # vd[i] = -(vs1[i] * vs2[i]) + vd[i]
:vfwnmsac.vv  vd, vs1, vs2         is op2631=0x3f & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwnmsac_vv(vs1,vs2);}
:vfwnmsac.vv  vd, vs1, vs2, "v0.t" is op2631=0x3f & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwnmsac_vv(vs1,vs2,v0);}

define pcodeop vfwredosum_vs;
# vfwredosum.vs  31..26=0x33 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfwredosum.vs vd, vs2, vs1, vm # Ordered sum
:vfwredosum.vs  vd, vs2, vs1         is op2631=0x33 & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwredosum_vs(vs2,vs1);}
:vfwredosum.vs  vd, vs2, vs1, "v0.t" is op2631=0x33 & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwredosum_vs(vs2,vs1,v0);}

define pcodeop vfwredusum_vs;
# vfwredusum.vs   31..26=0x31 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfwredusum.vs vd, vs2, vs1, vm  # Unordered sum
:vfwredusum.vs  vd, vs2, vs1         is op2631=0x31 & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwredusum_vs(vs2,vs1);}
:vfwredusum.vs  vd, vs2, vs1, "v0.t" is op2631=0x31 & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwredusum_vs(vs2,vs1,v0);}

define pcodeop vfwsub_vf;
# vfwsub.vf      31..26=0x32 vm vs2 rs1 14..12=0x5 vd 6..0=0x57
# vfwsub.vf vd, vs2, frs1, vm  # vector-scalar
:vfwsub.vf  vd, vs2, frs1         is op2631=0x32 & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwsub_vf(vs2,frs1);}
:vfwsub.vf  vd, vs2, frs1, "v0.t" is op2631=0x32 & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwsub_vf(vs2,frs1,v0);}

define pcodeop vfwsub_vv;
# vfwsub.vv      31..26=0x32 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfwsub.vv vd, vs2, vs1, vm  # vector-vector
:vfwsub.vv  vd, vs2, vs1         is op2631=0x32 & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwsub_vv(vs2,vs1);}
:vfwsub.vv  vd, vs2, vs1, "v0.t" is op2631=0x32 & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwsub_vv(vs2,vs1,v0);}

define pcodeop vfwsub_wf;
# vfwsub.wf      31..26=0x36 vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vfwsub.wf  vd, vs2, frs1, vm  # vector-scalar
:vfwsub.wf   vd, vs2, frs1         is op2631=0x36 & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwsub_wf(vs2,frs1);}
:vfwsub.wf   vd, vs2, frs1, "v0.t" is op2631=0x36 & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vfwsub_wf(vs2,frs1,v0);}

define pcodeop vfwsub_wv;
# vfwsub.wv      31..26=0x36 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vfwsub.wv  vd, vs2, vs1, vm  # vector-vector
:vfwsub.wv   vd, vs2, vs1         is op2631=0x36 & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwsub_wv(vs2,vs1);}
:vfwsub.wv   vd, vs2, vs1, "v0.t" is op2631=0x36 & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vfwsub_wv(vs2,vs1,v0);}

define pcodeop vid_v;
# vid.v          31..26=0x14 vm 24..20=0 19..15=0x11 14..12=0x2 vd 6..0=0x57
# vid.v vd, vm  # Write element ID to destination.
:vid.v  vd         is op2631=0x14 & op2525=1 & op2024=0x0 & op1519=0x11 & op1214=0x2 & vd & op0006=0x57 {vd=vid_v();}
:vid.v  vd, "v0.t" is op2631=0x14 & op2525=0 & op2024=0x0 & op1519=0x11 & op1214=0x2 & vd & op0006=0x57 {vd=vid_v(v0);}

define pcodeop viota_m;
# viota.m        31..26=0x14 vm vs2 19..15=0x10 14..12=0x2 vd 6..0=0x57
# viota.m vd, vs2, vm
:viota.m  vd, vs2         is op2631=0x14 & op2525=1 & vs2 & op1519=0x10 & op1214=0x2 & vd & op0006=0x57 {vd=viota_m(vs2);}
:viota.m  vd, vs2, "v0.t" is op2631=0x14 & op2525=0 & vs2 & op1519=0x10 & op1214=0x2 & vd & op0006=0x57 {vd=viota_m(vs2,v0);}

define pcodeop vl1re16_v;
# vl1re16.v      31..29=0 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x5 vd  6..0=0x07
# vl1re16.v  vd, (rs1)
:vl1re16.v   vd, (rs1) is op2931=0x0 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vl1re16_v(rs1);}

define pcodeop vl1re32_v;
# vl1re32.v      31..29=0 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x6 vd  6..0=0x07
# vl1re32.v  vd, (rs1)
:vl1re32.v   vd, (rs1) is op2931=0x0 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vl1re32_v(rs1);}

define pcodeop vl1re64_v;
# vl1re64.v      31..29=0 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x7 vd  6..0=0x07
# vl1re64.v  vd, (rs1)
:vl1re64.v   vd, (rs1) is op2931=0x0 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vl1re64_v(rs1);}

define pcodeop vl1r_v;
# vl1r.v       31..29=0 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x0 vd  6..0=0x07
# vl1r.v   vd, (rs1)
:vl1r.v    vd, (rs1) is op2931=0x0 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vl1r_v(rs1);}

define pcodeop vl2re16_v;
# vl2re16.v      31..29=1 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x5 vd  6..0=0x07
# vl2re16.v  vd, (rs1)
:vl2re16.v   vd, (rs1) is op2931=0x1 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vl2re16_v(rs1);}

define pcodeop vl2re32_v;
# vl2re32.v      31..29=1 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x6 vd  6..0=0x07
# vl2re32.v  vd, (rs1)
:vl2re32.v   vd, (rs1) is op2931=0x1 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vl2re32_v(rs1);}

define pcodeop vl2re64_v;
# vl2re64.v      31..29=1 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x7 vd  6..0=0x07
# vl2re64.v  vd, (rs1)
:vl2re64.v   vd, (rs1) is op2931=0x1 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vl2re64_v(rs1);}

define pcodeop vl2r_v;
# vl2r.v       31..29=1 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x0 vd  6..0=0x07
# vl2r.v   vd, (rs1)
:vl2r.v    vd, (rs1) is op2931=0x1 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vl2r_v(rs1);}

define pcodeop vl4re16_v;
# vl4re16.v      31..29=3 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x5 vd  6..0=0x07
# vl4re16.v  vd, (rs1)
:vl4re16.v   vd, (rs1) is op2931=0x3 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vl4re16_v(rs1);}

define pcodeop vl4re32_v;
# vl4re32.v      31..29=3 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x6 vd  6..0=0x07
# vl4re32.v  vd, (rs1)
:vl4re32.v   vd, (rs1) is op2931=0x3 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vl4re32_v(rs1);}

define pcodeop vl4re64_v;
# vl4re64.v      31..29=3 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x7 vd  6..0=0x07
# vl4re64.v  vd, (rs1)
:vl4re64.v   vd, (rs1) is op2931=0x3 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vl4re64_v(rs1);}

define pcodeop vl4r_v;
# vl4r.v       31..29=3 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x0 vd  6..0=0x07
# vl4r.v   vd, (rs1)
:vl4r.v    vd, (rs1) is op2931=0x3 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vl4r_v(rs1);}

define pcodeop vl8re16_v;
# vl8re16.v      31..29=7 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x5 vd  6..0=0x07
# vl8re16.v  vd, (rs1)
:vl8re16.v   vd, (rs1) is op2931=0x7 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vl8re16_v(rs1);}

define pcodeop vl8re32_v;
# vl8re32.v      31..29=7 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x6 vd  6..0=0x07
# vl8re32.v  vd, (rs1)
:vl8re32.v   vd, (rs1) is op2931=0x7 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vl8re32_v(rs1);}

define pcodeop vl8re64_v;
# vl8re64.v      31..29=7 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x7 vd  6..0=0x07
# vl8re64.v  vd, (rs1)
:vl8re64.v   vd, (rs1) is op2931=0x7 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vl8re64_v(rs1);}

define pcodeop vl8r_v;
# vl8r.v       31..29=7 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x0 vd  6..0=0x07
# vl8r.v   vd, (rs1)
:vl8r.v    vd, (rs1) is op2931=0x7 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vl8r_v(rs1);}

define pcodeop vle1024_v;
# vle1024.v      nf 28=1 27..26=0 vm 24..20=0 rs1 14..12=0x7  vd 6..0=0x07
# vle1024.v vd, (rs1), vm  # 1024-bit unit-stride load
:vle1024.v  vd, (rs1)         is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vle1024_v(rs1);}
:vle1024.v  vd, (rs1), "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vle1024_v(rs1,v0);}

define pcodeop vlseg2e1024_v;
:vlseg2e1024.v  vd, (rs1)         is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg2e1024_v(rs1);}
:vlseg2e1024.v  vd, (rs1), "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg2e1024_v(rs1,v0);}

define pcodeop vlseg3e1024_v;
:vlseg3e1024.v  vd, (rs1)         is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg3e1024_v(rs1);}
:vlseg3e1024.v  vd, (rs1), "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg3e1024_v(rs1,v0);}

define pcodeop vlseg4e1024_v;
:vlseg4e1024.v  vd, (rs1)         is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg4e1024_v(rs1);}
:vlseg4e1024.v  vd, (rs1), "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg4e1024_v(rs1,v0);}

define pcodeop vlseg5e1024_v;
:vlseg5e1024.v  vd, (rs1)         is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg5e1024_v(rs1);}
:vlseg5e1024.v  vd, (rs1), "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg5e1024_v(rs1,v0);}

define pcodeop vlseg6e1024_v;
:vlseg6e1024.v  vd, (rs1)         is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg6e1024_v(rs1);}
:vlseg6e1024.v  vd, (rs1), "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg6e1024_v(rs1,v0);}

define pcodeop vlseg7e1024_v;
:vlseg7e1024.v  vd, (rs1)         is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg7e1024_v(rs1);}
:vlseg7e1024.v  vd, (rs1), "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg7e1024_v(rs1,v0);}

define pcodeop vlseg8e1024_v;
:vlseg8e1024.v  vd, (rs1)         is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg8e1024_v(rs1);}
:vlseg8e1024.v  vd, (rs1), "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg8e1024_v(rs1,v0);}

define pcodeop vle1024ff_v;
# vle1024ff.v      nf 28=1 27..26=0 vm 24..20=0x10 rs1 14..12=0x7  vd 6..0=0x07
# vle1024ff.v vd, (rs1), vm  # 1024-bit unit-stride fault-only-first load
:vle1024ff.v  vd, (rs1)         is nf & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vle1024ff_v(rs1);}
:vle1024ff.v  vd, (rs1), "v0.t" is nf & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vle1024ff_v(rs1,v0);}

# vle128.v       nf 28=1 27..26=0 vm 24..20=0 rs1 14..12=0x0  vd 6..0=0x07
# vle128.v  vd, (rs1), vm  #  128-bit unit-stride load
define pcodeop vle128_v;
:vle128.v   vd, (rs1)         is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vle128_v(rs1);}
:vle128.v   vd, (rs1), "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vle128_v(rs1,v0);}

define pcodeop vlseg2e128_v;
:vlseg2e128.v   vd, (rs1)         is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg2e128_v(rs1);}
:vlseg2e128.v   vd, (rs1), "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg2e128_v(rs1,v0);}

define pcodeop vlseg3e128_v;
:vlseg3e128.v   vd, (rs1)         is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg3e128_v(rs1);}
:vlseg3e128.v   vd, (rs1), "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg3e128_v(rs1,v0);}

define pcodeop vlseg4e128_v;
:vlseg4e128.v   vd, (rs1)         is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg4e128_v(rs1);}
:vlseg4e128.v   vd, (rs1), "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg4e128_v(rs1,v0);}

define pcodeop vlseg5e128_v;
:vlseg5e128.v   vd, (rs1)         is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg5e128_v(rs1);}
:vlseg5e128.v   vd, (rs1), "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg5e128_v(rs1,v0);}

define pcodeop vlseg6e128_v;
:vlseg6e128.v   vd, (rs1)         is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg6e128_v(rs1);}
:vlseg6e128.v   vd, (rs1), "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg6e128_v(rs1,v0);}

define pcodeop vlseg7e128_v;
:vlseg7e128.v   vd, (rs1)         is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg7e128_v(rs1);}
:vlseg7e128.v   vd, (rs1), "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg7e128_v(rs1,v0);}

define pcodeop vlseg8e128_v;
:vlseg8e128.v   vd, (rs1)         is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg8e128_v(rs1);}
:vlseg8e128.v   vd, (rs1), "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg8e128_v(rs1,v0);}

define pcodeop vle128ff_v;
# vle128ff.v       nf 28=1 27..26=0 vm 24..20=0x10 rs1 14..12=0x0  vd 6..0=0x07
# vle128ff.v  vd, (rs1), vm  #  128-bit unit-stride fault-only-first load
:vle128ff.v   vd, (rs1)         is nf & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vle128ff_v(rs1);}
:vle128ff.v   vd, (rs1), "v0.t" is nf & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vle128ff_v(rs1,v0);}

define pcodeop vle16_v;
# vle16.v        nf 28=0 27..26=0 vm 24..20=0 rs1 14..12=0x5  vd 6..0=0x07
# vle16.v   vd, (rs1), vm  #   16-bit unit-stride load into 1 to 8 registers
:vle16.v    vd, (rs1)          is nf & op2931=0 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vle16_v(rs1);}
:vle16.v    vd, (rs1), "v0.t"  is nf & op2931=0 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vle16_v(rs1,v0);}

define pcodeop vlseg2e16_v;
:vlseg2e16.v vd, (rs1)         is nf & op2931=1 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg2e16_v(rs1);}
:vlseg2e16.v vd, (rs1), "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg2e16_v(rs1,v0);}

define pcodeop vlseg3e16_v;
:vlseg3e16.v vd, (rs1)         is nf & op2931=2 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg3e16_v(rs1);}
:vlseg3e16.v vd, (rs1), "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg3e16_v(rs1,v0);}

define pcodeop vlseg4e16_v;
:vlseg4e16.v vd, (rs1)         is nf & op2931=3 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg4e16_v(rs1);}
:vlseg4e16.v vd, (rs1), "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg4e16_v(rs1,v0);}

define pcodeop vlseg5e16_v;
:vlseg5e16.v vd, (rs1)         is nf & op2931=4 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg5e16_v(rs1);}
:vlseg5e16.v vd, (rs1), "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg5e16_v(rs1,v0);}

define pcodeop vlseg6e16_v;
:vlseg6e16.v vd, (rs1)         is nf & op2931=5 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg6e16_v(rs1);}
:vlseg6e16.v vd, (rs1), "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg6e16_v(rs1,v0);}

define pcodeop vlseg7e16_v;
:vlseg7e16.v vd, (rs1)         is nf & op2931=6 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg7e16_v(rs1);}
:vlseg7e16.v vd, (rs1), "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg7e16_v(rs1,v0);}

define pcodeop vlseg8e16_v;
:vlseg8e16.v vd, (rs1)         is nf & op2931=7 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg8e16_v(rs1);}
:vlseg8e16.v vd, (rs1), "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg8e16_v(rs1,v0);}

define pcodeop vle16ff_v;
# vle16ff.v        nf 28=0 27..26=0 vm 24..20=0x10 rs1 14..12=0x5  vd 6..0=0x07
# vle16ff.v   vd, (rs1), vm  #   16-bit unit-stride fault-only-first load
:vle16ff.v     vd, (rs1)         is nf &  op2931=0 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vle16ff_v(rs1);}
:vle16ff.v     vd, (rs1), "v0.t" is nf &  op2931=0 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vle16ff_v(rs1,v0);}

define pcodeop vlseg2e16ff_v;
:vlseg2e16ff.v vd, (rs1)         is nf &  op2931=1 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg2e16ff_v(rs1);}
:vlseg2e16ff.v vd, (rs1), "v0.t" is nf &  op2931=1 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg2e16ff_v(rs1,v0);}

define pcodeop vlseg3e16ff_v;
:vlseg3e16ff.v vd, (rs1)         is nf &  op2931=2 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg3e16ff_v(rs1);}
:vlseg3e16ff.v vd, (rs1), "v0.t" is nf &  op2931=2 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg3e16ff_v(rs1,v0);}

define pcodeop vlseg4e16ff_v;
:vlseg4e16ff.v vd, (rs1)         is nf &  op2931=3 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg4e16ff_v(rs1);}
:vlseg4e16ff.v vd, (rs1), "v0.t" is nf &  op2931=3 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg4e16ff_v(rs1,v0);}

define pcodeop vlseg5e16ff_v;
:vlseg5e16ff.v vd, (rs1)         is nf &  op2931=4 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg5e16ff_v(rs1);}
:vlseg5e16ff.v vd, (rs1), "v0.t" is nf &  op2931=4 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg5e16ff_v(rs1,v0);}

define pcodeop vlseg6e16ff_v;
:vlseg6e16ff.v vd, (rs1)         is nf &  op2931=5 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg6e16ff_v(rs1);}
:vlseg6e16ff.v vd, (rs1), "v0.t" is nf &  op2931=5 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg6e16ff_v(rs1,v0);}

define pcodeop vlseg7e16ff_v;
:vlseg7e16ff.v vd, (rs1)         is nf &  op2931=6 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg7e16ff_v(rs1);}
:vlseg7e16ff.v vd, (rs1), "v0.t" is nf &  op2931=6 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg7e16ff_v(rs1,v0);}

define pcodeop vlseg8e16ff_v;
:vlseg8e16ff.v vd, (rs1)         is nf &  op2931=7 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg8e16ff_v(rs1);}
:vlseg8e16ff.v vd, (rs1), "v0.t" is nf &  op2931=7 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg8e16ff_v(rs1,v0);}

define pcodeop vle256_v;
# vle256.v       nf 28=1 27..26=0 vm 24..20=0 rs1 14..12=0x5  vd 6..0=0x07
# vle256.v  vd, (rs1), vm  #  256-bit unit-stride load
:vle256.v       vd, (rs1),         is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vle256_v(rs1);}
:vle256.v       vd, (rs1), "v0.t"  is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vle256_v(rs1,v0);}

define pcodeop vlseg2e256_v;
:vlseg2e256.v   vd, (rs1),         is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg2e256_v(rs1);}
:vlseg2e256.v   vd, (rs1), "v0.t"  is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg2e256_v(rs1,v0);}

define pcodeop vlseg3e256_v;
:vlseg3e256.v   vd, (rs1),         is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg3e256_v(rs1);}
:vlseg3e256.v   vd, (rs1), "v0.t"  is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg3e256_v(rs1,v0);}

define pcodeop vlseg4e256_v;
:vlseg4e256.v   vd, (rs1),         is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg4e256_v(rs1);}
:vlseg4e256.v   vd, (rs1), "v0.t"  is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg4e256_v(rs1,v0);}

define pcodeop vlseg5e256_v;
:vlseg5e256.v   vd, (rs1),         is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg5e256_v(rs1);}
:vlseg5e256.v   vd, (rs1), "v0.t"  is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg5e256_v(rs1,v0);}

define pcodeop vlseg6e256_v;
:vlseg6e256.v   vd, (rs1),         is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg6e256_v(rs1);}
:vlseg6e256.v   vd, (rs1), "v0.t"  is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg6e256_v(rs1,v0);}

define pcodeop vlseg7e256_v;
:vlseg7e256.v   vd, (rs1),         is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg7e256_v(rs1);}
:vlseg7e256.v   vd, (rs1), "v0.t"  is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg7e256_v(rs1,v0);}

define pcodeop vlseg8e256_v;
:vlseg8e256.v   vd, (rs1),         is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg8e256_v(rs1);}
:vlseg8e256.v   vd, (rs1), "v0.t"  is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg8e256_v(rs1,v0);}

define pcodeop vle256ff_v;
# vle256ff.v       nf 28=1 27..26=0 vm 24..20=0x10 rs1 14..12=0x5  vd 6..0=0x07
# vle256ff.v  vd, (rs1), vm  #  256-bit unit-stride fault-only-first load
:vle256ff.v     vd, (rs1)         is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vle256ff_v(rs1);}
:vle256ff.v     vd, (rs1), "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vle256ff_v(rs1,v0);}

define pcodeop vlseg2e256ff_v;
:vlseg2e256ff.v vd, (rs1)         is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg2e256ff_v(rs1);}
:vlseg2e256ff.v vd, (rs1), "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg2e256ff_v(rs1,v0);}

define pcodeop vlseg3e256ff_v;
:vlseg3e256ff.v vd, (rs1)         is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg3e256ff_v(rs1);}
:vlseg3e256ff.v vd, (rs1), "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg3e256ff_v(rs1,v0);}

define pcodeop vlseg4e256ff_v;
:vlseg4e256ff.v vd, (rs1)         is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg4e256ff_v(rs1);}
:vlseg4e256ff.v vd, (rs1), "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg4e256ff_v(rs1,v0);}

define pcodeop vlseg5e256ff_v;
:vlseg5e256ff.v vd, (rs1)         is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg5e256ff_v(rs1);}
:vlseg5e256ff.v vd, (rs1), "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg5e256ff_v(rs1,v0);}

define pcodeop vlseg6e256ff_v;
:vlseg6e256ff.v vd, (rs1)         is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg6e256ff_v(rs1);}
:vlseg6e256ff.v vd, (rs1), "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg6e256ff_v(rs1,v0);}

define pcodeop vlseg7e256ff_v;
:vlseg7e256ff.v vd, (rs1)         is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg7e256ff_v(rs1);}
:vlseg7e256ff.v vd, (rs1), "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg7e256ff_v(rs1,v0);}

define pcodeop vlseg8e256ff_v;
:vlseg8e256ff.v vd, (rs1)         is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg8e256ff_v(rs1);}
:vlseg8e256ff.v vd, (rs1), "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlseg8e256ff_v(rs1,v0);}

define pcodeop vle32_v;
# vle32.v        nf 28=0 27..26=0 vm 24..20=0 rs1 14..12=0x6  vd 6..0=0x07
# vle32.v  vd, (rs1), vm  #   32-bit unit-stride load
:vle32.v     vd, (rs1)          is nf & op2931=0 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vle32_v(rs1);}
:vle32.v     vd, (rs1), "v0.t"  is nf & op2931=0 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vle32_v(rs1,v0);}

define pcodeop vlseg2e32_v;
:vlseg2e32.v vd, (rs1)          is nf & op2931=1 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg2e32_v(rs1);}
:vlseg2e32.v vd, (rs1), "v0.t"  is nf & op2931=1 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg2e32_v(rs1,v0);}

define pcodeop vlseg3e32_v;
:vlseg3e32.v vd, (rs1)          is nf & op2931=2 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg3e32_v(rs1);}
:vlseg3e32.v vd, (rs1), "v0.t"  is nf & op2931=2 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg3e32_v(rs1,v0);}

define pcodeop vlseg4e32_v;
:vlseg4e32.v vd, (rs1)          is nf & op2931=3 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg4e32_v(rs1);}
:vlseg4e32.v vd, (rs1), "v0.t"  is nf & op2931=3 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg4e32_v(rs1,v0);}

define pcodeop vlseg5e32_v;
:vlseg5e32.v vd, (rs1)          is nf & op2931=4 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg5e32_v(rs1);}
:vlseg5e32.v vd, (rs1), "v0.t"  is nf & op2931=4 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg5e32_v(rs1,v0);}

define pcodeop vlseg6e32_v;
:vlseg6e32.v vd, (rs1)          is nf & op2931=5 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg6e32_v(rs1);}
:vlseg6e32.v vd, (rs1), "v0.t"  is nf & op2931=5 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg6e32_v(rs1,v0);}

define pcodeop vlseg7e32_v;
:vlseg7e32.v vd, (rs1)          is nf & op2931=6 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg7e32_v(rs1);}
:vlseg7e32.v vd, (rs1), "v0.t"  is nf & op2931=6 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg7e32_v(rs1,v0);}

define pcodeop vlseg8e32_v;
:vlseg8e32.v vd, (rs1)          is nf & op2931=7 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg8e32_v(rs1);}
:vlseg8e32.v vd, (rs1), "v0.t"  is nf & op2931=7 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg8e32_v(rs1,v0);}

define pcodeop vle32ff_v;
# vle32ff.v        nf 28=0 27..26=0 vm 24..20=0x10 rs1 14..12=0x6  vd 6..0=0x07
# vle32ff.v   vd, (rs1), vm  #   32-bit unit-stride fault-only-first load
:vle32ff.v     vd, (rs1)         is nf & op2931=0 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vle32ff_v(rs1);}
:vle32ff.v     vd, (rs1), "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vle32ff_v(rs1,v0);}

define pcodeop vlseq2e32ff_v;
:vlseg2e32ff.v vd, (rs1)         is nf & op2931=1 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseq2e32ff_v(rs1);}
:vlseg2e32ff.v vd, (rs1), "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseq2e32ff_v(rs1,v0);}

define pcodeop vlseq3e32ff_v;
:vlseg3e32ff.v vd, (rs1)         is nf & op2931=2 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseq3e32ff_v(rs1);}
:vlseg3e32ff.v vd, (rs1), "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseq3e32ff_v(rs1,v0);}

define pcodeop vlseq4e32ff_v;
:vlseg4e32ff.v vd, (rs1)         is nf & op2931=3 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseq4e32ff_v(rs1);}
:vlseg4e32ff.v vd, (rs1), "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseq4e32ff_v(rs1,v0);}

define pcodeop vlseq5e32ff_v;
:vlseg5e32ff.v vd, (rs1)         is nf & op2931=4 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseq5e32ff_v(rs1);}
:vlseg5e32ff.v vd, (rs1), "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseq5e32ff_v(rs1,v0);}

define pcodeop vlseq6e32ff_v;
:vlseg6e32ff.v vd, (rs1)         is nf & op2931=5 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseq6e32ff_v(rs1);}
:vlseg6e32ff.v vd, (rs1), "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseq6e32ff_v(rs1,v0);}

define pcodeop vlseq7e32ff_v;
:vlseg7e32ff.v vd, (rs1)         is nf & op2931=6 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseq7e32ff_v(rs1);}
:vlseg7e32ff.v vd, (rs1), "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseq7e32ff_v(rs1,v0);}

define pcodeop vlseq8e32ff_v;
:vlseg8e32ff.v vd, (rs1)         is nf & op2931=7 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseq8e32ff_v(rs1);}
:vlseg8e32ff.v vd, (rs1), "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseq8e32ff_v(rs1,v0);}

define pcodeop vle512_v;
# vle512.v       nf 28=1 27..26=0 vm 24..20=0 rs1 14..12=0x6  vd 6..0=0x07
# vle512.v  vd, (rs1), vm  #  512-bit unit-stride load
:vle512.v   vd, (rs1)         is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vle512_v(rs1);}
:vle512.v   vd, (rs1), "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vle512_v(rs1,v0);}

define pcodeop vlseg2e512_v;
:vlseg2e512.v   vd, (rs1)         is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg2e512_v(rs1);}
:vlseg2e512.v   vd, (rs1), "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg2e512_v(rs1,v0);}

define pcodeop vlseg3e512_v;
:vlseg3e512.v   vd, (rs1)         is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg3e512_v(rs1);}
:vlseg3e512.v   vd, (rs1), "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg3e512_v(rs1,v0);}

define pcodeop vlseg4e512_v;
:vlseg4e512.v   vd, (rs1)         is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg4e512_v(rs1);}
:vlseg4e512.v   vd, (rs1), "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg4e512_v(rs1,v0);}

define pcodeop vlseg5e512_v;
:vlseg5e512.v   vd, (rs1)         is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg5e512_v(rs1);}
:vlseg5e512.v   vd, (rs1), "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg5e512_v(rs1,v0);}

define pcodeop vlseg6e512_v;
:vlseg6e512.v   vd, (rs1)         is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg6e512_v(rs1);}
:vlseg6e512.v   vd, (rs1), "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg6e512_v(rs1,v0);}

define pcodeop vlseg7e512_v;
:vlseg7e512.v   vd, (rs1)         is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg7e512_v(rs1);}
:vlseg7e512.v   vd, (rs1), "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg7e512_v(rs1,v0);}

define pcodeop vlseg8e512_v;
:vlseg8e512.v   vd, (rs1)         is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg8e512_v(rs1);}
:vlseg8e512.v   vd, (rs1), "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg8e512_v(rs1,v0);}

define pcodeop vle512ff_v;
# vle512ff.v       nf 28=1 27..26=0 vm 24..20=0x10 rs1 14..12=0x6  vd 6..0=0x07
# vle512ff.v  vd, (rs1), vm  #  512-bit unit-stride fault-only-first load
:vle512ff.v     vd, (rs1)         is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vle512ff_v(rs1);}
:vle512ff.v     vd, (rs1), "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vle512ff_v(rs1,v0);}

define pcodeop vlseg2e512ff_v;
:vlseg2e512ff.v vd, (rs1)         is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg2e512ff_v(rs1);}
:vlseg2e512ff.v vd, (rs1), "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg2e512ff_v(rs1,v0);}

define pcodeop vlseg3e512ff_v;
:vlseg3e512ff.v vd, (rs1)         is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg3e512ff_v(rs1);}
:vlseg3e512ff.v vd, (rs1), "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg3e512ff_v(rs1,v0);}

define pcodeop vlseg4e512ff_v;
:vlseg4e512ff.v vd, (rs1)         is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg4e512ff_v(rs1);}
:vlseg4e512ff.v vd, (rs1), "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg4e512ff_v(rs1,v0);}

define pcodeop vlseg5e512ff_v;
:vlseg5e512ff.v vd, (rs1)         is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg5e512ff_v(rs1);}
:vlseg5e512ff.v vd, (rs1), "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg5e512ff_v(rs1,v0);}

define pcodeop vlseg6e512ff_v;
:vlseg6e512ff.v vd, (rs1)         is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg6e512ff_v(rs1);}
:vlseg6e512ff.v vd, (rs1), "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg6e512ff_v(rs1,v0);}

define pcodeop vlseg7e512ff_v;
:vlseg7e512ff.v vd, (rs1)         is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg7e512ff_v(rs1);}
:vlseg7e512ff.v vd, (rs1), "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg7e512ff_v(rs1,v0);}

define pcodeop vlseg8e512ff_v;
:vlseg8e512ff.v vd, (rs1)         is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg8e512ff_v(rs1);}
:vlseg8e512ff.v vd, (rs1), "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlseg8e512ff_v(rs1,v0);}

define pcodeop vle64_v;
# vle64.v        nf 28=0 27..26=0 vm 24..20=0 rs1 14..12=0x7  vd 6..0=0x07
# vle64.v   vd, (rs1), vm  #   64-bit unit-stride load
:vle64.v    vd, (rs1)          is nf & op2931=0 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vle64_v(rs1);}
:vle64.v    vd, (rs1), "v0.t"  is nf & op2931=0 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vle64_v(rs1,v0);}

define pcodeop vlseg2e64_v;
:vlseg2e64.v    vd, (rs1)          is nf & op2931=1 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg2e64_v(rs1);}
:vlseg2e64.v    vd, (rs1), "v0.t"  is nf & op2931=1 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg2e64_v(rs1,v0);}

define pcodeop vlseg3e64_v;
:vlseg3e64.v    vd, (rs1)          is nf & op2931=2 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg3e64_v(rs1);}
:vlseg3e64.v    vd, (rs1), "v0.t"  is nf & op2931=2 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg3e64_v(rs1,v0);}

define pcodeop vlseg4e64_v;
:vlseg4e64.v    vd, (rs1)          is nf & op2931=3 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg4e64_v(rs1);}
:vlseg4e64.v    vd, (rs1), "v0.t"  is nf & op2931=3 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg4e64_v(rs1,v0);}

define pcodeop vlseg5e64_v;
:vlseg5e64.v    vd, (rs1)          is nf & op2931=4 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg5e64_v(rs1);}
:vlseg5e64.v    vd, (rs1), "v0.t"  is nf & op2931=4 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg5e64_v(rs1,v0);}

define pcodeop vlseg6e64_v;
:vlseg6e64.v    vd, (rs1)          is nf & op2931=5 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg6e64_v(rs1);}
:vlseg6e64.v    vd, (rs1), "v0.t"  is nf & op2931=5 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg6e64_v(rs1,v0);}

define pcodeop vlseg7e64_v;
:vlseg7e64.v    vd, (rs1)          is nf & op2931=6 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg7e64_v(rs1);}
:vlseg7e64.v    vd, (rs1), "v0.t"  is nf & op2931=6 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg7e64_v(rs1,v0);}

define pcodeop vlseg8e64_v;
:vlseg8e64.v    vd, (rs1)          is nf & op2931=7 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg8e64_v(rs1);}
:vlseg8e64.v    vd, (rs1), "v0.t"  is nf & op2931=7 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg8e64_v(rs1,v0);}

define pcodeop vle64ff_v;
# vle64ff.v        nf 28=0 27..26=0 vm 24..20=0x10 rs1 14..12=0x7  vd 6..0=0x07
# vle64ff.v   vd, (rs1), vm  #   64-bit unit-stride fault-only-first load
:vle64ff.v     vd, (rs1)         is nf & op2931=0x0 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vle64ff_v(rs1);}
:vle64ff.v     vd, (rs1), "v0.t" is nf & op2931=0x0 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vle64ff_v(rs1,v0);}

define pcodeop vlseg2e64ff_v;
:vlseg2e64ff.v vd, (rs1)         is nf & op2931=0x1 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg2e64ff_v(rs1);}
:vlseg2e64ff.v vd, (rs1), "v0.t" is nf & op2931=0x1 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg2e64ff_v(rs1,v0);}

define pcodeop vlseg3e64ff_v;
:vlseg3e64ff.v vd, (rs1)         is nf & op2931=0x2 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg3e64ff_v(rs1);}
:vlseg3e64ff.v vd, (rs1), "v0.t" is nf & op2931=0x2 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg3e64ff_v(rs1,v0);}

define pcodeop vlseg4e64ff_v;
:vlseg4e64ff.v vd, (rs1)         is nf & op2931=0x3 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg4e64ff_v(rs1);}
:vlseg4e64ff.v vd, (rs1), "v0.t" is nf & op2931=0x3 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg4e64ff_v(rs1,v0);}

define pcodeop vlseg5e64ff_v;
:vlseg5e64ff.v vd, (rs1)         is nf & op2931=0x4 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg5e64ff_v(rs1);}
:vlseg5e64ff.v vd, (rs1), "v0.t" is nf & op2931=0x4 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg5e64ff_v(rs1,v0);}

define pcodeop vlseg6e64ff_v;
:vlseg6e64ff.v vd, (rs1)         is nf & op2931=0x5 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg6e64ff_v(rs1);}
:vlseg6e64ff.v vd, (rs1), "v0.t" is nf & op2931=0x5 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg6e64ff_v(rs1,v0);}

define pcodeop vlseg7e64ff_v;
:vlseg7e64ff.v vd, (rs1)         is nf & op2931=0x6 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg7e64ff_v(rs1);}
:vlseg7e64ff.v vd, (rs1), "v0.t" is nf & op2931=0x6 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg7e64ff_v(rs1,v0);}

define pcodeop vlseg8e64ff_v;
:vlseg8e64ff.v vd, (rs1)         is nf & op2931=0x7 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg8e64ff_v(rs1);}
:vlseg8e64ff.v vd, (rs1), "v0.t" is nf & op2931=0x7 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x10 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlseg8e64ff_v(rs1,v0);}

define pcodeop vle8_v;
# vle8.v         nf 28=0 27..26=0 vm 24..20=0 rs1 14..12=0x0  vd 6..0=0x07
# vle8.v    vd, (rs1), vm  #    8-bit unit-stride load, optionally segmented
:vle8.v     vd, (rs1)         is nf & op2931=0x0 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vle8_v(rs1);}
:vle8.v     vd, (rs1), "v0.t" is nf & op2931=0x0 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vle8_v(rs1,v0);}

define pcodeop vlseg2e8_v;
:vlseg2e8.v vd, (rs1)         is nf & op2931=0x1 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg2e8_v(rs1);}
:vlseg2e8.v vd, (rs1), "v0.t" is nf & op2931=0x1 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg2e8_v(rs1,v0);}

define pcodeop vlseg3e8_v;
:vlseg3e8.v vd, (rs1)         is nf & op2931=0x2 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg3e8_v(rs1);}
:vlseg3e8.v vd, (rs1), "v0.t" is nf & op2931=0x2 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg3e8_v(rs1,v0);}

define pcodeop vlseg4e8_v;
:vlseg4e8.v vd, (rs1)         is nf & op2931=0x3 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg4e8_v(rs1);}
:vlseg4e8.v vd, (rs1), "v0.t" is nf & op2931=0x3 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg4e8_v(rs1,v0);}

define pcodeop vlseg5e8_v;
:vlseg5e8.v vd, (rs1)         is nf & op2931=0x4 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg5e8_v(rs1);}
:vlseg5e8.v vd, (rs1), "v0.t" is nf & op2931=0x4 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg5e8_v(rs1,v0);}

define pcodeop vlseg6e8_v;
:vlseg6e8.v vd, (rs1)         is nf & op2931=0x5 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg6e8_v(rs1);}
:vlseg6e8.v vd, (rs1), "v0.t" is nf & op2931=0x5 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg6e8_v(rs1,v0);}

define pcodeop vlseg7e8_v;
:vlseg7e8.v vd, (rs1)         is nf & op2931=0x6 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg7e8_v(rs1);}
:vlseg7e8.v vd, (rs1), "v0.t" is nf & op2931=0x6 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg7e8_v(rs1,v0);}

define pcodeop vlseg8e8_v;
:vlseg8e8.v vd, (rs1)         is nf & op2931=0x7 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg8e8_v(rs1);}
:vlseg8e8.v vd, (rs1), "v0.t" is nf & op2931=0x7 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg8e8_v(rs1,v0);}

define pcodeop vlm8_v;
# vlm8.v    vd, (rs1)        # Load byte vector of length ceil(vl/8)
:vlm.v      vd, (rs1)         is nf & op2828=0x0 & op2627=0x0 & vm & op2024=0x0b & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlm8_v(rs1);} 

# vloxei8.v Vector indexed-ordered load instructions

define pcodeop vloxei8_v;
:vloxei8.v  vd, (rs1),vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxei8_v(rs1,vs2);}
:vloxei8.v  vd, (rs1),vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxei8_v(rs1,vs2,v0);}

define pcodeop vloxseg2ei8_v;
:vloxseg2ei8.v  vd, (rs1),vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxseg2ei8_v(rs1,vs2);}
:vloxseg2ei8.v  vd, (rs1),vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxseg2ei8_v(rs1,vs2,v0);}

define pcodeop vloxseg3ei8_v;
:vloxseg3ei8.v  vd, (rs1),vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxseg3ei8_v(rs1,vs2);}
:vloxseg3ei8.v  vd, (rs1),vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxseg3ei8_v(rs1,vs2,v0);}

define pcodeop vloxseg4ei8_v;
:vloxseg4ei8.v  vd, (rs1),vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxseg4ei8_v(rs1,vs2);}
:vloxseg4ei8.v  vd, (rs1),vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxseg4ei8_v(rs1,vs2,v0);}

define pcodeop vloxseg5ei8_v;
:vloxseg5ei8.v  vd, (rs1),vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxseg5ei8_v(rs1,vs2);}
:vloxseg5ei8.v  vd, (rs1),vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxseg5ei8_v(rs1,vs2,v0);}

define pcodeop vloxseg6ei8_v;
:vloxseg6ei8.v  vd, (rs1),vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxseg6ei8_v(rs1,vs2);}
:vloxseg6ei8.v  vd, (rs1),vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxseg6ei8_v(rs1,vs2,v0);}

define pcodeop vloxseg7ei8_v;
:vloxseg7ei8.v  vd, (rs1),vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxseg7ei8_v(rs1,vs2);}
:vloxseg7ei8.v  vd, (rs1),vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxseg7ei8_v(rs1,vs2,v0);}

define pcodeop vloxseg8ei8_v;
:vloxseg8ei8.v  vd, (rs1),vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxseg8ei8_v(rs1,vs2);}
:vloxseg8ei8.v  vd, (rs1),vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vloxseg8ei8_v(rs1,vs2,v0);}

# vloxei16.v Vector indexed-ordered load instructions

define pcodeop vloxei16_v;
:vloxei16.v     vd, (rs1),vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxei16_v(rs1,vs2);}
:vloxei16.v     vd, (rs1),vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxei16_v(rs1,vs2,v0);}

define pcodeop vloxseg2ei16_v;
:vloxseg2ei16.v vd, (rs1),vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxseg2ei16_v(rs1,vs2);}
:vloxseg2ei16.v vd, (rs1),vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxseg2ei16_v(rs1,vs2,v0);}

define pcodeop vloxseg3ei16_v;
:vloxseg3ei16.v vd, (rs1),vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxseg3ei16_v(rs1,vs2);}
:vloxseg3ei16.v vd, (rs1),vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxseg3ei16_v(rs1,vs2,v0);}

define pcodeop vloxseg4ei16_v;
:vloxseg4ei16.v vd, (rs1),vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxseg4ei16_v(rs1,vs2);}
:vloxseg4ei16.v vd, (rs1),vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxseg4ei16_v(rs1,vs2,v0);}

define pcodeop vloxseg5ei16_v;
:vloxseg5ei16.v vd, (rs1),vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxseg5ei16_v(rs1,vs2);}
:vloxseg5ei16.v vd, (rs1),vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxseg5ei16_v(rs1,vs2,v0);}

define pcodeop vloxseg6ei16_v;
:vloxseg6ei16.v vd, (rs1),vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxseg6ei16_v(rs1,vs2);}
:vloxseg6ei16.v vd, (rs1),vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxseg6ei16_v(rs1,vs2,v0);}

define pcodeop vloxseg7ei16_v;
:vloxseg7ei16.v vd, (rs1),vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxseg7ei16_v(rs1,vs2);}
:vloxseg7ei16.v vd, (rs1),vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxseg7ei16_v(rs1,vs2,v0);}

define pcodeop vloxseg8ei16_v;
:vloxseg8ei16.v vd, (rs1),vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxseg8ei16_v(rs1,vs2);}
:vloxseg8ei16.v vd, (rs1),vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vloxseg8ei16_v(rs1,vs2,v0);}

# vloxei32.v Vector indexed-ordered load instructions

define pcodeop vloxei32_v;
:vloxei32.v     vd, (rs1),vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxei32_v(rs1,vs2);}
:vloxei32.v     vd, (rs1),vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxei32_v(rs1,vs2,v0);}

define pcodeop vloxseg2ei32_v;
:vloxseg2ei32.v vd, (rs1),vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxseg2ei32_v(rs1,vs2);}
:vloxseg2ei32.v vd, (rs1),vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxseg2ei32_v(rs1,vs2,v0);}

define pcodeop vloxseg3ei32_v;
:vloxseg3ei32.v vd, (rs1),vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxseg3ei32_v(rs1,vs2);}
:vloxseg3ei32.v vd, (rs1),vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxseg3ei32_v(rs1,vs2,v0);}

define pcodeop vloxseg4ei32_v;
:vloxseg4ei32.v vd, (rs1),vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxseg4ei32_v(rs1,vs2);}
:vloxseg4ei32.v vd, (rs1),vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxseg4ei32_v(rs1,vs2,v0);}

define pcodeop vloxseg5ei32_v;
:vloxseg5ei32.v vd, (rs1),vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxseg5ei32_v(rs1,vs2);}
:vloxseg5ei32.v vd, (rs1),vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxseg5ei32_v(rs1,vs2,v0);}

define pcodeop vloxseg6ei32_v;
:vloxseg6ei32.v vd, (rs1),vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxseg6ei32_v(rs1,vs2);}
:vloxseg6ei32.v vd, (rs1),vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxseg6ei32_v(rs1,vs2,v0);}

define pcodeop vloxseg7ei32_v;
:vloxseg7ei32.v vd, (rs1),vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxseg7ei32_v(rs1,vs2);}
:vloxseg7ei32.v vd, (rs1),vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxseg7ei32_v(rs1,vs2,v0);}

define pcodeop vloxseg8ei32_v;
:vloxseg8ei32.v vd, (rs1),vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxseg8ei32_v(rs1,vs2);}
:vloxseg8ei32.v vd, (rs1),vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vloxseg8ei32_v(rs1,vs2,v0);}

# vloxei64.v Vector indexed-ordered load instructions

define pcodeop vloxei64_v;
:vloxei64.v     vd, (rs1),vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxei64_v(rs1,vs2);}
:vloxei64.v     vd, (rs1),vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxei64_v(rs1,vs2,v0);}

define pcodeop vloxseg2ei64_v;
:vloxseg2ei64.v vd, (rs1),vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxseg2ei64_v(rs1,vs2);}
:vloxseg2ei64.v vd, (rs1),vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxseg2ei64_v(rs1,vs2,v0);}

define pcodeop vloxseg3ei64_v;
:vloxseg3ei64.v vd, (rs1),vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxseg3ei64_v(rs1,vs2);}
:vloxseg3ei64.v vd, (rs1),vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxseg3ei64_v(rs1,vs2,v0);}

define pcodeop vloxseg4ei64_v;
:vloxseg4ei64.v vd, (rs1),vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxseg4ei64_v(rs1,vs2);}
:vloxseg4ei64.v vd, (rs1),vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxseg4ei64_v(rs1,vs2,v0);}

define pcodeop vloxseg5ei64_v;
:vloxseg5ei64.v vd, (rs1),vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxseg5ei64_v(rs1,vs2);}
:vloxseg5ei64.v vd, (rs1),vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxseg5ei64_v(rs1,vs2,v0);}

define pcodeop vloxseg6ei64_v;
:vloxseg6ei64.v vd, (rs1),vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxseg6ei64_v(rs1,vs2);}
:vloxseg6ei64.v vd, (rs1),vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxseg6ei64_v(rs1,vs2,v0);}

define pcodeop vloxseg7ei64_v;
:vloxseg7ei64.v vd, (rs1),vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxseg7ei64_v(rs1,vs2);}
:vloxseg7ei64.v vd, (rs1),vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxseg7ei64_v(rs1,vs2,v0);}

define pcodeop vloxseg8ei64_v;
:vloxseg8ei64.v vd, (rs1),vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxseg8ei64_v(rs1,vs2);}
:vloxseg8ei64.v vd, (rs1),vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vloxseg8ei64_v(rs1,vs2,v0);}

# vluxei8.v Vector indexed-ordered load instructions

define pcodeop vluxei8_v;
:vluxei8.v      vd, (rs1),vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxei8_v(rs1,vs2);}
:vluxei8.v      vd, (rs1),vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxei8_v(rs1,v0);}

define pcodeop vluxseg2ei8_v;
:vluxseg2ei8.v  vd, (rs1),vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxseg2ei8_v(rs1,vs2);}
:vluxseg2ei8.v  vd, (rs1),vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxseg2ei8_v(rs1,vs2,v0);}

define pcodeop vluxseg3ei8_v;
:vluxseg3ei8.v  vd, (rs1),vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxseg3ei8_v(rs1,vs2);}
:vluxseg3ei8.v  vd, (rs1),vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxseg3ei8_v(rs1,vs2,v0);}

define pcodeop vluxseg4ei8_v;
:vluxseg4ei8.v  vd, (rs1),vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxseg4ei8_v(rs1,vs2);}
:vluxseg4ei8.v  vd, (rs1),vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxseg4ei8_v(rs1,vs2,v0);}

define pcodeop vluxseg5ei8_v;
:vluxseg5ei8.v  vd, (rs1),vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxseg5ei8_v(rs1,vs2);}
:vluxseg5ei8.v  vd, (rs1),vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxseg5ei8_v(rs1,vs2,v0);}

define pcodeop vluxseg6ei8_v;
:vluxseg6ei8.v  vd, (rs1),vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxseg6ei8_v(rs1,vs2);}
:vluxseg6ei8.v  vd, (rs1),vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxseg6ei8_v(rs1,vs2,v0);}

define pcodeop vluxseg7ei8_v;
:vluxseg7ei8.v  vd, (rs1),vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxseg7ei8_v(rs1,vs2);}
:vluxseg7ei8.v  vd, (rs1),vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxseg7ei8_v(rs1,vs2,v0);}

define pcodeop vluxseg8ei8_v;
:vluxseg8ei8.v  vd, (rs1),vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxseg8ei8_v(rs1,vs2);}
:vluxseg8ei8.v  vd, (rs1),vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vluxseg8ei8_v(rs1,vs2,v0);}

# vluxei16.v Vector indexed-ordered load instructions

define pcodeop vluxei16_v;
:vluxei16.v  vd, (rs1),vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxei16_v(rs1,vs2);}
:vluxei16.v  vd, (rs1),vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxei16_v(rs1,vs2,v0);}

define pcodeop vluxseg2ei16_v;
:vluxseg2ei16.v vd, (rs1),vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxseg2ei16_v(rs1,vs2);}
:vluxseg2ei16.v vd, (rs1),vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxseg2ei16_v(rs1,vs2,v0);}

define pcodeop vluxseg3ei16_v;
:vluxseg3ei16.v vd, (rs1),vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxseg3ei16_v(rs1,vs2);}
:vluxseg3ei16.v vd, (rs1),vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxseg3ei16_v(rs1,vs2,v0);}

define pcodeop vluxseg4ei16_v;
:vluxseg4ei16.v vd, (rs1),vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxseg4ei16_v(rs1,vs2);}
:vluxseg4ei16.v vd, (rs1),vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxseg4ei16_v(rs1,vs2,v0);}

define pcodeop vluxseg5ei16_v;
:vluxseg5ei16.v vd, (rs1),vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxseg5ei16_v(rs1,vs2);}
:vluxseg5ei16.v vd, (rs1),vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxseg5ei16_v(rs1,vs2,v0);}

define pcodeop vluxseg6ei16_v;
:vluxseg6ei16.v vd, (rs1),vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxseg6ei16_v(rs1,vs2);}
:vluxseg6ei16.v vd, (rs1),vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxseg6ei16_v(rs1,vs2,v0);}

define pcodeop vluxseg7ei16_v;
:vluxseg7ei16.v vd, (rs1),vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxseg7ei16_v(rs1,vs2);}
:vluxseg7ei16.v vd, (rs1),vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxseg7ei16_v(rs1,vs2,v0);}

define pcodeop vluxseg8ei16_v;
:vluxseg8ei16.v vd, (rs1),vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxseg8ei16_v(rs1,vs2);}
:vluxseg8ei16.v vd, (rs1),vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vluxseg8ei16_v(rs1,vs2,v0);}

# vluxei32.v Vector indexed-ordered load instructions

define pcodeop vluxei32_v;
:vluxei32.v     vd, (rs1),vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxei32_v(rs1,vs2);}
:vluxei32.v     vd, (rs1),vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxei32_v(rs1,vs2,v0);}

define pcodeop vluxseg2ei32_v;
:vluxseg2ei32.v vd, (rs1),vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxseg2ei32_v(rs1,vs2);}
:vluxseg2ei32.v vd, (rs1),vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxseg2ei32_v(rs1,vs2,v0);}

define pcodeop vluxseg3ei32_v;
:vluxseg3ei32.v vd, (rs1),vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxseg3ei32_v(rs1,vs2);}
:vluxseg3ei32.v vd, (rs1),vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxseg3ei32_v(rs1,vs2,v0);}

define pcodeop vluxseg4ei32_v;
:vluxseg4ei32.v vd, (rs1),vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxseg4ei32_v(rs1,vs2);}
:vluxseg4ei32.v vd, (rs1),vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxseg4ei32_v(rs1,vs2,v0);}

define pcodeop vluxseg5ei32_v;
:vluxseg5ei32.v vd, (rs1),vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxseg5ei32_v(rs1,vs2);}
:vluxseg5ei32.v vd, (rs1),vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxseg5ei32_v(rs1,vs2,v0);}

define pcodeop vluxseg6ei32_v;
:vluxseg6ei32.v vd, (rs1),vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxseg6ei32_v(rs1,vs2);}
:vluxseg6ei32.v vd, (rs1),vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxseg6ei32_v(rs1,vs2,v0);}

define pcodeop vluxseg7ei32_v;
:vluxseg7ei32.v vd, (rs1),vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxseg7ei32_v(rs1,vs2);}
:vluxseg7ei32.v vd, (rs1),vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxseg7ei32_v(rs1,vs2,v0);}

define pcodeop vluxseg8ei32_v;
:vluxseg8ei32.v vd, (rs1),vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxseg8ei32_v(rs1,vs2);}
:vluxseg8ei32.v vd, (rs1),vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vluxseg8ei32_v(rs1,vs2,v0);}

# vluxei64.v Vector indexed-ordered load instructions

define pcodeop vluxei64_v;
:vluxei64.v     vd, (rs1),vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxei64_v(rs1,vs2);}
:vluxei64.v     vd, (rs1),vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxei64_v(rs1,vs2,v0);}

define pcodeop vluxseg2ei64_v;
:vluxseg2ei64.v vd, (rs1),vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxseg2ei64_v(rs1,vs2);}
:vluxseg2ei64.v vd, (rs1),vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxseg2ei64_v(rs1,vs2,v0);}

define pcodeop vluxseg3ei64_v;
:vluxseg3ei64.v vd, (rs1),vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxseg3ei64_v(rs1,vs2);}
:vluxseg3ei64.v vd, (rs1),vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxseg3ei64_v(rs1,vs2,v0);}

define pcodeop vluxseg4ei64_v;
:vluxseg4ei64.v vd, (rs1),vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxseg4ei64_v(rs1,vs2);}
:vluxseg4ei64.v vd, (rs1),vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxseg4ei64_v(rs1,vs2,v0);}

define pcodeop vluxseg5ei64_v;
:vluxseg5ei64.v vd, (rs1),vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxseg5ei64_v(rs1,vs2);}
:vluxseg5ei64.v vd, (rs1),vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxseg5ei64_v(rs1,vs2,v0);}

define pcodeop vluxseg6ei64_v;
:vluxseg6ei64.v vd, (rs1),vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxseg6ei64_v(rs1,vs2);}
:vluxseg6ei64.v vd, (rs1),vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxseg6ei64_v(rs1,vs2,v0);}

define pcodeop vluxseg7ei64_v;
:vluxseg7ei64.v vd, (rs1),vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxseg7ei64_v(rs1,vs2);}
:vluxseg7ei64.v vd, (rs1),vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxseg7ei64_v(rs1,vs2,v0);}

define pcodeop vluxseg8ei64_v;
:vluxseg8ei64.v vd, (rs1),vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxseg8ei64_v(rs1,vs2);}
:vluxseg8ei64.v vd, (rs1),vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vluxseg8ei64_v(rs1,vs2,v0);}

define pcodeop vle8ff_v;
# vle8ff.v         nf 28=0 27..26=0 vm 24..20=0x10 rs1 14..12=0x0  vd 6..0=0x07
# vle8ff.v    vd, (rs1), vm  #  8-bit unit-stride fault-only-first load
:vle8ff.v     vd, (rs1)         is nf & op2931=0 & op2828=0x0 & op2627=0x0 &  op2525=1 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vle8ff_v(rs1);}
:vle8ff.v     vd, (rs1), "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x0 &  op2525=0 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vle8ff_v(rs1,v0);}

define pcodeop vlseg2e8ff_v;
:vlseg2e8ff.v vd, (rs1)         is nf & op2931=1 & op2828=0x0 & op2627=0x0 &  op2525=1 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg2e8ff_v(rs1);}
:vlseg2e8ff.v vd, (rs1), "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x0 &  op2525=0 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg2e8ff_v(rs1,v0);}

define pcodeop vlseg3e8ff_v;
:vlseg3e8ff.v vd, (rs1)         is nf & op2931=2 & op2828=0x0 & op2627=0x0 &  op2525=1 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg3e8ff_v(rs1);}
:vlseg3e8ff.v vd, (rs1), "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x0 &  op2525=0 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg3e8ff_v(rs1,v0);}

define pcodeop vlseg4e8ff_v;
:vlseg4e8ff.v vd, (rs1)         is nf & op2931=3 & op2828=0x0 & op2627=0x0 &  op2525=1 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg4e8ff_v(rs1);}
:vlseg4e8ff.v vd, (rs1), "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x0 &  op2525=0 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg4e8ff_v(rs1,v0);}

define pcodeop vlseg5e8ff_v;
:vlseg5e8ff.v vd, (rs1)         is nf & op2931=4 & op2828=0x0 & op2627=0x0 &  op2525=1 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg5e8ff_v(rs1);}
:vlseg5e8ff.v vd, (rs1), "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x0 &  op2525=0 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg5e8ff_v(rs1,v0);}

define pcodeop vlseg6e8ff_v;
:vlseg6e8ff.v vd, (rs1)         is nf & op2931=5 & op2828=0x0 & op2627=0x0 &  op2525=1 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg6e8ff_v(rs1);}
:vlseg6e8ff.v vd, (rs1), "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x0 &  op2525=0 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg6e8ff_v(rs1,v0);}

define pcodeop vlseg7e8ff_v;
:vlseg7e8ff.v vd, (rs1)         is nf & op2931=6 & op2828=0x0 & op2627=0x0 &  op2525=1 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg7e8ff_v(rs1);}
:vlseg7e8ff.v vd, (rs1), "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x0 &  op2525=0 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg7e8ff_v(rs1,v0);}

define pcodeop vlseg8e8ff_v;
:vlseg8e8ff.v vd, (rs1)         is nf & op2931=7 & op2828=0x0 & op2627=0x0 &  op2525=1 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg8e8ff_v(rs1);}
:vlseg8e8ff.v vd, (rs1), "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x0 &  op2525=0 & op2024=0x10 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg8e8ff_v(rs1,v0);}

define pcodeop vlse1024_v;
# vlse1024.v      nf 28=1 27..26=2 vm rs2 rs1 14..12=0x7  vd 6..0=0x07
# vlse1024.v vd, (rs1), rs2, vm  # 1024-bit strided load
:vlse1024.v      vd, (rs1), rs2         is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlse1024_v(rs1,rs2);}
:vlse1024.v      vd, (rs1), rs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlse1024_v(rs1,rs2,v0);}

define pcodeop vlsseg2e1024_v;
:vlsseg2e1024.v  vd, (rs1), rs2         is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg2e1024_v(rs1,rs2);}
:vlsseg2e1024.v  vd, (rs1), rs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg2e1024_v(rs1,rs2,v0);}

define pcodeop vlsseg3e1024_v;
:vlsseg3e1024.v  vd, (rs1), rs2         is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg3e1024_v(rs1,rs2);}
:vlsseg3e1024.v  vd, (rs1), rs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg3e1024_v(rs1,rs2,v0);}

define pcodeop vlsseg4e1024_v;
:vlsseg4e1024.v  vd, (rs1), rs2         is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg4e1024_v(rs1,rs2);}
:vlsseg4e1024.v  vd, (rs1), rs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg4e1024_v(rs1,rs2,v0);}

define pcodeop vlsseg5e1024_v;
:vlsseg5e1024.v  vd, (rs1), rs2         is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg5e1024_v(rs1,rs2);}
:vlsseg5e1024.v  vd, (rs1), rs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg5e1024_v(rs1,rs2,v0);}

define pcodeop vlsseg6e1024_v;
:vlsseg6e1024.v  vd, (rs1), rs2         is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg6e1024_v(rs1,rs2);}
:vlsseg6e1024.v  vd, (rs1), rs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg6e1024_v(rs1,rs2,v0);}

define pcodeop vlsseg7e1024_v;
:vlsseg7e1024.v  vd, (rs1), rs2         is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg7e1024_v(rs1,rs2);}
:vlsseg7e1024.v  vd, (rs1), rs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg7e1024_v(rs1,rs2,v0);}

define pcodeop vlsseg8e1024_v;
:vlsseg8e1024.v  vd, (rs1), rs2         is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg8e1024_v(rs1,rs2);}
:vlsseg8e1024.v  vd, (rs1), rs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg8e1024_v(rs1,rs2,v0);}

define pcodeop vlse128_v;
# vlse128.v       nf 28=1 27..26=2 vm rs2 rs1 14..12=0x0  vd 6..0=0x07
# vlse128.v  vd, (rs1), rs2, vm  #  128-bit strided load
:vlse128.v     vd, (rs1), rs2         is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlse128_v(rs1,rs2);}
:vlse128.v     vd, (rs1), rs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlse128_v(rs1,rs2,v0);}

define pcodeop vlsseg2e128_v;
:vlsseg2e128.v vd, (rs1), rs2         is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlsseg2e128_v(rs1,rs2);}
:vlsseg2e128.v vd, (rs1), rs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlsseg2e128_v(rs1,rs2,v0);}

define pcodeop vlsseg3e128_v;
:vlsseg3e128.v vd, (rs1), rs2         is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlsseg3e128_v(rs1,rs2);}
:vlsseg3e128.v vd, (rs1), rs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlsseg3e128_v(rs1,rs2,v0);}

define pcodeop vlsseg4e128_v;
:vlsseg4e128.v vd, (rs1), rs2         is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlsseg4e128_v(rs1,rs2);}
:vlsseg4e128.v vd, (rs1), rs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlsseg4e128_v(rs1,rs2,v0);}

define pcodeop vlsseg5e128_v;
:vlsseg5e128.v vd, (rs1), rs2         is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlsseg5e128_v(rs1,rs2);}
:vlsseg5e128.v vd, (rs1), rs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlsseg5e128_v(rs1,rs2,v0);}

define pcodeop vlsseg6e128_v;
:vlsseg6e128.v vd, (rs1), rs2         is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlsseg6e128_v(rs1,rs2);}
:vlsseg6e128.v vd, (rs1), rs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlsseg6e128_v(rs1,rs2,v0);}

define pcodeop vlsseg7e128_v;
:vlsseg7e128.v vd, (rs1), rs2         is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlsseg7e128_v(rs1,rs2);}
:vlsseg7e128.v vd, (rs1), rs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlsseg7e128_v(rs1,rs2,v0);}

define pcodeop vlsseg8e128_v;
:vlsseg8e128.v vd, (rs1), rs2         is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlsseg8e128_v(rs1,rs2);}
:vlsseg8e128.v vd, (rs1), rs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlsseg8e128_v(rs1,rs2,v0);}

define pcodeop vlse16_v;
# vlse16.v        nf 28=0 27..26=2 vm rs2 rs1 14..12=0x5  vd 6..0=0x07
# vlse16.v    vd, (rs1), rs2, vm  #   16-bit strided load
:vlse16.v     vd, (rs1), rs2         is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlse16_v(rs1,rs2);}
:vlse16.v     vd, (rs1), rs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlse16_v(rs1,rs2,v0);}

define pcodeop vlsseg2e16_v;
:vlsseg2e16.v vd, (rs1), rs2         is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg2e16_v(rs1,rs2);}
:vlsseg2e16.v vd, (rs1), rs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg2e16_v(rs1,rs2,v0);}

define pcodeop vlsseg3e16_v;
:vlsseg3e16.v vd, (rs1), rs2         is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg3e16_v(rs1,rs2);}
:vlsseg3e16.v vd, (rs1), rs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg3e16_v(rs1,rs2,v0);}

define pcodeop vlsseg4e16_v;
:vlsseg4e16.v vd, (rs1), rs2         is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg4e16_v(rs1,rs2);}
:vlsseg4e16.v vd, (rs1), rs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg4e16_v(rs1,rs2,v0);}

define pcodeop vlsseg5e16_v;
:vlsseg5e16.v vd, (rs1), rs2         is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg5e16_v(rs1,rs2);}
:vlsseg5e16.v vd, (rs1), rs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg5e16_v(rs1,rs2,v0);}

define pcodeop vlsseg6e16_v;
:vlsseg6e16.v vd, (rs1), rs2         is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg6e16_v(rs1,rs2);}
:vlsseg6e16.v vd, (rs1), rs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg6e16_v(rs1,rs2,v0);}

define pcodeop vlsseg7e16_v;
:vlsseg7e16.v vd, (rs1), rs2         is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg7e16_v(rs1,rs2);}
:vlsseg7e16.v vd, (rs1), rs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg7e16_v(rs1,rs2,v0);}

define pcodeop vlsseg8e16_v;
:vlsseg8e16.v vd, (rs1), rs2         is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg8e16_v(rs1,rs2);}
:vlsseg8e16.v vd, (rs1), rs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg8e16_v(rs1,rs2,v0);}

define pcodeop vlse256_v;
# vlse256.v       nf 28=1 27..26=2 vm rs2 rs1 14..12=0x5  vd 6..0=0x07
# vlse256.v  vd, (rs1), rs2, vm  #  256-bit strided load
:vlse256.v     vd, (rs1), rs2         is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlse256_v(rs1,rs2);}
:vlse256.v     vd, (rs1), rs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlse256_v(rs1,rs2,v0);}

define pcodeop vlsseg2e256_v;
:vlsseg2e256.v vd, (rs1), rs2         is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg2e256_v(rs1,rs2);}
:vlsseg2e256.v vd, (rs1), rs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg2e256_v(rs1,rs2,v0);}

define pcodeop vlsseg3e256_v;
:vlsseg3e256.v vd, (rs1), rs2         is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg3e256_v(rs1,rs2);}
:vlsseg3e256.v vd, (rs1), rs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg3e256_v(rs1,rs2,v0);}

define pcodeop vlsseg4e256_v;
:vlsseg4e256.v vd, (rs1), rs2         is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg4e256_v(rs1,rs2);}
:vlsseg4e256.v vd, (rs1), rs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg4e256_v(rs1,rs2,v0);}

define pcodeop vlsseg5e256_v;
:vlsseg5e256.v vd, (rs1), rs2         is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg5e256_v(rs1,rs2);}
:vlsseg5e256.v vd, (rs1), rs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg5e256_v(rs1,rs2,v0);}

define pcodeop vlsseg6e256_v;
:vlsseg6e256.v vd, (rs1), rs2         is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg6e256_v(rs1,rs2);}
:vlsseg6e256.v vd, (rs1), rs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg6e256_v(rs1,rs2,v0);}

define pcodeop vlsseg7e256_v;
:vlsseg7e256.v vd, (rs1), rs2         is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg7e256_v(rs1,rs2);}
:vlsseg7e256.v vd, (rs1), rs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg7e256_v(rs1,rs2,v0);}

define pcodeop vlsseg8e256_v;
:vlsseg8e256.v vd, (rs1), rs2         is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg8e256_v(rs1,rs2);}
:vlsseg8e256.v vd, (rs1), rs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlsseg8e256_v(rs1,rs2,v0);}

define pcodeop vlse32_v;
# vlse32.v        nf 28=0 27..26=2 vm rs2 rs1 14..12=0x6  vd 6..0=0x07
# vlse32.v   vd, (rs1), rs2, vm  #   32-bit strided load
:vlse32.v     vd, (rs1), rs2         is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlse32_v(rs1,rs2);}
:vlse32.v     vd, (rs1), rs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlse32_v(rs1,rs2,v0);}

define pcodeop vlsseg2e32_v;
:vlsseg2e32.v vd, (rs1), rs2         is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg2e32_v(rs1,rs2);}
:vlsseg2e32.v vd, (rs1), rs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg2e32_v(rs1,rs2,v0);}

define pcodeop vlsseg3e32_v;
:vlsseg3e32.v vd, (rs1), rs2         is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg3e32_v(rs1,rs2);}
:vlsseg3e32.v vd, (rs1), rs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg3e32_v(rs1,rs2,v0);}

define pcodeop vlsseg4e32_v;
:vlsseg4e32.v vd, (rs1), rs2         is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg4e32_v(rs1,rs2);}
:vlsseg4e32.v vd, (rs1), rs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg4e32_v(rs1,rs2,v0);}

define pcodeop vlsseg5e32_v;
:vlsseg5e32.v vd, (rs1), rs2         is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg5e32_v(rs1,rs2);}
:vlsseg5e32.v vd, (rs1), rs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg5e32_v(rs1,rs2,v0);}

define pcodeop vlsseg6e32_v;
:vlsseg6e32.v vd, (rs1), rs2         is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg6e32_v(rs1,rs2);}
:vlsseg6e32.v vd, (rs1), rs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg6e32_v(rs1,rs2,v0);}

define pcodeop vlsseg7e32_v;
:vlsseg7e32.v vd, (rs1), rs2         is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg7e32_v(rs1,rs2);}
:vlsseg7e32.v vd, (rs1), rs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg7e32_v(rs1,rs2,v0);}

define pcodeop vlsseg8e32_v;
:vlsseg8e32.v vd, (rs1), rs2         is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg8e32_v(rs1,rs2);}
:vlsseg8e32.v vd, (rs1), rs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg8e32_v(rs1,rs2,v0);}

define pcodeop vlse512_v;
# vlse512.v       nf 28=1 27..26=2 vm rs2 rs1 14..12=0x6  vd 6..0=0x07
# vlse512.v  vd, (rs1), rs2, vm  #  512-bit strided load
:vlse512.v     vd, (rs1), rs2,        is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlse512_v(rs1,rs2);}
:vlse512.v     vd, (rs1), rs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlse512_v(rs1,rs2,v0);}

define pcodeop vlsseg2e512_v;
:vlsseg2e512.v vd, (rs1), rs2,        is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg2e512_v(rs1,rs2);}
:vlsseg2e512.v vd, (rs1), rs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg2e512_v(rs1,rs2,v0);}

define pcodeop vlsseg3e512_v;
:vlsseg3e512.v vd, (rs1), rs2,        is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg3e512_v(rs1,rs2);}
:vlsseg3e512.v vd, (rs1), rs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg3e512_v(rs1,rs2,v0);}

define pcodeop vlsseg4e512_v;
:vlsseg4e512.v vd, (rs1), rs2,        is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg4e512_v(rs1,rs2);}
:vlsseg4e512.v vd, (rs1), rs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg4e512_v(rs1,rs2,v0);}

define pcodeop vlsseg5e512_v;
:vlsseg5e512.v vd, (rs1), rs2,        is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg5e512_v(rs1,rs2);}
:vlsseg5e512.v vd, (rs1), rs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg5e512_v(rs1,rs2,v0);}

define pcodeop vlsseg6e512_v;
:vlsseg6e512.v vd, (rs1), rs2,        is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg6e512_v(rs1,rs2);}
:vlsseg6e512.v vd, (rs1), rs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg6e512_v(rs1,rs2,v0);}

define pcodeop vlsseg7e512_v;
:vlsseg7e512.v vd, (rs1), rs2,        is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg7e512_v(rs1,rs2);}
:vlsseg7e512.v vd, (rs1), rs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg7e512_v(rs1,rs2,v0);}

define pcodeop vlsseg8e512_v;
:vlsseg8e512.v vd, (rs1), rs2,        is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg8e512_v(rs1,rs2);}
:vlsseg8e512.v vd, (rs1), rs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlsseg8e512_v(rs1,rs2,v0);}

define pcodeop vlse64_v;
# vlse64.v        nf 28=0 27..26=2 vm rs2 rs1 14..12=0x7  vd 6..0=0x07
# vlse64.v   vd, (rs1), rs2, vm  #   64-bit strided load
:vlse64.v    vd, (rs1), rs2         is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlse64_v(rs1,rs2);}
:vlse64.v    vd, (rs1), rs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlse64_v(rs1,rs2,v0);}

define pcodeop vlsseg2e64_v;
:vlsseg2e64.v vd, (rs1), rs2         is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg2e64_v(rs1,rs2);}
:vlsseg2e64.v vd, (rs1), rs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg2e64_v(rs1,rs2,v0);}

define pcodeop vlsseg3e64_v;
:vlsseg3e64.v vd, (rs1), rs2         is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg3e64_v(rs1,rs2);}
:vlsseg3e64.v vd, (rs1), rs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg3e64_v(rs1,rs2,v0);}

define pcodeop vlsseg4e64_v;
:vlsseg4e64.v vd, (rs1), rs2         is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg4e64_v(rs1,rs2);}
:vlsseg4e64.v vd, (rs1), rs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg4e64_v(rs1,rs2,v0);}

define pcodeop vlsseg5e64_v;
:vlsseg5e64.v vd, (rs1), rs2         is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg5e64_v(rs1,rs2);}
:vlsseg5e64.v vd, (rs1), rs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg5e64_v(rs1,rs2,v0);}

define pcodeop vlsseg6e64_v;
:vlsseg6e64.v vd, (rs1), rs2         is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg6e64_v(rs1,rs2);}
:vlsseg6e64.v vd, (rs1), rs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg6e64_v(rs1,rs2,v0);}

define pcodeop vlsseg7e64_v;
:vlsseg7e64.v vd, (rs1), rs2         is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg7e64_v(rs1,rs2);}
:vlsseg7e64.v vd, (rs1), rs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg7e64_v(rs1,rs2,v0);}

define pcodeop vlsseg8e64_v;
:vlsseg8e64.v vd, (rs1), rs2         is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg8e64_v(rs1,rs2);}
:vlsseg8e64.v vd, (rs1), rs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlsseg8e64_v(rs1,rs2,v0);}

define pcodeop vlse8_v;
# vlse8.v         nf 28=0 27..26=2 vm rs2 rs1 14..12=0x0  vd 6..0=0x07
# vlse8.v    vd, (rs1), rs2, vm  #   8-bit strided load
:vlse8.v     vd, (rs1), rs2          is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlse8_v(rs1,rs2);}
:vlse8.v     vd, (rs1), rs2, "v0.t"  is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlse8_v(rs1,rs2,v0);}

define pcodeop vlseg2se8_v;
:vlsseg2e8.v vd, (rs1), rs2          is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg2se8_v(rs1,rs2);}
:vlsseg2e8.v vd, (rs1), rs2, "v0.t"  is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg2se8_v(rs1,rs2,v0);}

define pcodeop vlseg3se8_v;
:vlsseg3e8.v vd, (rs1), rs2          is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg3se8_v(rs1,rs2);}
:vlsseg3e8.v vd, (rs1), rs2, "v0.t"  is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg3se8_v(rs1,rs2,v0);}

define pcodeop vlseg4se8_v;
:vlsseg4e8.v vd, (rs1), rs2          is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg4se8_v(rs1,rs2);}
:vlsseg4e8.v vd, (rs1), rs2, "v0.t"  is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg4se8_v(rs1,rs2,v0);}

define pcodeop vlseg5se8_v;
:vlsseg5e8.v vd, (rs1), rs2          is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg5se8_v(rs1,rs2);}
:vlsseg5e8.v vd, (rs1), rs2, "v0.t"  is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg5se8_v(rs1,rs2,v0);}

define pcodeop vlseg6se8_v;
:vlsseg6e8.v vd, (rs1), rs2          is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg6se8_v(rs1,rs2);}
:vlsseg6e8.v vd, (rs1), rs2, "v0.t"  is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg6se8_v(rs1,rs2,v0);}

define pcodeop vlseg7se8_v;
:vlsseg7e8.v vd, (rs1), rs2          is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg7se8_v(rs1,rs2);}
:vlsseg7e8.v vd, (rs1), rs2, "v0.t"  is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg7se8_v(rs1,v0);}

define pcodeop vlseg8se8_v;
:vlsseg8e8.v vd, (rs1), rs2          is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg8se8_v(rs1,rs2);}
:vlsseg8e8.v vd, (rs1), rs2, "v0.t"  is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlseg8se8_v(rs1,v0);}

define pcodeop vlxei1024_v;
# vlxei1024.v      nf 28=1 27..26=3 vm vs2 rs1 14..12=0x7  vd 6..0=0x07
# vlxei1024.v   vd, (rs1), vs2, vm  #   1024-bit indexed load of SEW data
:vlxei1024.v    vd, (rs1), vs2, vm   is nf & op2828=0x1 & op2627=0x3 & vm & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlxei1024_v(rs1,vs2,vm);}

define pcodeop vlxei128_v;
# vlxei128.v       nf 28=1 27..26=3 vm vs2 rs1 14..12=0x0  vd 6..0=0x07
# vlxei128.v   vd, (rs1), vs2, vm  #   128-bit indexed load of SEW data
:vlxei128.v    vd, (rs1), vs2, vm   is nf & op2828=0x1 & op2627=0x3 & vm & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlxei128_v(rs1,vs2,vm);}

define pcodeop vlxei16_v;
# vlxei16.v        nf 28=0 27..26=3 vm vs2 rs1 14..12=0x5  vd 6..0=0x07
# vlxei16.v   vd, (rs1), vs2, vm  #   16-bit indexed load of SEW data
:vlxei16.v    vd, (rs1), vs2, vm   is nf & op2828=0x0 & op2627=0x3 & vm & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7  {vd=vlxei16_v(rs1,vs2,vm);}

define pcodeop vlxei256_v;
# vlxei256.v       nf 28=1 27..26=3 vm vs2 rs1 14..12=0x5  vd 6..0=0x07
# vlxei256.v   vd, (rs1), vs2, vm  #   256-bit indexed load of SEW data
:vlxei256.v    vd, (rs1), vs2, vm   is nf & op2828=0x1 & op2627=0x3 & vm & vs2 & rs1 & op1214=0x5 & vd & op0006=0x7 {vd=vlxei256_v(rs1,vs2,vm);}

define pcodeop vlxei32_v;
# vlxei32.v        nf 28=0 27..26=3 vm vs2 rs1 14..12=0x6  vd 6..0=0x07
# vlxei32.v   vd, (rs1), vs2, vm  #   32-bit indexed load of SEW data
:vlxei32.v    vd, (rs1), vs2, vm   is nf & op2828=0x0 & op2627=0x3 & vm & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlxei32_v(rs1,vs2,vm);}

define pcodeop vlxei512_v;
# vlxei512.v       nf 28=1 27..26=3 vm vs2 rs1 14..12=0x6  vd 6..0=0x07
# vlxei512.v   vd, (rs1), vs2, vm  #   512-bit indexed load of SEW data
:vlxei512.v    vd, (rs1), vs2, vm   is nf & op2828=0x1 & op2627=0x3 & vm & vs2 & rs1 & op1214=0x6 & vd & op0006=0x7 {vd=vlxei512_v(rs1,vs2,vm);}

define pcodeop vlxei64_v;
# vlxei64.v        nf 28=0 27..26=3 vm vs2 rs1 14..12=0x7  vd 6..0=0x07
# vlxei64.v   vd, (rs1), vs2, vm  #   64-bit indexed load of SEW data
:vlxei64.v    vd, (rs1), vs2, vm   is nf & op2828=0x0 & op2627=0x3 & vm & vs2 & rs1 & op1214=0x7 & vd & op0006=0x7 {vd=vlxei64_v(rs1,vs2,vm);}

define pcodeop vlxei8_v;
# vlxei8.v         nf 28=0 27..26=3 vm vs2 rs1 14..12=0x0  vd 6..0=0x07
# vlxei8.v    vd, (rs1), vs2, vm  #    8-bit indexed load of SEW data
:vlxei8.v     vd, (rs1), vs2, vm   is nf & op2828=0x0 & op2627=0x3 & vm & vs2 & rs1 & op1214=0x0 & vd & op0006=0x7 {vd=vlxei8_v(rs1,vs2,vm);}

define pcodeop vmacc_vv;
# vmacc.vv       31..26=0x2d vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vmacc.vv vd, vs1, vs2, vm    # vd[i] = +(vs1[i] * vs2[i]) + vd[i]
:vmacc.vv  vd, vs1, vs2         is op2631=0x2d & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmacc_vv(vs1,vs2);}
:vmacc.vv  vd, vs1, vs2, "v0.t" is op2631=0x2d & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmacc_vv(vs1,vs2,v0);}

define pcodeop vmacc_vx;
# vmacc.vx       31..26=0x2d vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vmacc.vx vd, rs1, vs2, vm    # vd[i] = +(x[rs1] * vs2[i]) + vd[i]
:vmacc.vx  vd, rs1, vs2         is op2631=0x2d & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vmacc_vx(rs1,vs2);}
:vmacc.vx  vd, rs1, vs2, "v0.t" is op2631=0x2d & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vmacc_vx(rs1,vs2,v0);}

define pcodeop vmadc_vim;
# vmadc.vim      31..26=0x11 vm   vs2 simm5 14..12=0x3 vd 6..0=0x57
# vmadc.vim   vd, vs2, simm5, v0  # Vector-immediate
:vmadc.vi     vd, vs2, simm5     is op2631=0x11 & op2525=1 & vs2 & simm5 & op1214=0x3 &      vd & op0006=0x57 {vd=vmadc_vim(vs2,simm5);}
:vmadc.vim    vd, vs2, simm5, v0 is op2631=0x11 & op2525=0 & vs2 & simm5 & op1214=0x3 & v0 & vd & op0006=0x57 {vd=vmadc_vim(vs2,simm5,v0);}

define pcodeop vmadc_vv;
define pcodeop vmadc_vvm;
# vmadc.vvm      31..26=0x11 vm   vs2 vs1 14..12=0x0 vd 6..0=0x57
# vmadc.vvm   vd, vs2, vs1, v0  # Vector-vector
:vmadc.vv    vd, vs2, vs1      is op2631=0x11 & op2525=1 & vs2 & vs1 & op1214=0x0      & vd & op0006=0x57 {vd=vmadc_vv(vs2,vs1);}
:vmadc.vvm   vd, vs2, vs1, v0  is op2631=0x11 & op2525=0 & vs2 & vs1 & op1214=0x0 & v0 & vd & op0006=0x57 {vd=vmadc_vvm(vs2,vs1,v0);}

define pcodeop vmadc_vx;
define pcodeop vmadc_vxm;
# vmadc.vxm      31..26=0x11 vm   vs2 rs1 14..12=0x4 vd 6..0=0x57
# vmadc.vxm   vd, vs2, rs1, v0  # Vector-scalar
:vmadc.vx     vd, vs2, rs1     is op2631=0x11 & op2525=1 & vm & vs2 & rs1 & op1214=0x4      & vd & op0006=0x57 {vd=vmadc_vx(vs2,rs1);}
:vmadc.vxm    vd, vs2, rs1, v0 is op2631=0x11 & op2525=0 & vm & vs2 & rs1 & op1214=0x4 & v0 & vd & op0006=0x57 {vd=vmadc_vxm(vs2,rs1,v0);}

define pcodeop vmadd_vv;
# vmadd.vv       31..26=0x29 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vmadd.vv vd, vs1, vs2, vm    # vd[i] = (vs1[i] * vd[i]) + vs2[i]
:vmadd.vv  vd, vs1, vs2, vm     is op2631=0x29 & vm & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmadd_vv(vs1,vs2,vm);}
:vmadd.vv  vd, vs1, vs2         is op2631=0x29 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmadd_vv(vs1,vs2);}
:vmadd.vv  vd, vs1, vs2, "v0.t" is op2631=0x29 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmadd_vv(vs1,vs2,v0);}

define pcodeop vmadd_vx;
# vmadd.vx       31..26=0x29 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vmadd.vx vd, rs1, vs2, vm    # vd[i] = (x[rs1] * vd[i]) + vs2[i]
:vmadd.vx  vd, rs1, vs2         is op2631=0x29 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vmadd_vx(rs1,vs2);}
:vmadd.vx  vd, rs1, vs2, "v0.t" is op2631=0x29 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vmadd_vx(rs1,vs2,v0);}

define pcodeop vmand_mm;
# vmand.mm       31..26=0x19 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vmand.mm vd, vs2, vs1     # vd[i] =   vs2.mask[i] &amp;&amp;  vs1.mask[i]
:vmand.mm  vd, vs2, vs1         is op2631=0x19 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmand_mm(vs2,vs1);}
:vmand.mm  vd, vs2, vs1, "v0.t" is op2631=0x19 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmand_mm(vs2,vs1,v0);}

define pcodeop vmandn_mm;
# vmandn.mm    31..26=0x18 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vmandn.mm vd, vs2, vs1  # vd[i] =   vs2.mask[i] &amp;&amp; !vs1.mask[i]
:vmandn.mm  vd, vs2, vs1         is op2631=0x18 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmandn_mm(vs2,vs1);}
:vmandn.mm  vd, vs2, vs1, "v0.t" is op2631=0x18 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmandn_mm(vs2,vs1,v0);}

define pcodeop vmax_vv;
# vmax.vv         31..26=0x07 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vmax.vv vd, vs2, vs1, vm   # Vector-vector
:vmax.vv  vd, vs2, vs1         is op2631=0x7 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmax_vv(vs2,vs1);}
:vmax.vv  vd, vs2, vs1, "v0.t" is op2631=0x7 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmax_vv(vs2,vs1,v0);}

define pcodeop vmax_vx;
# vmax.vx        31..26=0x07 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vmax.vx vd, vs2, rs1, vm   # vector-scalar
:vmax.vx  vd, vs2, rs1         is op2631=0x7 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmax_vx(vs2,rs1);}
:vmax.vx  vd, vs2, rs1, "v0.t" is op2631=0x7 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmax_vx(vs2,rs1,v0);}

define pcodeop vmaxu_vv;
# vmaxu.vv        31..26=0x06 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vmaxu.vv vd, vs2, vs1, vm   # Vector-vector
:vmaxu.vv  vd, vs2, vs1         is op2631=0x6 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmaxu_vv(vs2,vs1);}
:vmaxu.vv  vd, vs2, vs1, "v0.t" is op2631=0x6 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmaxu_vv(vs2,vs1,v0);}

define pcodeop vmaxu_vx;
# vmaxu.vx       31..26=0x06 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vmaxu.vx vd, vs2, rs1, vm   # vector-scalar
:vmaxu.vx  vd, vs2, rs1         is op2631=0x6 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmaxu_vx(vs2,rs1);}
:vmaxu.vx  vd, vs2, rs1, "v0.t" is op2631=0x6 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmaxu_vx(vs2,rs1,v0);}

define pcodeop vmerge_vim;
# vmerge.vim     31..26=0x17 25=0 vs2 simm5 14..12=0x3 vd 6..0=0x57
# vmerge.vim vd, vs2, simm5, v0  # vd[i] = v0.mask[i] ? imm    : vs2[i]
:vmerge.vim  vd, vs2, simm5, v0   is op2631=0x17 & op2525=0x0 & vs2 & simm5 & op1214=0x3 & v0 & vd & op0006=0x57 {vd=vmerge_vim(vs2,simm5,v0);}

define pcodeop vmerge_vvm;
# vmerge.vvm     31..26=0x17 25=0 vs2 vs1 14..12=0x0 vd 6..0=0x57
# vmerge.vvm vd, vs2, vs1, v0  # vd[i] = v0.mask[i] ? vs1[i] : vs2[i]
:vmerge.vvm  vd, vs2, vs1, v0   is op2631=0x17 & op2525=0x0 & vs2 & vs1 & op1214=0x0 & v0 & vd & op0006=0x57 {vd=vmerge_vvm(vs2,vs1,v0);}

define pcodeop vmerge_vxm;
# vmerge.vxm     31..26=0x17 25=0 vs2 rs1 14..12=0x4 vd 6..0=0x57
# vmerge.vxm vd, vs2, rs1, v0  # vd[i] = v0.mask[i] ? x[rs1] : vs2[i]
:vmerge.vxm  vd, vs2, rs1, v0   is op2631=0x17 & op2525=0x0 & vs2 & rs1 & op1214=0x4 & v0 & vd & op0006=0x57 {vd=vmerge_vxm(vs2,rs1,v0);}

define pcodeop vmfeq_vf;
# vmfeq.vf       31..26=0x18 vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vmfeq.vf vd, vs2, frs1, vm  # vector-scalar
:vmfeq.vf  vd, vs2, frs1         is op2631=0x18 & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vmfeq_vf(vs2,frs1);}
:vmfeq.vf  vd, vs2, frs1, "v0.t" is op2631=0x18 & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vmfeq_vf(vs2,frs1,v0);}

define pcodeop vmfeq_vv;
# vmfeq.vv       31..26=0x18 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vmfeq.vv vd, vs2, vs1, vm  # Vector-vector
:vmfeq.vv  vd, vs2, vs1         is op2631=0x18 & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vmfeq_vv(vs2,vs1);}
:vmfeq.vv  vd, vs2, vs1, "v0.t" is op2631=0x18 & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vmfeq_vv(vs2,vs1,v0);}

define pcodeop vmfge_vf;
# vmfge.vf       31..26=0x1f vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vmfge.vf vd, vs2, frs1, vm  # vector-scalar
:vmfge.vf  vd, vs2, frs1         is op2631=0x1f & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vmfge_vf(vs2,frs1);}
:vmfge.vf  vd, vs2, frs1, "v0.t" is op2631=0x1f & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vmfge_vf(vs2,frs1,v0);}

define pcodeop vmfgt_vf;
# vmfgt.vf       31..26=0x1d vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vmfgt.vf vd, vs2, frs1, vm  # vector-scalar
:vmfgt.vf  vd, vs2, frs1         is op2631=0x1d & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vmfgt_vf(vs2,frs1);}
:vmfgt.vf  vd, vs2, frs1, "v0.t" is op2631=0x1d & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vmfgt_vf(vs2,frs1,v0);}

define pcodeop vmfle_vf;
# vmfle.vf       31..26=0x19 vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vmfle.vf vd, vs2, frs1, vm  # vector-scalar
:vmfle.vf  vd, vs2, frs1         is op2631=0x19 & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vmfle_vf(vs2,frs1);}
:vmfle.vf  vd, vs2, frs1, "v0.t" is op2631=0x19 & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vmfle_vf(vs2,frs1,v0);}

define pcodeop vmfle_vv;
# vmfle.vv       31..26=0x19 vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vmfle.vv vd, vs2, vs1, vm  # Vector-vector
:vmfle.vv  vd, vs2, vs1         is op2631=0x19 & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vmfle_vv(vs2,vs1);}
:vmfle.vv  vd, vs2, vs1, "v0.t" is op2631=0x19 & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vmfle_vv(vs2,vs1,v0);}

define pcodeop vmflt_vf;
# vmflt.vf       31..26=0x1b vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vmflt.vf vd, vs2, frs1, vm  # vector-scalar
:vmflt.vf  vd, vs2, frs1         is op2631=0x1b & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vmflt_vf(vs2,frs1);}
:vmflt.vf  vd, vs2, frs1, "v0.t" is op2631=0x1b & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vmflt_vf(vs2,frs1,v0);}

define pcodeop vmflt_vv;
# vmflt.vv       31..26=0x1b vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vmflt.vv vd, vs2, vs1, vm  # Vector-vector
:vmflt.vv  vd, vs2, vs1         is op2631=0x1b & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vmflt_vv(vs2,vs1);}
:vmflt.vv  vd, vs2, vs1, "v0.t" is op2631=0x1b & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vmflt_vv(vs2,vs1,v0);}

define pcodeop vmfne_vf;
# vmfne.vf       31..26=0x1c vm vs2 frs1 14..12=0x5 vd 6..0=0x57
# vmfne.vf vd, vs2, frs1, vm  # vector-scalar
:vmfne.vf  vd, vs2, frs1         is op2631=0x1c & op2525=1 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vmfne_vf(vs2,frs1);}
:vmfne.vf  vd, vs2, frs1, "v0.t" is op2631=0x1c & op2525=0 & vs2 & frs1 & op1214=0x5 & vd & op0006=0x57 {vd=vmfne_vf(vs2,frs1,v0);}

define pcodeop vmfne_vv;
# vmfne.vv       31..26=0x1c vm vs2 vs1 14..12=0x1 vd 6..0=0x57
# vmfne.vv vd, vs2, vs1, vm  # Vector-vector
:vmfne.vv  vd, vs2, vs1         is op2631=0x1c & op2525=1 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vmfne_vv(vs2,vs1);}
:vmfne.vv  vd, vs2, vs1, "v0.t" is op2631=0x1c & op2525=0 & vs2 & vs1 & op1214=0x1 & vd & op0006=0x57 {vd=vmfne_vv(vs2,vs1,v0);}

define pcodeop vmin_vv;
# vmin.vv         31..26=0x05 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vmin.vv vd, vs2, vs1, vm   # Vector-vector
:vmin.vv  vd, vs2, vs1         is op2631=0x5 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmin_vv(vs2,vs1);}
:vmin.vv  vd, vs2, vs1, "v0.t" is op2631=0x5 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmin_vv(vs2,vs1,v0);}

define pcodeop vmin_vx;
# vmin.vx        31..26=0x05 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vmin.vx vd, vs2, rs1, vm   # vector-scalar
:vmin.vx  vd, vs2, rs1         is op2631=0x5 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmin_vx(vs2,rs1);}
:vmin.vx  vd, vs2, rs1, "v0.t" is op2631=0x5 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmin_vx(vs2,rs1,v0);}

define pcodeop vminu_vv;
# vminu.vv        31..26=0x04 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vminu.vv vd, vs2, vs1, vm   # Vector-vector
:vminu.vv  vd, vs2, vs1         is op2631=0x4 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vminu_vv(vs2,vs1);}
:vminu.vv  vd, vs2, vs1, "v0.t" is op2631=0x4 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vminu_vv(vs2,vs1,v0);}

define pcodeop vminu_vx;
# vminu.vx       31..26=0x04 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vminu.vx vd, vs2, rs1, vm   # vector-scalar
:vminu.vx  vd, vs2, rs1         is op2631=0x4 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vminu_vx(vs2,rs1);}
:vminu.vx  vd, vs2, rs1, "v0.t" is op2631=0x4 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vminu_vx(vs2,rs1,v0);}

define pcodeop vmnand_mm;
# vmnand.mm      31..26=0x1d vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vmnand.mm vd, vs2, vs1    # vd[i] = !(vs2.mask[i] &amp;&amp;  vs1.mask[i])
:vmnand.mm  vd, vs2, vs1         is op2631=0x1d & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmnand_mm(vs2,vs1);}
:vmnand.mm  vd, vs2, vs1, "v0.t" is op2631=0x1d & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmnand_mm(vs2,vs1,v0);}

define pcodeop vmnor_mm;
# vmnor.mm       31..26=0x1e vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vmnor.mm  vd, vs2, vs1    # vd[i] = !(vs2.mask[i] ||  vs1.mask[i])
:vmnor.mm   vd, vs2, vs1         is op2631=0x1e & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmnor_mm(vs2,vs1);}
:vmnor.mm   vd, vs2, vs1, "v0.t" is op2631=0x1e & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmnor_mm(vs2,vs1,v0);}

define pcodeop vmor_mm;
# vmor.mm        31..26=0x1a vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vmor.mm  vd, vs2, vs1     # vd[i] =   vs2.mask[i] ||  vs1.mask[i]
:vmor.mm   vd, vs2, vs1         is op2631=0x1a & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmor_mm(vs2,vs1);}
:vmor.mm   vd, vs2, vs1, "v0.t" is op2631=0x1a & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmor_mm(vs2,vs1,v0);}

define pcodeop vmorn_mm;
# vmorn.mm     31..26=0x1c vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vmorn.mm  vd, vs2, vs1  # vd[i] =   vs2.mask[i] || !vs1.mask[i]
:vmorn.mm   vd, vs2, vs1         is op2631=0x1c & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmorn_mm(vs2,vs1);}
:vmorn.mm   vd, vs2, vs1, "v0.t" is op2631=0x1c & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmorn_mm(vs2,vs1,v0);}

define pcodeop vmsbc_vvm;
define pcodeop vmsbc_vv;
# vmsbc.vvm      31..26=0x13 vm   vs2 vs1 14..12=0x0 vd 6..0=0x57
# vmsbc.vvm   vd, vs2, vs1, v0  # Vector-vector
:vmsbc.vv     vd, vs2, vs1      is op2631=0x13 & op2525=1 & vs2 & vs1 & op1214=0x0      & vd & op0006=0x57 {vd=vmsbc_vv(vs2,vs1);}
:vmsbc.vvm    vd, vs2, vs1, v0  is op2631=0x13 & op2525=0 & vs2 & vs1 & op1214=0x0 & v0 & vd & op0006=0x57 {vd=vmsbc_vvm(vs2,vs1,v0);}

define pcodeop vmsbc_vx;
define pcodeop vmsbc_vxm;
# vmsbc.vxm      31..26=0x13 vm   vs2 rs1 14..12=0x4 vd 6..0=0x57
# vmsbc.vxm   vd, vs2, rs1, v0  # Vector-scalar
:vmsbc.vx     vd, vs2, rs1     is op2631=0x13 & op2525=1 & vs2 & rs1 & op1214=0x4      & vd & op0006=0x57 {vd=vmsbc_vx(vs2,rs1);}
:vmsbc.vxm    vd, vs2, rs1, v0 is op2631=0x13 & op2525=0 & vs2 & rs1 & op1214=0x4 & v0 & vd & op0006=0x57 {vd=vmsbc_vxm(vs2,rs1,v0);}

define pcodeop vmsbf_m;
# vmsbf.m        31..26=0x14 vm vs2 19..15=0x01 14..12=0x2 vd 6..0=0x57
# vmsbf.m vd, vs2, vm
:vmsbf.m  vd, vs2         is op2631=0x14 & op2525=1 & vs2 & op1519=0x1 & op1214=0x2 & vd & op0006=0x57 {vd=vmsbf_m(vs2);}
:vmsbf.m  vd, vs2, "v0.t" is op2631=0x14 & op2525=0 & vs2 & op1519=0x1 & op1214=0x2 & vd & op0006=0x57 {vd=vmsbf_m(vs2,v0);}

define pcodeop vmseq_vi;
# vmseq.vi       31..26=0x18 vm vs2 simm5 14..12=0x3 vd 6..0=0x57
# vmseq.vi vd, vs2, simm5, vm  # vector-immediate
:vmseq.vi  vd, vs2, simm5         is op2631=0x18 & op2525=1 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vmseq_vi(vs2,simm5);}
:vmseq.vi  vd, vs2, simm5, "v0.t" is op2631=0x18 & op2525=0 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vmseq_vi(vs2,simm5,v0);}

define pcodeop vmseq_vv;
# vmseq.vv       31..26=0x18 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vmseq.vv vd, vs2, vs1, vm  # Vector-vector
:vmseq.vv  vd, vs2, vs1         is op2631=0x18 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmseq_vv(vs2,vs1);}
:vmseq.vv  vd, vs2, vs1, "v0.t" is op2631=0x18 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmseq_vv(vs2,vs1,v0);}

define pcodeop vmseq_vx;
# vmseq.vx       31..26=0x18 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vmseq.vx vd, vs2, rs1, vm  # vector-scalar
:vmseq.vx  vd, vs2, rs1         is op2631=0x18 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmseq_vx(vs2,rs1);}
:vmseq.vx  vd, vs2, rs1, "v0.t" is op2631=0x18 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmseq_vx(vs2,rs1,v0);}

define pcodeop vmsgt_vi;
# vmsgt.vi       31..26=0x1f vm vs2 simm5 14..12=0x3 vd 6..0=0x57
# vmsgt.vi vd, vs2, simm5, vm    # Vector-immediate
:vmsgt.vi  vd, vs2, simm5         is op2631=0x1f & op2525=1 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vmsgt_vi(vs2,simm5);}
:vmsgt.vi  vd, vs2, simm5, "v0.t" is op2631=0x1f & op2525=0 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vmsgt_vi(vs2,simm5,v0);}

define pcodeop vmsgt_vx;
# vmsgt.vx       31..26=0x1f vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vmsgt.vx vd, vs2, rs1, vm    # Vector-scalar
:vmsgt.vx  vd, vs2, rs1         is op2631=0x1f & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmsgt_vx(vs2,rs1);}
:vmsgt.vx  vd, vs2, rs1, "v0.t" is op2631=0x1f & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmsgt_vx(vs2,rs1,v0);}

define pcodeop vmsgtu_vi;
# vmsgtu.vi      31..26=0x1e vm vs2 simm5 14..12=0x3 vd 6..0=0x57
# vmsgtu.vi vd, vs2, simm5, vm   # Vector-immediate
:vmsgtu.vi  vd, vs2, simm5         is op2631=0x1e & op2525=1 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {
    # Set if greater than, unsigned, vector-immediate
    vd=vmsgtu_vi(vs2,simm5);
}
:vmsgtu.vi  vd, vs2, simm5, "v0.t" is op2631=0x1e & op2525=0 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {
    # Set if greater than, unsigned, vector-immediate, masked
    vd=vmsgtu_vi(vs2,simm5,v0);
}

define pcodeop vmsgtu_vx;
# vmsgtu.vx      31..26=0x1e vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vmsgtu.vx vd, vs2, rs1, vm   # Vector-scalar
:vmsgtu.vx  vd, vs2, rs1         is op2631=0x1e & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmsgtu_vx(vs2,rs1);}
:vmsgtu.vx  vd, vs2, rs1, "v0.t" is op2631=0x1e & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmsgtu_vx(vs2,rs1,v0);}

define pcodeop vmsif_m;
# vmsif.m        31..26=0x14 vm vs2 19..15=0x03 14..12=0x2 vd 6..0=0x57
# vmsif.m vd, vs2, vm
:vmsif.m  vd, vs2         is op2631=0x14 & op2525=1 & vs2 & op1519=0x3 & op1214=0x2 & vd & op0006=0x57 {vd=vmsif_m(vs2);}
:vmsif.m  vd, vs2, "v0.t" is op2631=0x14 & op2525=0 & vs2 & op1519=0x3 & op1214=0x2 & vd & op0006=0x57 {vd=vmsif_m(vs2,v0);}

define pcodeop vmsle_vi;
# vmsle.vi       31..26=0x1d vm vs2 simm5 14..12=0x3 vd 6..0=0x57
# vmsle.vi vd, vs2, simm5, vm  # vector-immediate
:vmsle.vi  vd, vs2, simm5         is op2631=0x1d & op2525=1 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vmsle_vi(vs2,simm5);}
:vmsle.vi  vd, vs2, simm5, "v0.t" is op2631=0x1d & op2525=0 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vmsle_vi(vs2,simm5,v0);}

define pcodeop vmsle_vv;
# vmsle.vv       31..26=0x1d vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vmsle.vv vd, vs2, vs1, vm  # Vector-vector
:vmsle.vv  vd, vs2, vs1         is op2631=0x1d & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmsle_vv(vs2,vs1);}
:vmsle.vv  vd, vs2, vs1, "v0.t" is op2631=0x1d & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmsle_vv(vs2,vs1,v0);}

define pcodeop vmsle_vx;
# vmsle.vx       31..26=0x1d vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vmsle.vx vd, vs2, rs1, vm  # vector-scalar
:vmsle.vx  vd, vs2, rs1         is op2631=0x1d & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmsle_vx(vs2,rs1);}
:vmsle.vx  vd, vs2, rs1, "v0.t" is op2631=0x1d & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmsle_vx(vs2,rs1,v0);}

define pcodeop vmsleu_vi;
# vmsleu.vi      31..26=0x1c vm vs2 simm5 14..12=0x3 vd 6..0=0x57
# vmsleu.vi vd, vs2, simm5, vm   # Vector-immediate
:vmsleu.vi  vd, vs2, simm5         is op2631=0x1c & op2525=1 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vmsleu_vi(vs2,simm5);}
:vmsleu.vi  vd, vs2, simm5, "v0.t" is op2631=0x1c & op2525=0 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vmsleu_vi(vs2,simm5,v0);}

define pcodeop vmsleu_vv;
# vmsleu.vv      31..26=0x1c vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vmsleu.vv vd, vs2, vs1, vm   # Vector-vector
:vmsleu.vv  vd, vs2, vs1         is op2631=0x1c & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmsleu_vv(vs2,vs1);}
:vmsleu.vv  vd, vs2, vs1, "v0.t" is op2631=0x1c & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmsleu_vv(vs2,vs1,v0);}

define pcodeop vmsleu_vx;
# vmsleu.vx      31..26=0x1c vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vmsleu.vx vd, vs2, rs1, vm   # vector-scalar
:vmsleu.vx  vd, vs2, rs1         is op2631=0x1c & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmsleu_vx(vs2,rs1);}
:vmsleu.vx  vd, vs2, rs1, "v0.t" is op2631=0x1c & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmsleu_vx(vs2,rs1,v0);}

define pcodeop vmslt_vv;
# vmslt.vv       31..26=0x1b vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vmslt.vv vd, vs2, vs1, vm  # Vector-vector
:vmslt.vv  vd, vs2, vs1         is op2631=0x1b & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmslt_vv(vs2,vs1);}
:vmslt.vv  vd, vs2, vs1, "v0.t" is op2631=0x1b & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmslt_vv(vs2,vs1,v0);}

define pcodeop vmslt_vx;
# vmslt.vx       31..26=0x1b vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vmslt.vx vd, vs2, rs1, vm  # vector-scalar
:vmslt.vx  vd, vs2, rs1         is op2631=0x1b & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmslt_vx(vs2,rs1);}
:vmslt.vx  vd, vs2, rs1, "v0.t" is op2631=0x1b & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmslt_vx(vs2,rs1,v0);}

define pcodeop vmsltu_vv;
# vmsltu.vv      31..26=0x1a vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vmsltu.vv vd, vs2, vs1, vm  # Vector-vector
:vmsltu.vv  vd, vs2, vs1         is op2631=0x1a & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmsltu_vv(vs2,vs1);}
:vmsltu.vv  vd, vs2, vs1, "v0.t" is op2631=0x1a & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmsltu_vv(vs2,vs1,v0);}

define pcodeop vmsltu_vx;
# vmsltu.vx      31..26=0x1a vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vmsltu.vx vd, vs2, rs1, vm  # Vector-scalar
:vmsltu.vx  vd, vs2, rs1         is op2631=0x1a & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmsltu_vx(vs2,rs1);}
:vmsltu.vx  vd, vs2, rs1, "v0.t" is op2631=0x1a & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmsltu_vx(vs2,rs1,v0);}

define pcodeop vmsne_vi;
# vmsne.vi       31..26=0x19 vm vs2 simm5 14..12=0x3 vd 6..0=0x57
# vmsne.vi vd, vs2, simm5, vm  # vector-immediate
:vmsne.vi  vd, vs2, simm5         is op2631=0x19 & op2525=1 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vmsne_vi(vs2,simm5);}
:vmsne.vi  vd, vs2, simm5, "v0.t" is op2631=0x19 & op2525=0 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vmsne_vi(vs2,simm5,v0);}

define pcodeop vmsne_vv;
# vmsne.vv       31..26=0x19 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vmsne.vv vd, vs2, vs1, vm  # Vector-vector
:vmsne.vv  vd, vs2, vs1         is op2631=0x19 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmsne_vv(vs2,vs1);}
:vmsne.vv  vd, vs2, vs1, "v0.t" is op2631=0x19 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmsne_vv(vs2,vs1,v0);}

define pcodeop vmsne_vx;
# vmsne.vx       31..26=0x19 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vmsne.vx vd, vs2, rs1, vm  # vector-scalar
:vmsne.vx  vd, vs2, rs1         is op2631=0x19 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmsne_vx(vs2,rs1);}
:vmsne.vx  vd, vs2, rs1, "v0.t" is op2631=0x19 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmsne_vx(vs2,rs1,v0);}

define pcodeop vmsof_m;
# vmsof.m        31..26=0x14 vm vs2 19..15=0x02 14..12=0x2 vd 6..0=0x57
# vmsof.m vd, vs2, vm
:vmsof.m  vd, vs2         is op2631=0x14 & op2525=1 & vs2 & op1519=0x2 & op1214=0x2 & vd & op0006=0x57 {vd=vmsof_m(vs2);}
:vmsof.m  vd, vs2, "v0.t" is op2631=0x14 & op2525=0 & vs2 & op1519=0x2 & op1214=0x2 & vd & op0006=0x57 {vd=vmsof_m(vs2,v0);}

define pcodeop vmul_vv;
# vmul.vv        31..26=0x25 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vmul.vv vd, vs2, vs1, vm   # Vector-vector
:vmul.vv  vd, vs2, vs1         is op2631=0x25 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmul_vv(vs2,vs1);}
:vmul.vv  vd, vs2, vs1, "v0.t" is op2631=0x25 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmul_vv(vs2,vs1,v0);}

define pcodeop vmul_vx;
# vmul.vx        31..26=0x25 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vmul.vx vd, vs2, rs1, vm   # vector-scalar
:vmul.vx  vd, vs2, rs1         is op2631=0x25 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vmul_vx(vs2,rs1);}
:vmul.vx  vd, vs2, rs1, "v0.t" is op2631=0x25 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vmul_vx(vs2,rs1,v0);}

define pcodeop vmulh_vv;
# vmulh.vv       31..26=0x27 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vmulh.vv vd, vs2, vs1, vm   # Vector-vector
:vmulh.vv  vd, vs2, vs1         is op2631=0x27 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmulh_vv(vs2,vs1);}
:vmulh.vv  vd, vs2, vs1, "v0.t" is op2631=0x27 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmulh_vv(vs2,vs1,v0);}

define pcodeop vmulh_vx;
# vmulh.vx       31..26=0x27 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vmulh.vx vd, vs2, rs1, vm   # vector-scalar
:vmulh.vx  vd, vs2, rs1         is op2631=0x27 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vmulh_vx(vs2,rs1);}
:vmulh.vx  vd, vs2, rs1, "v0.t" is op2631=0x27 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vmulh_vx(vs2,rs1,v0);}

define pcodeop vmulhsu_vv;
# vmulhsu.vv     31..26=0x26 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vmulhsu.vv vd, vs2, vs1, vm   # Vector-vector
:vmulhsu.vv  vd, vs2, vs1         is op2631=0x26 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmulhsu_vv(vs2,vs1);}
:vmulhsu.vv  vd, vs2, vs1, "v0.t" is op2631=0x26 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmulhsu_vv(vs2,vs1,v0);}

define pcodeop vmulhsu_vx;
# vmulhsu.vx     31..26=0x26 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vmulhsu.vx vd, vs2, rs1, vm   # vector-scalar
:vmulhsu.vx  vd, vs2, rs1         is op2631=0x26 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vmulhsu_vx(vs2,rs1);}
:vmulhsu.vx  vd, vs2, rs1, "v0.t" is op2631=0x26 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vmulhsu_vx(vs2,rs1,v0);}

define pcodeop vmulhu_vv;
# vmulhu.vv      31..26=0x24 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vmulhu.vv vd, vs2, vs1, vm   # Vector-vector
:vmulhu.vv  vd, vs2, vs1         is op2631=0x24 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmulhu_vv(vs2,vs1);}
:vmulhu.vv  vd, vs2, vs1, "v0.t" is op2631=0x24 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmulhu_vv(vs2,vs1,v0);}

define pcodeop vmulhu_vx;
# vmulhu.vx      31..26=0x24 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vmulhu.vx vd, vs2, rs1, vm   # vector-scalar
:vmulhu.vx  vd, vs2, rs1         is op2631=0x24 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vmulhu_vx(vs2,rs1);}
:vmulhu.vx  vd, vs2, rs1, "v0.t" is op2631=0x24 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vmulhu_vx(vs2,rs1,v0);}

define pcodeop vmv_s_x;
# vmv.s.x        31..26=0x10 25=1 24..20=0 rs1 14..12=0x6 vd 6..0=0x57
# vmv.s.x vd, rs1  # vd[0] = x[rs1] (vs2=0)
:vmv.s.x  vd, rs1   is op2631=0x10 & op2525=0x1 & op2024=0x0 & rs1 & op1214=0x6 & vd & op0006=0x57  {vd=vmv_s_x(rs1);}

define pcodeop vmv_v_i;
# vmv.v.i        31..26=0x17 25=1 24..20=0 simm5 14..12=0x3 vd 6..0=0x57
# vmv.v.i vd, simm5 # vd[i] = imm
:vmv.v.i  vd, simm5  is op2631=0x17 & op2525=0x1 & op2024=0x0 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vmv_v_i(simm5);}

define pcodeop vmv_v_v;
# vmv.v.v        31..26=0x17 25=1 24..20=0 vs1 14..12=0x0 vd 6..0=0x57
# vmv.v.v vd, vs1 # vd[i] = vs1[i]
:vmv.v.v  vd, vs1  is op2631=0x17 & op2525=0x1 & op2024=0x0 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vmv_v_v(vs1);}

define pcodeop vmv_v_x;
# vmv.v.x        31..26=0x17 25=1 24..20=0 rs1 14..12=0x4 vd 6..0=0x57
# vmv.v.x vd, rs1 # vd[i] = rs1
:vmv.v.x  vd, rs1  is op2631=0x17 & op2525=0x1 & op2024=0x0 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vmv_v_x(rs1);}

define pcodeop vmv_x_s;
# vmv.x.s        31..26=0x10 25=1 vs2 19..15=0 14..12=0x2 rd 6..0=0x57
# vmv.x.s rd, vs2  # x[rd] = vs2[0] (rs1=0)
:vmv.x.s  rd, vs2   is op2631=0x10 & op2525=0x1 & vs2 & op1519=0x0 & op1214=0x2 & rd & op0006=0x57 {rd=vmv_x_s(vs2);}

define pcodeop vmv1r_v;
# vmv1r.v        31..26=0x27 25=1 vs2 19..15=0 14..12=0x3 vd 6..0=0x57
# vmv1r.v  vd, vs2
:vmv1r.v   vd, vs2 is op2631=0x27 & op2525=0x1 & vs2 & op1519=0x0 & op1214=0x3 & vd & op0006=0x57 {vd=vmv1r_v(vs2);}

define pcodeop vmv2r_v;
# vmv2r.v        31..26=0x27 25=1 vs2 19..15=1 14..12=0x3 vd 6..0=0x57
# vmv2r.v  vd, vs2
:vmv2r.v   vd, vs2 is op2631=0x27 & op2525=0x1 & vs2 & op1519=0x1 & op1214=0x3 & vd & op0006=0x57 {vd=vmv2r_v(vs2);}

define pcodeop vmv4r_v;
# vmv4r.v        31..26=0x27 25=1 vs2 19..15=3 14..12=0x3 vd 6..0=0x57
# vmv4r.v  vd, vs2
:vmv4r.v   vd, vs2 is op2631=0x27 & op2525=0x1 & vs2 & op1519=0x3 & op1214=0x3 & vd & op0006=0x57 {vd=vmv4r_v(vs2);}

define pcodeop vmv8r_v;
# vmv8r.v        31..26=0x27 25=1 vs2 19..15=7 14..12=0x3 vd 6..0=0x57
# vmv8r.v  vd, vs2
:vmv8r.v   vd, vs2 is op2631=0x27 & op2525=0x1 & vs2 & op1519=0x7 & op1214=0x3 & vd & op0006=0x57 {vd=vmv8r_v(vs2);}

define pcodeop vmxnor_mm;
# vmxnor.mm      31..26=0x1f vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vmxnor.mm vd, vs2, vs1    # vd[i] = !(vs2.mask[i] ^^  vs1.mask[i])
:vmxnor.mm  vd, vs2, vs1     is op2631=0x1f & vm & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmxnor_mm(vs2,vs1);}

define pcodeop vmxor_mm;
# vmxor.mm       31..26=0x1b vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vmxor.mm  vd, vs2, vs1    # vd[i] =   vs2.mask[i] ^^  vs1.mask[i]
:vmxor.mm   vd, vs2, vs1     is op2631=0x1b & vm & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vmxor_mm(vs2,vs1);}

define pcodeop vnclip_wi;
# vnclip.wi      31..26=0x2f vm vs2 uimm5 14..12=0x3 vd 6..0=0x57
# vnclip.wi vd, vs2, uimm5, vm  # vd[i] = clip(roundoff_signed(vs2[i], uimm5))
:vnclip.wi  vd, vs2, uimm5         is op2631=0x2f & op2525=1 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vnclip_wi(vs2,uimm5);}
:vnclip.wi  vd, vs2, uimm5, "v0.t" is op2631=0x2f & op2525=0 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vnclip_wi(vs2,uimm5,v0);}

define pcodeop vnclip_wv;
# vnclip.wv      31..26=0x2f vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vnclip.wv vd, vs2, vs1, vm   # vd[i] = clip(roundoff_signed(vs2[i], vs1[i]))
:vnclip.wv  vd, vs2, vs1         is op2631=0x2f & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vnclip_wv(vs2,vs1);}
:vnclip.wv  vd, vs2, vs1, "v0.t" is op2631=0x2f & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vnclip_wv(vs2,vs1,v0);}

define pcodeop vnclip_wx;
# vnclip.wx      31..26=0x2f vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vnclip.wx vd, vs2, rs1, vm   # vd[i] = clip(roundoff_signed(vs2[i], x[rs1]))
:vnclip.wx  vd, vs2, rs1         is op2631=0x2f & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vnclip_wx(vs2,rs1);}
:vnclip.wx  vd, vs2, rs1, "v0.t" is op2631=0x2f & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vnclip_wx(vs2,rs1,v0);}

define pcodeop vnclipu_wi;
# vnclipu.wi     31..26=0x2e vm vs2 uimm5 14..12=0x3 vd 6..0=0x57
# vnclipu.wi vd, vs2, uimm5, vm  # vd[i] = clip(roundoff_unsigned(vs2[i], uimm5))
:vnclipu.wi  vd, vs2, uimm5         is op2631=0x2e & op2525=1 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vnclipu_wi(vs2,uimm5);}
:vnclipu.wi  vd, vs2, uimm5, "v0.t" is op2631=0x2e & op2525=0 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vnclipu_wi(vs2,uimm5,v0);}

define pcodeop vnclipu_wv;
# vnclipu.wv     31..26=0x2e vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vnclipu.wv vd, vs2, vs1, vm   # vd[i] = clip(roundoff_unsigned(vs2[i], vs1[i]))
:vnclipu.wv  vd, vs2, vs1         is op2631=0x2e & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vnclipu_wv(vs2,vs1);}
:vnclipu.wv  vd, vs2, vs1, "v0.t" is op2631=0x2e & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vnclipu_wv(vs2,vs1,v0);}

define pcodeop vnclipu_wx;
# vnclipu.wx     31..26=0x2e vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vnclipu.wx vd, vs2, rs1, vm   # vd[i] = clip(roundoff_unsigned(vs2[i], x[rs1]))
:vnclipu.wx  vd, vs2, rs1         is op2631=0x2e & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vnclipu_wx(vs2,rs1);}
:vnclipu.wx  vd, vs2, rs1, "v0.t" is op2631=0x2e & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vnclipu_wx(vs2,rs1,v0);}

define pcodeop vnmsac_vv;
# vnmsac.vv      31..26=0x2f vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vnmsac.vv vd, vs1, vs2, vm    # vd[i] = -(vs1[i] * vs2[i]) + vd[i]
:vnmsac.vv  vd, vs1, vs2         is op2631=0x2f & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vnmsac_vv(vs1,vs2);}
:vnmsac.vv  vd, vs1, vs2, "v0.t" is op2631=0x2f & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vnmsac_vv(vs1,vs2,v0);}

define pcodeop vnmsac_vx;
# vnmsac.vx      31..26=0x2f vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vnmsac.vx vd, rs1, vs2, vm    # vd[i] = -(x[rs1] * vs2[i]) + vd[i]
:vnmsac.vx  vd, rs1, vs2         is op2631=0x2f & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vnmsac_vx(rs1,vs2);}
:vnmsac.vx  vd, rs1, vs2, "v0.t" is op2631=0x2f & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vnmsac_vx(rs1,vs2,v0);}

define pcodeop vnmsub_vv;
# vnmsub.vv      31..26=0x2b vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vnmsub.vv vd, vs1, vs2, vm    # vd[i] = -(vs1[i] * vd[i]) + vs2[i]
:vnmsub.vv  vd, vs1, vs2         is op2631=0x2b & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vnmsub_vv(vs1,vs2);}
:vnmsub.vv  vd, vs1, vs2, "v0.t" is op2631=0x2b & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vnmsub_vv(vs1,vs2,v0);}

define pcodeop vnmsub_vx;
# vnmsub.vx      31..26=0x2b vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vnmsub.vx vd, rs1, vs2, vm    # vd[i] = -(x[rs1] * vd[i]) + vs2[i]
:vnmsub.vx  vd, rs1, vs2         is op2631=0x2b & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vnmsub_vx(rs1,vs2);}
:vnmsub.vx  vd, rs1, vs2, "v0.t" is op2631=0x2b & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vnmsub_vx(rs1,vs2,v0);}

define pcodeop vnsra_wi;
# vnsra.wi       31..26=0x2d vm vs2 uimm5 14..12=0x3 vd 6..0=0x57
# vnsra.wi vd, vs2, uimm5, vm   # vector-immediate
:vnsra.wi  vd, vs2, uimm5         is op2631=0x2d & op2525=1 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vnsra_wi(vs2,uimm5);}
:vnsra.wi  vd, vs2, uimm5, "v0.t" is op2631=0x2d & op2525=0 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vnsra_wi(vs2,uimm5,v0);}

define pcodeop vnsra_wv;
# vnsra.wv       31..26=0x2d vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vnsra.wv vd, vs2, vs1, vm   # vector-vector
:vnsra.wv  vd, vs2, vs1         is op2631=0x2d & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vnsra_wv(vs2,vs1);}
:vnsra.wv  vd, vs2, vs1, "v0.t" is op2631=0x2d & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vnsra_wv(vs2,vs1,v0);}

define pcodeop vnsra_wx;
# vnsra.wx       31..26=0x2d vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vnsra.wx vd, vs2, rs1, vm   # vector-scalar
:vnsra.wx  vd, vs2, rs1         is op2631=0x2d & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vnsra_wx(vs2,rs1);}
:vnsra.wx  vd, vs2, rs1, "v0.t" is op2631=0x2d & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vnsra_wx(vs2,rs1,v0);}

define pcodeop vnsrl_wi;
# vnsrl.wi       31..26=0x2c vm vs2 uimm5 14..12=0x3 vd 6..0=0x57
# vnsrl.wi vd, vs2, uimm5, vm   # vector-immediate
:vnsrl.wi  vd, vs2, uimm5         is op2631=0x2c & op2525=1 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vnsrl_wi(vs2,uimm5);}
:vnsrl.wi  vd, vs2, uimm5, "v0.t" is op2631=0x2c & op2525=0 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vnsrl_wi(vs2,uimm5,v0);}

define pcodeop vnsrl_wv;
# vnsrl.wv       31..26=0x2c vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vnsrl.wv vd, vs2, vs1, vm   # vector-vector
:vnsrl.wv  vd, vs2, vs1         is op2631=0x2c & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vnsrl_wv(vs2,vs1);}
:vnsrl.wv  vd, vs2, vs1, "v0.t" is op2631=0x2c & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vnsrl_wv(vs2,vs1,v0);}

define pcodeop vnsrl_wx;
define pcodeop vncvt_xxw;
# vnsrl.wx       31..26=0x2c vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vnsrl.wx vd, vs2, rs1, vm   # vector-scalar
:vncvt.x.x.w  vd, vs2              is op2631=0x2c & op2525=1 & vs2 & op1519=0 & op1214=0x4 & vd & op0006=0x57 {vd=vncvt_xxw(vs2);}
:vncvt.x.x.w  vd, vs2, "v0.t"      is op2631=0x2c & op2525=0 & vs2 & op1519=0 & op1214=0x4 & vd & op0006=0x57 {vd=vncvt_xxw(vs2,v0);}
:vnsrl.wx     vd, vs2, rs1         is op2631=0x2c & op2525=1 & vs2 & rs1      & op1214=0x4 & vd & op0006=0x57 {vd=vnsrl_wx(vs2,rs1);}
:vnsrl.wx     vd, vs2, rs1, "v0.t" is op2631=0x2c & op2525=0 & vs2 & rs1      & op1214=0x4 & vd & op0006=0x57 {vd=vnsrl_wx(vs2,rs1,v0);}

define pcodeop vor_vi;
# vor.vi         31..26=0x0a vm vs2 simm5 14..12=0x3 vd 6..0=0x57
# vor.vi vd, vs2, simm5, vm    # vector-immediate
:vor.vi  vd, vs2, simm5         is op2631=0xa & op2525=1 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vor_vi(vs2,simm5);}
:vor.vi  vd, vs2, simm5, "v0.t" is op2631=0xa & op2525=0 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vor_vi(vs2,simm5,v0);}

define pcodeop vor_vv;
# vor.vv          31..26=0x0a vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vor.vv vd, vs2, vs1, vm    # Vector-vector
:vor.vv  vd, vs2, vs1         is op2631=0xa & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vor_vv(vs2,vs1);}
:vor.vv  vd, vs2, vs1, "v0.t" is op2631=0xa & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vor_vv(vs2,vs1,v0);}

define pcodeop vor_vx;
# vor.vx         31..26=0x0a vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vor.vx vd, vs2, rs1, vm    # vector-scalar
:vor.vx  vd, vs2, rs1         is op2631=0xa & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vor_vx(vs2,rs1);}
:vor.vx  vd, vs2, rs1, "v0.t" is op2631=0xa & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vor_vx(vs2,rs1,v0);}

define pcodeop vcpop_m;
# vcpop.m        31..26=0x10 vm vs2 19..15=0x10 14..12=0x2 rd 6..0=0x57
# vcpop.m rd, vs2, vm # x[rd] = sum_i ( vs2.mask[i] &amp;&amp; v0.mask[i] )
:vcpop.m  rd, vs2         is op2631=0x10 & op2525=1 & vs2 & op1519=0x10 & op1214=0x2 & rd & op0006=0x57 {rd=vcpop_m(vs2);}
:vcpop.m  rd, vs2, "v0.t" is op2631=0x10 & op2525=0 & vs2 & op1519=0x10 & op1214=0x2 & rd & op0006=0x57 {rd=vcpop_m(vs2,v0);}

define pcodeop vqmacc_vv;
# vqmacc.vv      31..26=0x3d vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vqmacc.vv vd, vs1, vs2, vm # vd[i] = +(vs1[i] * vs2[i]) + vd[i]
:vqmacc.vv  vd, vs1, vs2         is op2631=0x3d & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vqmacc_vv(vs1,vs2);}
:vqmacc.vv  vd, vs1, vs2, "v0.t" is op2631=0x3d & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vqmacc_vv(vs1,vs2,v0);}

define pcodeop vqmacc_vx;
# vqmacc.vx      31..26=0x3d vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vqmacc.vx vd, rs1, vs2, vm # vd[i] = +(x[rs1] * vs2[i]) + vd[i]
:vqmacc.vx  vd, rs1, vs2          is op2631=0x3d & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vqmacc_vx(rs1,vs2);}
:vqmacc.vx  vd, rs1, vs2, "v0.t"  is op2631=0x3d & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vqmacc_vx(rs1,vs2,v0);}

define pcodeop vqmaccsu_vv;
# vqmaccsu.vv    31..26=0x3f vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vqmaccsu.vv vd, vs1, vs2, vm # vd[i] = +(signed(vs1[i]) * unsigned(vs2[i])) + vd[i]
:vqmaccsu.vv  vd, vs1, vs2         is op2631=0x3f & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vqmaccsu_vv(vs1,vs2);}
:vqmaccsu.vv  vd, vs1, vs2, "v0.t" is op2631=0x3f & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vqmaccsu_vv(vs1,vs2,v0);}

define pcodeop vqmaccsu_vx;
# vqmaccsu.vx    31..26=0x3f vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vqmaccsu.vx vd, rs1, vs2, vm # vd[i] = +(signed(x[rs1]) * unsigned(vs2[i])) + vd[i]
:vqmaccsu.vx  vd, rs1, vs2         is op2631=0x3f & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vqmaccsu_vx(rs1,vs2);}
:vqmaccsu.vx  vd, rs1, vs2, "v0.t" is op2631=0x3f & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vqmaccsu_vx(rs1,vs2,v0);}

define pcodeop vqmaccu_vv;
# vqmaccu.vv     31..26=0x3c vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vqmaccu.vv vd, vs1, vs2, vm # vd[i] = +(vs1[i] * vs2[i]) + vd[i]
:vqmaccu.vv  vd, vs1, vs2         is op2631=0x3c & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vqmaccu_vv(vs1,vs2);}
:vqmaccu.vv  vd, vs1, vs2, "v0.t" is op2631=0x3c & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vqmaccu_vv(vs1,vs2,v0);}

define pcodeop vqmaccu_vx;
# vqmaccu.vx     31..26=0x3c vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vqmaccu.vx vd, rs1, vs2, vm # vd[i] = +(x[rs1] * vs2[i]) + vd[i]
:vqmaccu.vx  vd, rs1, vs2         is op2631=0x3c & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vqmaccu_vx(rs1,vs2);}
:vqmaccu.vx  vd, rs1, vs2, "v0.t" is op2631=0x3c & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vqmaccu_vx(rs1,vs2,v0);}

define pcodeop vqmaccus_vx;
# vqmaccus.vx    31..26=0x3e vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vqmaccus.vx vd, rs1, vs2, vm # vd[i] = +(unsigned(x[rs1]) * signed(vs2[i])) + vd[i]
:vqmaccus.vx  vd, rs1, vs2         is op2631=0x3e & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vqmaccus_vx(rs1,vs2);}
:vqmaccus.vx  vd, rs1, vs2, "v0.t" is op2631=0x3e & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vqmaccus_vx(rs1,vs2,v0);}

define pcodeop vredand_vs;
# vredand.vs     31..26=0x01 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vredand.vs  vd, vs2, vs1, vm   # vd[0] =  and( vs1[0] , vs2[*] )
:vredand.vs   vd, vs2, vs1         is op2631=0x1 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredand_vs(vs2,vs1);}
:vredand.vs   vd, vs2, vs1, "v0.t" is op2631=0x1 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredand_vs(vs2,vs1,v0);}

define pcodeop vredmax_vs;
# vredmax.vs     31..26=0x07 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vredmax.vs  vd, vs2, vs1, vm   # vd[0] =  max( vs1[0] , vs2[*] )
:vredmax.vs   vd, vs2, vs1         is op2631=0x7 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredmax_vs(vs2,vs1);}
:vredmax.vs   vd, vs2, vs1, "v0.t" is op2631=0x7 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredmax_vs(vs2,vs1,v0);}

define pcodeop vredmaxu_vs;
# vredmaxu.vs    31..26=0x06 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vredmaxu.vs vd, vs2, vs1, vm   # vd[0] = maxu( vs1[0] , vs2[*] )
:vredmaxu.vs  vd, vs2, vs1         is op2631=0x6 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredmaxu_vs(vs2,vs1);}
:vredmaxu.vs  vd, vs2, vs1, "v0.t" is op2631=0x6 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredmaxu_vs(vs2,vs1,v0);}

define pcodeop vredmin_vs;
# vredmin.vs     31..26=0x05 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vredmin.vs  vd, vs2, vs1, vm   # vd[0] =  min( vs1[0] , vs2[*] )
:vredmin.vs  vd, vs2, vs1         is op2631=0x5 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredmin_vs(vs2,vs1);}
:vredmin.vs  vd, vs2, vs1, "v0.t" is op2631=0x5 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredmin_vs(vs2,vs1,v0);}

define pcodeop vredminu_vs;
# vredminu.vs vd, vs2, vs1, vm   # vd[0] = minu( vs1[0] , vs2[*] )
#:vredminu.vs  vd, vs2, vs1, vm    is op2631=0x4 & vm & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57  
:vredminu.vs  vd, vs2, vs1         is op2631=0x4 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredminu_vs(vs2,vs1);}
:vredminu.vs  vd, vs2, vs1, "v0.t" is op2631=0x4 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredminu_vs(vs2,vs1,v0);}

define pcodeop vredor_vs;
# vredor.vs      31..26=0x02 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vredor.vs   vd, vs2, vs1, vm   # vd[0] =   or( vs1[0] , vs2[*] )
:vredor.vs  vd, vs2, vs1         is op2631=0x2 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredor_vs(vs2,vs1);}
:vredor.vs  vd, vs2, vs1, "v0.t" is op2631=0x2 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredor_vs(vs2,vs1,v0);}

define pcodeop vredsum_vs;
# vredsum.vs     31..26=0x00 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vredsum.vs  vd, vs2, vs1, vm   # vd[0] =  sum( vs1[0] , vs2[*] )
:vredsum.vs   vd, vs2, vs1         is op2631=0x0 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredsum_vs(vs2,vs1);}
:vredsum.vs   vd, vs2, vs1, "v0.t" is op2631=0x0 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredsum_vs(vs2,vs1,v0);}

define pcodeop vredxor_vs;
# vredxor.vs     31..26=0x03 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vredxor.vs  vd, vs2, vs1, vm   # vd[0] =  xor( vs1[0] , vs2[*] )
:vredxor.vs   vd, vs2, vs1         is op2631=0x3 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredxor_vs(vs2,vs1);}
:vredxor.vs   vd, vs2, vs1, "v0.t" is op2631=0x3 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vredxor_vs(vs2,vs1,v0);}

define pcodeop vrem_vv;
# vrem.vv        31..26=0x23 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vrem.vv vd, vs2, vs1, vm   # Vector-vector
:vrem.vv  vd, vs2, vs1         is op2631=0x23 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vrem_vv(vs2,vs1);}
:vrem.vv  vd, vs2, vs1, "v0.t" is op2631=0x23 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vrem_vv(vs2,vs1,v0);}

define pcodeop vrem_vx;
# vrem.vx        31..26=0x23 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vrem.vx vd, vs2, rs1, vm   # vector-scalar
:vrem.vx  vd, vs2, rs1         is op2631=0x23 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vrem_vx(vs2,rs1);}
:vrem.vx  vd, vs2, rs1, "v0.t" is op2631=0x23 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vrem_vx(vs2,rs1,v0);}

define pcodeop vremu_vv;
# vremu.vv       31..26=0x22 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vremu.vv vd, vs2, vs1, vm   # Vector-vector
:vremu.vv  vd, vs2, vs1         is op2631=0x22 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vremu_vv(vs2,vs1);}
:vremu.vv  vd, vs2, vs1, "v0.t" is op2631=0x22 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vremu_vv(vs2,vs1,v0);}

define pcodeop vremu_vx;
# vremu.vx       31..26=0x22 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vremu.vx vd, vs2, rs1, vm   # vector-scalar
:vremu.vx  vd, vs2, rs1         is op2631=0x22 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vremu_vx(vs2,rs1);}
:vremu.vx  vd, vs2, rs1, "v0.t" is op2631=0x22 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vremu_vx(vs2,rs1,v0);}

define pcodeop vrgather_vi;
# vrgather.vi    31..26=0x0c vm vs2 uimm5 14..12=0x3 vd 6..0=0x57
# vrgather.vi vd, vs2, uimm5, vm # vd[i] = (uimm &gt;= VLMAX) ? 0 : vs2[uimm]
:vrgather.vi  vd, vs2, uimm5         is op2631=0xc & op2525=1 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vrgather_vi(vs2,uimm5);}
:vrgather.vi  vd, vs2, uimm5, "v0.t" is op2631=0xc & op2525=0 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vrgather_vi(vs2,uimm5,v0);}

define pcodeop vrgather_vv;
# vrgather.vv     31..26=0x0c vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vrgather.vv vd, vs2, vs1, vm # vd[i] = (vs1[i] &gt;= VLMAX) ? 0 : vs2[vs1[i]];
:vrgather.vv  vd, vs2, vs1         is op2631=0xc & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vrgather_vv(vs2,vs1);}
:vrgather.vv  vd, vs2, vs1, "v0.t" is op2631=0xc & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vrgather_vv(vs2,vs1,v0);}

define pcodeop vrgather_vx;
# vrgather.vx    31..26=0x0c vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vrgather.vx vd, vs2, rs1, vm # vd[i] = (x[rs1] &gt;= VLMAX) ? 0 : vs2[x[rs1]]
:vrgather.vx  vd, vs2, rs1         is op2631=0xc & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vrgather_vx(vs2,rs1);}
:vrgather.vx  vd, vs2, rs1, "v0.t" is op2631=0xc & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vrgather_vx(vs2,rs1,v0);}

define pcodeop vrgatherei16_vv;
# vrgatherei16.vv 31..26=0x0e vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vrgatherei16.vv vd, vs2, vs1, vm # vd[i] = (vs1[i] &gt;= VLMAX) ? 0 : vs2[vs1[i]];
:vrgatherei16.vv  vd, vs2, vs1         is op2631=0xe & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vrgatherei16_vv(vs2,vs1);}
:vrgatherei16.vv  vd, vs2, vs1, "v0.t" is op2631=0xe & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vrgatherei16_vv(vs2,vs1,v0);}

define pcodeop vrsub_vi;
# vrsub.vi       31..26=0x03 vm vs2 simm5 14..12=0x3 vd 6..0=0x57
# vrsub.vi vd, vs2, simm5, vm   # vd[i] = imm - vs2[i]
:vrsub.vi  vd, vs2, simm5         is op2631=0x3 & op2525=1 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vrsub_vi(vs2,simm5);}
:vrsub.vi  vd, vs2, simm5, "v0.t" is op2631=0x3 & op2525=0 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vrsub_vi(vs2,simm5,v0);}

define pcodeop vneg_v;
define pcodeop vrsub_vx;
# vrsub.vx       31..26=0x03 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vrsub.vx vd, vs2, rs1, vm   # vd[i] = rs1 - vs2[i]
:vneg.v    vd, vs2               is op2631=0x3 & op2525=1 & vs2 & op1519=0 & op1214=0x4 & vd & op0006=0x57 {vd=vneg_v(vs2);}
:vneg.v    vd, vs2, "v0.t"       is op2631=0x3 & op2525=0 & vs2 & op1519=0 & op1214=0x4 & vd & op0006=0x57 {vd=vneg_v(vs2,v0);}
:vrsub.vx  vd, vs2, rs1          is op2631=0x3 & op2525=1 & vs2 & rs1      & op1214=0x4 & vd & op0006=0x57 {vd=vrsub_vx(vs2,rs1);}
:vrsub.vx  vd, vs2, rs1, "v0.t"  is op2631=0x3 & op2525=0 & vs2 & rs1      & op1214=0x4 & vd & op0006=0x57 {vd=vrsub_vx(vs2,rs1,v0);}

define pcodeop vs1r_v;
# vs1r.v         31..29=0 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x0 vs3 6..0=0x27
# vs1r.v   vs3, (rs1)
:vs1r.v    vs3, (rs1) is op2931=0x0 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vs1r_v(vs3,rs1);}

define pcodeop vs2r_v;
# vs2r.v         31..29=1 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x0 vs3 6..0=0x27
# vs2r.v   vs3, (rs1)
:vs2r.v    vs3, (rs1) is op2931=0x1 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vs2r_v(vs3,rs1);}

define pcodeop vs4r_v;
# vs4r.v         31..29=3 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x0 vs3 6..0=0x27
# vs4r.v   vs3, (rs1)
:vs4r.v    vs3, (rs1) is op2931=0x3 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vs4r_v(vs3,rs1);}

define pcodeop vs8r_v;
# vs8r.v         31..29=7 28=0 27..26=0 25=1 24..20=0x08 rs1 14..12=0x0 vs3 6..0=0x27
# vs8r.v   vs3, (rs1)
:vs8r.v    vs3, (rs1) is op2931=0x7 & op2828=0x0 & op2627=0x0 & op2525=0x1 & op2024=0x8 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vs8r_v(vs3,rs1);}

define pcodeop vsadd_vi;
# vsadd.vi       31..26=0x21 vm vs2 simm5 14..12=0x3 vd 6..0=0x57
# vsadd.vi vd, vs2, simm5, vm   # vector-immediate
:vsadd.vi  vd, vs2, simm5         is op2631=0x21 & op2525=1 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vsadd_vi(vs2,simm5);}
:vsadd.vi  vd, vs2, simm5, "v0.t" is op2631=0x21 & op2525=0 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vsadd_vi(vs2,simm5,v0);}

define pcodeop vsadd_vv;
# vsadd.vv       31..26=0x21 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vsadd.vv vd, vs2, vs1, vm   # Vector-vector
:vsadd.vv  vd, vs2, vs1         is op2631=0x21 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vsadd_vv(vs2,vs1);}
:vsadd.vv  vd, vs2, vs1, "v0.t" is op2631=0x21 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vsadd_vv(vs2,vs1,v0);}

define pcodeop vsadd_vx;
# vsadd.vx       31..26=0x21 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vsadd.vx vd, vs2, rs1, vm   # vector-scalar
:vsadd.vx  vd, vs2, rs1         is op2631=0x21 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vsadd_vx(vs2,rs1);}
:vsadd.vx  vd, vs2, rs1, "v0.t" is op2631=0x21 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vsadd_vx(vs2,rs1,v0);}

define pcodeop vsaddu_vi;
# vsaddu.vi      31..26=0x20 vm vs2 simm5 14..12=0x3 vd 6..0=0x57
# vsaddu.vi vd, vs2, simm5, vm   # vector-immediate
:vsaddu.vi  vd, vs2, simm5         is op2631=0x20 & op2525=1 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vsaddu_vi(vs2,simm5);}
:vsaddu.vi  vd, vs2, simm5, "v0.t" is op2631=0x20 & op2525=0 & vs2 & simm5 & op1214=0x3 & vd & op0006=0x57 {vd=vsaddu_vi(vs2,simm5,v0);}

define pcodeop vsaddu_vv;
# vsaddu.vv      31..26=0x20 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vsaddu.vv vd, vs2, vs1, vm   # Vector-vector
:vsaddu.vv  vd, vs2, vs1         is op2631=0x20 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vsaddu_vv(vs2,vs1);}
:vsaddu.vv  vd, vs2, vs1, "v0.t" is op2631=0x20 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vsaddu_vv(vs2,vs1,v0);}

define pcodeop vsaddu_vx;
# vsaddu.vx      31..26=0x20 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vsaddu.vx vd, vs2, rs1, vm   # vector-scalar
:vsaddu.vx  vd, vs2, rs1         is op2631=0x20 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vsaddu_vx(vs2,rs1);}
:vsaddu.vx  vd, vs2, rs1, "v0.t" is op2631=0x20 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vsaddu_vx(vs2,rs1,v0);}

define pcodeop vsbc_vvm;
# vsbc.vvm       31..26=0x12 25=0 vs2 vs1 14..12=0x0 vd 6..0=0x57
# vsbc.vvm   vd, vs2, vs1, v0  # Vector-vector
:vsbc.vvm    vd, vs2, vs1, v0   is op2631=0x12 & op2525=0x0 & vs2 & vs1 & op1214=0x0 & v0 & vd & op0006=0x57 {vd=vsbc_vvm(vs2,vs1,v0);}

define pcodeop vsbc_vxm;
# vsbc.vxm       31..26=0x12 25=0 vs2 rs1 14..12=0x4 vd 6..0=0x57
# vsbc.vxm   vd, vs2, rs1, v0  # Vector-scalar
:vsbc.vxm    vd, vs2, rs1, v0   is op2631=0x12 & op2525=0x0 & vs2 & rs1 & op1214=0x4 & v0 & vd & op0006=0x57  {vd=vsbc_vvm(vs2,rs1,v0);}

define pcodeop vse1024_v;
# vse1024.v      nf 28=1 27..26=0 vm 24..20=0 rs1 14..12=0x7 vs3 6..0=0x27
# vse1024.v vs3, (rs1), vm  # 1024-bit unit-stride store
:vse1024.v      vs3, (rs1),          is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vse1024_v(vs3,rs1);}
:vse1024.v      vs3, (rs1), "v0.t"   is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vse1024_v(vs3,rs1,v0);}

define pcodeop vsseq2e1024_v;
:vsseg2e1024.v  vs3, (rs1),          is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseq2e1024_v(vs3,rs1);}
:vsseg2e1024.v  vs3, (rs1), "v0.t"   is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseq2e1024_v(vs3,rs1,v0);}

define pcodeop vsseq3e1024_v;
:vsseg3e1024.v  vs3, (rs1),          is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseq3e1024_v(vs3,rs1);}
:vsseg3e1024.v  vs3, (rs1), "v0.t"   is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseq3e1024_v(vs3,rs1,v0);}

define pcodeop vsseq4e1024_v;
:vsseg4e1024.v  vs3, (rs1),          is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseq4e1024_v(vs3,rs1);}
:vsseg4e1024.v  vs3, (rs1), "v0.t"   is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseq4e1024_v(vs3,rs1,v0);}

define pcodeop vsseq5e1024_v;
:vsseg5e1024.v  vs3, (rs1),          is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseq5e1024_v(vs3,rs1);}
:vsseg5e1024.v  vs3, (rs1), "v0.t"   is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseq5e1024_v(vs3,rs1,v0);}

define pcodeop vsseq6e1024_v;
:vsseg6e1024.v  vs3, (rs1),          is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseq6e1024_v(vs3,rs1);}
:vsseg6e1024.v  vs3, (rs1), "v0.t"   is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseq6e1024_v(vs3,rs1,v0);}

define pcodeop vsseq7e1024_v;
:vsseg7e1024.v  vs3, (rs1),          is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseq7e1024_v(vs3,rs1);}
:vsseg7e1024.v  vs3, (rs1), "v0.t"   is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseq7e1024_v(vs3,rs1,v0);}

define pcodeop vsseq8e1024_v;
:vsseg8e1024.v  vs3, (rs1),          is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseq8e1024_v(vs3,rs1);}
:vsseg8e1024.v  vs3, (rs1), "v0.t"   is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseq8e1024_v(vs3,rs1,v0);}

define pcodeop vse128_v;
# vse128.v       nf 28=1 27..26=0 vm 24..20=0 rs1 14..12=0x0 vs3 6..0=0x27
# vse128.v  vs3, (rs1), vm  #  128-bit unit-stride store
:vse128.v       vs3, (rs1)           is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vse128_v(vs3,rs1);}
:vse128.v       vs3, (rs1), "v0.t"   is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vse128_v(vs3,rs1,v0);}

define pcodeop vsseg2e128_v;
:vsseg2e128.v   vs3, (rs1)           is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg2e128_v(vs3,rs1);}
:vsseg2e128.v   vs3, (rs1), "v0.t"   is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg2e128_v(vs3,rs1,v0);}

define pcodeop vsseg3e128_v;
:vsseg3e128.v   vs3, (rs1)           is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg3e128_v(vs3,rs1);}
:vsseg3e128.v   vs3, (rs1), "v0.t"   is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg3e128_v(vs3,rs1,v0);}

define pcodeop vsseg4e128_v;
:vsseg4e128.v   vs3, (rs1)           is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg4e128_v(vs3,rs1);}
:vsseg4e128.v   vs3, (rs1), "v0.t"   is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg4e128_v(vs3,rs1,v0);}

define pcodeop vsseg5e128_v;
:vsseg5e128.v   vs3, (rs1)           is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg5e128_v(vs3,rs1);}
:vsseg5e128.v   vs3, (rs1), "v0.t"   is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg5e128_v(vs3,rs1,v0);}

define pcodeop vsseg6e128_v;
:vsseg6e128.v   vs3, (rs1)           is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg6e128_v(vs3,rs1);}
:vsseg6e128.v   vs3, (rs1), "v0.t"   is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg6e128_v(vs3,rs1,v0);}

define pcodeop vsseg7e128_v;
:vsseg7e128.v   vs3, (rs1)           is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg7e128_v(vs3,rs1);}
:vsseg7e128.v   vs3, (rs1), "v0.t"   is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg7e128_v(vs3,rs1,v0);}

define pcodeop vsseg8e128_v;
:vsseg8e128.v   vs3, (rs1)           is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg8e128_v(vs3,rs1);}
:vsseg8e128.v   vs3, (rs1), "v0.t"   is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg8e128_v(vs3,rs1,v0);}

define pcodeop vse16_v;
# vse16.v        nf 28=0 27..26=0 vm 24..20=0 rs1 14..12=0x5 vs3 6..0=0x27
# vse16.v       vs3, (rs1), vm  #   16-bit unit-stride store
:vse16.v        vs3, (rs1)           is nf & op2931=0 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vse16_v(vs3,rs1);}
:vse16.v        vs3, (rs1), "v0.t"   is nf & op2931=0 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vse16_v(vs3,rs1,v0);}

define pcodeop vsseg2e16_v;
:vsseg2e16.v    vs3, (rs1)           is nf & op2931=1 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg2e16_v(vs3,rs1);}
:vsseg2e16.v    vs3, (rs1), "v0.t"   is nf & op2931=1 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg2e16_v(vs3,rs1,v0);}

define pcodeop vsseg3e16_v;
:vsseg3e16.v    vs3, (rs1)           is nf & op2931=2 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg3e16_v(vs3,rs1);}
:vsseg3e16.v    vs3, (rs1), "v0.t"   is nf & op2931=2 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg3e16_v(vs3,rs1,v0);}

define pcodeop vsseg4e16_v;
:vsseg4e16.v    vs3, (rs1)           is nf & op2931=3 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg4e16_v(vs3,rs1);}
:vsseg4e16.v    vs3, (rs1), "v0.t"   is nf & op2931=3 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg4e16_v(vs3,rs1,v0);}

define pcodeop vsseg5e16_v;
:vsseg5e16.v    vs3, (rs1)           is nf & op2931=4 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg5e16_v(vs3,rs1);}
:vsseg5e16.v    vs3, (rs1), "v0.t"   is nf & op2931=4 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg5e16_v(vs3,rs1,v0);}

define pcodeop vsseg6e16_v;
:vsseg6e16.v    vs3, (rs1)           is nf & op2931=5 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg6e16_v(vs3,rs1);}
:vsseg6e16.v    vs3, (rs1), "v0.t"   is nf & op2931=5 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg6e16_v(vs3,rs1,v0);}

define pcodeop vsseg7e16_v;
:vsseg7e16.v    vs3, (rs1)           is nf & op2931=6 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg7e16_v(vs3,rs1);}
:vsseg7e16.v    vs3, (rs1), "v0.t"   is nf & op2931=6 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg7e16_v(vs3,rs1,v0);}

define pcodeop vsseg8e16_v;
:vsseg8e16.v    vs3, (rs1)           is nf & op2931=7 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg8e16_v(vs3,rs1);}
:vsseg8e16.v    vs3, (rs1), "v0.t"   is nf & op2931=7 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg8e16_v(vs3,rs1,v0);}

define pcodeop vse256_v;
# vse256.v       nf 28=1 27..26=0 vm 24..20=0 rs1 14..12=0x5 vs3 6..0=0x27
# vse256.v  vs3, (rs1), vm  #  256-bit unit-stride store
:vse256.v       vs3, (rs1)           is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vse256_v(vs3,rs1);}
:vse256.v       vs3, (rs1), "v0.t"   is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vse256_v(vs3,rs1,v0);}

define pcodeop vsseg2e256_v;
:vsseg2e256.v   vs3, (rs1)           is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg2e256_v(vs3,rs1);}
:vsseg2e256.v   vs3, (rs1), "v0.t"   is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg2e256_v(vs3,rs1,v0);}

define pcodeop vsseg3e256_v;
:vsseg3e256.v   vs3, (rs1)           is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg3e256_v(vs3,rs1);}
:vsseg3e256.v   vs3, (rs1), "v0.t"   is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg3e256_v(vs3,rs1,v0);}

define pcodeop vsseg4e256_v;
:vsseg4e256.v   vs3, (rs1)           is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg4e256_v(vs3,rs1);}
:vsseg4e256.v   vs3, (rs1), "v0.t"   is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg4e256_v(vs3,rs1,v0);}

define pcodeop vsseg5e256_v;
:vsseg5e256.v   vs3, (rs1)           is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg5e256_v(vs3,rs1);}
:vsseg5e256.v   vs3, (rs1), "v0.t"   is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg5e256_v(vs3,rs1,v0);}

define pcodeop vsseg6e256_v;
:vsseg6e256.v   vs3, (rs1)           is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg6e256_v(vs3,rs1);}
:vsseg6e256.v   vs3, (rs1), "v0.t"   is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg6e256_v(vs3,rs1,v0);}

define pcodeop vsseg7e256_v;
:vsseg7e256.v   vs3, (rs1)           is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg7e256_v(vs3,rs1);}
:vsseg7e256.v   vs3, (rs1), "v0.t"   is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg7e256_v(vs3,rs1,v0);}

define pcodeop vsseg8e256_v;
:vsseg8e256.v   vs3, (rs1)           is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg8e256_v(vs3,rs1);}
:vsseg8e256.v   vs3, (rs1), "v0.t"   is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsseg8e256_v(vs3,rs1,v0);}

define pcodeop vse32_v;
# vse32.v        nf 28=0 27..26=0 vm 24..20=0 rs1 14..12=0x6 vs3 6..0=0x27
# vse32.v   vs3, (rs1), vm  #   32-bit unit-stride store
:vse32.v        vs3, (rs1)           is nf & op2931=0 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vse32_v(vs3,rs1);}
:vse32.v        vs3, (rs1), "v0.t"   is nf & op2931=0 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vse32_v(vs3,rs1,v0);}

define pcodeop vsseg2e32_v;
:vsseg2e32.v    vs3, (rs1)           is nf & op2931=1 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg2e32_v(vs3,rs1);}
:vsseg2e32.v    vs3, (rs1), "v0.t"   is nf & op2931=1 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg2e32_v(vs3,rs1,v0);}

define pcodeop vsseg3e32_v;
:vsseg3e32.v    vs3, (rs1)           is nf & op2931=2 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg3e32_v(vs3,rs1);}
:vsseg3e32.v    vs3, (rs1), "v0.t"   is nf & op2931=2 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg3e32_v(vs3,rs1,v0);}

define pcodeop vsseg4e32_v;
:vsseg4e32.v    vs3, (rs1)           is nf & op2931=3 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg4e32_v(vs3,rs1);}
:vsseg4e32.v    vs3, (rs1), "v0.t"   is nf & op2931=3 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg4e32_v(vs3,rs1,v0);}

define pcodeop vsseg5e32_v;
:vsseg5e32.v    vs3, (rs1)           is nf & op2931=4 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg5e32_v(vs3,rs1);}
:vsseg5e32.v    vs3, (rs1), "v0.t"   is nf & op2931=4 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg5e32_v(vs3,rs1,v0);}

define pcodeop vsseg6e32_v;
:vsseg6e32.v    vs3, (rs1)           is nf & op2931=5 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg6e32_v(vs3,rs1);}
:vsseg6e32.v    vs3, (rs1), "v0.t"   is nf & op2931=5 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg6e32_v(vs3,rs1,v0);}

define pcodeop vsseg7e32_v;
:vsseg7e32.v    vs3, (rs1)           is nf & op2931=6 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg7e32_v(vs3,rs1);}
:vsseg7e32.v    vs3, (rs1), "v0.t"   is nf & op2931=6 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg7e32_v(vs3,rs1,v0);}

define pcodeop vsseg8e32_v;
:vsseg8e32.v    vs3, (rs1)           is nf & op2931=7 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg8e32_v(vs3,rs1);}
:vsseg8e32.v    vs3, (rs1), "v0.t"   is nf & op2931=7 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg8e32_v(vs3,rs1,v0);}

define pcodeop vse512_v;
# vse512.v       nf 28=1 27..26=0 vm 24..20=0 rs1 14..12=0x6 vs3 6..0=0x27
# vse512.v  vs3, (rs1), vm  #  512-bit unit-stride store
:vse512.v   vs3, (rs1)           is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vse512_v(vs3,rs1);}
:vse512.v   vs3, (rs1), "v0.t"   is nf & op2931=0 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vse512_v(vs3,rs1,v0);}

define pcodeop vsseg2e512_v;
:vsseg2e512.v   vs3, (rs1)           is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg2e512_v(vs3,rs1);}
:vsseg2e512.v   vs3, (rs1), "v0.t"   is nf & op2931=1 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg2e512_v(vs3,rs1,v0);}

define pcodeop vsseg3e512_v;
:vsseg3e512.v   vs3, (rs1)           is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg3e512_v(vs3,rs1);}
:vsseg3e512.v   vs3, (rs1), "v0.t"   is nf & op2931=2 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg3e512_v(vs3,rs1,v0);}

define pcodeop vsseg4e512_v;
:vsseg4e512.v   vs3, (rs1)           is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg4e512_v(vs3,rs1);}
:vsseg4e512.v   vs3, (rs1), "v0.t"   is nf & op2931=3 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg4e512_v(vs3,rs1,v0);}

define pcodeop vsseg5e512_v;
:vsseg5e512.v   vs3, (rs1)           is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg5e512_v(vs3,rs1);}
:vsseg5e512.v   vs3, (rs1), "v0.t"   is nf & op2931=4 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg5e512_v(vs3,rs1,v0);}

define pcodeop vsseg6e512_v;
:vsseg6e512.v   vs3, (rs1)           is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg6e512_v(vs3,rs1);}
:vsseg6e512.v   vs3, (rs1), "v0.t"   is nf & op2931=5 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg6e512_v(vs3,rs1,v0);}

define pcodeop vsseg7e512_v;
:vsseg7e512.v   vs3, (rs1)           is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg7e512_v(vs3,rs1);}
:vsseg7e512.v   vs3, (rs1), "v0.t"   is nf & op2931=6 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg7e512_v(vs3,rs1,v0);}

define pcodeop vsseg8e512_v;
:vsseg8e512.v   vs3, (rs1)           is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg8e512_v(vs3,rs1);}
:vsseg8e512.v   vs3, (rs1), "v0.t"   is nf & op2931=7 & op2828=0x1 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsseg8e512_v(vs3,rs1,v0);}

define pcodeop vse64_v;
# vse64.v        nf 28=0 27..26=0 vm 24..20=0 rs1 14..12=0x7 vs3 6..0=0x27
# vse64.v   vs3, (rs1), vm  #   64-bit unit-stride store
:vse64.v    vs3, (rs1)           is nf & op2931=0 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vse64_v(vs3,rs1);}
:vse64.v    vs3, (rs1), "v0.t"   is nf & op2931=0 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vse64_v(vs3,rs1,v0);}

define pcodeop vsseg2e64_v;
:vsseg2e64.v    vs3, (rs1)           is nf & op2931=1 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseg2e64_v(vs3,rs1);}
:vsseg2e64.v    vs3, (rs1), "v0.t"   is nf & op2931=1 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseg2e64_v(vs3,rs1,v0);}

define pcodeop vsseg3e64_v;
:vsseg3e64.v    vs3, (rs1)           is nf & op2931=2 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseg3e64_v(vs3,rs1);}
:vsseg3e64.v    vs3, (rs1), "v0.t"   is nf & op2931=2 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseg3e64_v(vs3,rs1,v0);}

define pcodeop vsseg4e64_v;
:vsseg4e64.v    vs3, (rs1)           is nf & op2931=3 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseg4e64_v(vs3,rs1);}
:vsseg4e64.v    vs3, (rs1), "v0.t"   is nf & op2931=3 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseg4e64_v(vs3,rs1,v0);}

define pcodeop vsseg5e64_v;
:vsseg5e64.v    vs3, (rs1)           is nf & op2931=4 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseg5e64_v(vs3,rs1);}
:vsseg5e64.v    vs3, (rs1), "v0.t"   is nf & op2931=4 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseg5e64_v(vs3,rs1,v0);}

define pcodeop vsseg6e64_v;
:vsseg6e64.v    vs3, (rs1)           is nf & op2931=5 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseg6e64_v(vs3,rs1);}
:vsseg6e64.v    vs3, (rs1), "v0.t"   is nf & op2931=5 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseg6e64_v(vs3,rs1,v0);}

define pcodeop vsseg7e64_v;
:vsseg7e64.v    vs3, (rs1)           is nf & op2931=6 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseg7e64_v(vs3,rs1);}
:vsseg7e64.v    vs3, (rs1), "v0.t"   is nf & op2931=6 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseg7e64_v(vs3,rs1,v0);}

define pcodeop vsseg8e64_v;
:vsseg8e64.v    vs3, (rs1)           is nf & op2931=7 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseg8e64_v(vs3,rs1);}
:vsseg8e64.v    vs3, (rs1), "v0.t"   is nf & op2931=7 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsseg8e64_v(vs3,rs1,v0);}

define pcodeop vse8_v;
# vse8.v         nf 28=0 27..26=0 vm 24..20=0 rs1 14..12=0x0 vs3 6..0=0x27
# vse8.v    vs3, (rs1), vm  #    8-bit unit-stride store
:vse8.v     vs3, (rs1)           is nf & op2931=0x0 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vse8_v(vs3,rs1);}
:vse8.v     vs3, (rs1), "v0.t"   is nf & op2931=0x0 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vse8_v(vs3,rs1,v0);}

define pcodeop vsseg2e8_v;
:vsseg2e8.v vs3, (rs1)           is nf & op2931=0x1 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg2e8_v(vs3,rs1);}
:vsseg2e8.v vs3, (rs1), "v0.t"   is nf & op2931=0x1 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg2e8_v(vs3,rs1,v0);}

define pcodeop vsseg3e8_v;
:vsseg3e8.v vs3, (rs1)           is nf & op2931=0x2 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg3e8_v(vs3,rs1);}
:vsseg3e8.v vs3, (rs1), "v0.t"   is nf & op2931=0x2 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg3e8_v(vs3,rs1,v0);}

define pcodeop vsseg4e8_v;
:vsseg4e8.v vs3, (rs1)           is nf & op2931=0x3 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg4e8_v(vs3,rs1);}
:vsseg4e8.v vs3, (rs1), "v0.t"   is nf & op2931=0x3 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg4e8_v(vs3,rs1,v0);}

define pcodeop vsseg5e8_v;
:vsseg5e8.v vs3, (rs1)           is nf & op2931=0x4 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg5e8_v(vs3,rs1);}
:vsseg5e8.v vs3, (rs1), "v0.t"   is nf & op2931=0x4 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg5e8_v(vs3,rs1,v0);}

define pcodeop vsseg6e8_v;
:vsseg6e8.v vs3, (rs1)           is nf & op2931=0x5 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg6e8_v(vs3,rs1);}
:vsseg6e8.v vs3, (rs1), "v0.t"   is nf & op2931=0x5 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg6e8_v(vs3,rs1,v0);}

define pcodeop vsseg7e8_v;
:vsseg7e8.v vs3, (rs1)           is nf & op2931=0x6 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg7e8_v(vs3,rs1);}
:vsseg7e8.v vs3, (rs1), "v0.t"   is nf & op2931=0x6 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg7e8_v(vs3,rs1,v0);}

define pcodeop vsseg8e8_v;
:vsseg8e8.v vs3, (rs1)           is nf & op2931=0x7 & op2828=0x0 & op2627=0x0 & op2525=1 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg8e8_v(vs3,rs1);}
:vsseg8e8.v vs3, (rs1), "v0.t"   is nf & op2931=0x7 & op2828=0x0 & op2627=0x0 & op2525=0 & op2024=0x0 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsseg8e8_v(vs3,rs1,v0);}

define pcodeop vsm_v;
:vsm.v      vs3, (rs1)  is nf & op2828=0x0 & op2627=0x0 & op2024=0x0b & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsm_v(vs3,rs1);}

define pcodeop vsetvl;
# vsetvl       31=1 30..25=0x0 rs2 rs1 14..12=0x7 rd 6..0=0x57
# vsetvl  rd, rs1, rs2    # rd = new vl, rs1 = AVL, rs2 = new vtype value
:vsetvl   rd, rs1, rs2     is op3131=0x1 & op2530=0x0 & rs2 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvl(rs1,rs2);}

# The vset instructions set the vector context.  We can make that context more visible to the Ghidra user by adding specific
# encodings found in exemplar binaries

define pcodeop vsetvli;
define pcodeop vsetvli_e8m1tumu;
define pcodeop vsetvli_e8m2tumu;
define pcodeop vsetvli_e8m4tumu;
define pcodeop vsetvli_e8m8tumu;
define pcodeop vsetvli_e8mf8tumu;
define pcodeop vsetvli_e8mf4tumu;
define pcodeop vsetvli_e8mf2tumu;
define pcodeop vsetvli_e16m1tumu;
define pcodeop vsetvli_e16m2tumu;
define pcodeop vsetvli_e16m4tumu;
define pcodeop vsetvli_e16m8tumu;
define pcodeop vsetvli_e16mf8tumu;
define pcodeop vsetvli_e16mf4tumu;
define pcodeop vsetvli_e16mf2tumu;
define pcodeop vsetvli_e32m1tumu;
define pcodeop vsetvli_e32m2tumu;
define pcodeop vsetvli_e32m4tumu;
define pcodeop vsetvli_e32m8tumu;
define pcodeop vsetvli_e32mf8tumu;
define pcodeop vsetvli_e32mf4tumu;
define pcodeop vsetvli_e32mf2tumu;
define pcodeop vsetvli_e64m1tumu;
define pcodeop vsetvli_e64m2tumu;
define pcodeop vsetvli_e64m4tumu;
define pcodeop vsetvli_e64m8tumu;
define pcodeop vsetvli_e64mf8tumu;
define pcodeop vsetvli_e64mf4tumu;
define pcodeop vsetvli_e64mf2tumu;
define pcodeop vsetvli_e8m1tamu;
define pcodeop vsetvli_e8m2tamu;
define pcodeop vsetvli_e8m4tamu;
define pcodeop vsetvli_e8m8tamu;
define pcodeop vsetvli_e8mf8tamu;
define pcodeop vsetvli_e8mf4tamu;
define pcodeop vsetvli_e8mf2tamu;
define pcodeop vsetvli_e16m1tamu;
define pcodeop vsetvli_e16m2tamu;
define pcodeop vsetvli_e16m4tamu;
define pcodeop vsetvli_e16m8tamu;
define pcodeop vsetvli_e16mf8tamu;
define pcodeop vsetvli_e16mf4tamu;
define pcodeop vsetvli_e16mf2tamu;
define pcodeop vsetvli_e32m1tamu;
define pcodeop vsetvli_e32m2tamu;
define pcodeop vsetvli_e32m4tamu;
define pcodeop vsetvli_e32m8tamu;
define pcodeop vsetvli_e32mf8tamu;
define pcodeop vsetvli_e32mf4tamu;
define pcodeop vsetvli_e32mf2tamu;
define pcodeop vsetvli_e64m1tamu;
define pcodeop vsetvli_e64m2tamu;
define pcodeop vsetvli_e64m4tamu;
define pcodeop vsetvli_e64m8tamu;
define pcodeop vsetvli_e64mf8tamu;
define pcodeop vsetvli_e64mf4tamu;
define pcodeop vsetvli_e64mf2tamu;
define pcodeop vsetvli_e8m1tuma;
define pcodeop vsetvli_e8m2tuma;
define pcodeop vsetvli_e8m4tuma;
define pcodeop vsetvli_e8m8tuma;
define pcodeop vsetvli_e8mf8tuma;
define pcodeop vsetvli_e8mf4tuma;
define pcodeop vsetvli_e8mf2tuma;
define pcodeop vsetvli_e16m1tuma;
define pcodeop vsetvli_e16m2tuma;
define pcodeop vsetvli_e16m4tuma;
define pcodeop vsetvli_e16m8tuma;
define pcodeop vsetvli_e16mf8tuma;
define pcodeop vsetvli_e16mf4tuma;
define pcodeop vsetvli_e16mf2tuma;
define pcodeop vsetvli_e32m1tuma;
define pcodeop vsetvli_e32m2tuma;
define pcodeop vsetvli_e32m4tuma;
define pcodeop vsetvli_e32m8tuma;
define pcodeop vsetvli_e32mf8tuma;
define pcodeop vsetvli_e32mf4tuma;
define pcodeop vsetvli_e32mf2tuma;
define pcodeop vsetvli_e64m1tuma;
define pcodeop vsetvli_e64m2tuma;
define pcodeop vsetvli_e64m4tuma;
define pcodeop vsetvli_e64m8tuma;
define pcodeop vsetvli_e64mf8tuma;
define pcodeop vsetvli_e64mf4tuma;
define pcodeop vsetvli_e64mf2tuma;
define pcodeop vsetvli_e8m1tama;
define pcodeop vsetvli_e8m2tama;
define pcodeop vsetvli_e8m4tama;
define pcodeop vsetvli_e8m8tama;
define pcodeop vsetvli_e8mf8tama;
define pcodeop vsetvli_e8mf4tama;
define pcodeop vsetvli_e8mf2tama;
define pcodeop vsetvli_e16m1tama;
define pcodeop vsetvli_e16m2tama;
define pcodeop vsetvli_e16m4tama;
define pcodeop vsetvli_e16m8tama;
define pcodeop vsetvli_e16mf8tama;
define pcodeop vsetvli_e16mf4tama;
define pcodeop vsetvli_e16mf2tama;
define pcodeop vsetvli_e32m1tama;
define pcodeop vsetvli_e32m2tama;
define pcodeop vsetvli_e32m4tama;
define pcodeop vsetvli_e32m8tama;
define pcodeop vsetvli_e32mf8tama;
define pcodeop vsetvli_e32mf4tama;
define pcodeop vsetvli_e32mf2tama;
define pcodeop vsetvli_e64m1tama;
define pcodeop vsetvli_e64m2tama;
define pcodeop vsetvli_e64m4tama;
define pcodeop vsetvli_e64m8tama;
define pcodeop vsetvli_e64mf8tama;
define pcodeop vsetvli_e64mf4tama;
define pcodeop vsetvli_e64mf2tama;


# vsetvli      31=0 vtypei         rs1 14..12=0x7 rd 6..0=0x57
# vsetvli rd, rs1, vtypei # rd = new vl, rs1 = AVL, vtypei = new vtype setting

:vsetvli   rd, rs1, "e8,m1,tu,mu  " is op2030=0x0 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m1tumu(rs1);}
:vsetvli   rd, rs1, "e8,m2,tu,mu  " is op2030=0x1 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m2tumu(rs1);}
:vsetvli   rd, rs1, "e8,m4,tu,mu  " is op2030=0x2 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m4tumu(rs1);}
:vsetvli   rd, rs1, "e8,m8,tu,mu  " is op2030=0x3 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m8tumu(rs1);}
:vsetvli   rd, rs1, "e8,mf8,tu,mu " is op2030=0x5 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8mf8tumu(rs1);}
:vsetvli   rd, rs1, "e8,mf4,tu,mu " is op2030=0x6 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8mf4tumu(rs1);}
:vsetvli   rd, rs1, "e8,mf2,tu,mu " is op2030=0x7 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8mf2tumu(rs1);}
:vsetvli   rd, rs1, "e16,m1,tu,mu " is op2030=0x8 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m1tumu(rs1);}
:vsetvli   rd, rs1, "e16,m2,tu,mu " is op2030=0x9 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m2tumu(rs1);}
:vsetvli   rd, rs1, "e16,m4,tu,mu " is op2030=0xa & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m4tumu(rs1);}
:vsetvli   rd, rs1, "e16,m8,tu,mu " is op2030=0xb & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m8tumu(rs1);}
:vsetvli   rd, rs1, "e16,mf8,tu,mu" is op2030=0xd & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16mf8tumu(rs1);}
:vsetvli   rd, rs1, "e16,mf4,tu,mu" is op2030=0xe & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16mf4tumu(rs1);}
:vsetvli   rd, rs1, "e16,mf2,tu,mu" is op2030=0xf & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16mf2tumu(rs1);}
:vsetvli   rd, rs1, "e32,m1,tu,mu " is op2030=0x10 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m1tumu(rs1);}
:vsetvli   rd, rs1, "e32,m2,tu,mu " is op2030=0x11 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m2tumu(rs1);}
:vsetvli   rd, rs1, "e32,m4,tu,mu " is op2030=0x12 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m4tumu(rs1);}
:vsetvli   rd, rs1, "e32,m8,tu,mu " is op2030=0x13 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m8tumu(rs1);}
:vsetvli   rd, rs1, "e32,mf8,tu,mu" is op2030=0x15 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32mf8tumu(rs1);}
:vsetvli   rd, rs1, "e32,mf4,tu,mu" is op2030=0x16 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32mf4tumu(rs1);}
:vsetvli   rd, rs1, "e32,mf2,tu,mu" is op2030=0x17 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32mf2tumu(rs1);}
:vsetvli   rd, rs1, "e64,m1,tu,mu " is op2030=0x18 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m1tumu(rs1);}
:vsetvli   rd, rs1, "e64,m2,tu,mu " is op2030=0x19 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m2tumu(rs1);}
:vsetvli   rd, rs1, "e64,m4,tu,mu " is op2030=0x1a & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m4tumu(rs1);}
:vsetvli   rd, rs1, "e64,m8,tu,mu " is op2030=0x1b & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m8tumu(rs1);}
:vsetvli   rd, rs1, "e64,mf8,tu,mu" is op2030=0x1d & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64mf8tumu(rs1);}
:vsetvli   rd, rs1, "e64,mf4,tu,mu" is op2030=0x1e & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64mf4tumu(rs1);}
:vsetvli   rd, rs1, "e64,mf2,tu,mu" is op2030=0x1f & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64mf2tumu(rs1);}
:vsetvli   rd, rs1, "e8,m1,ta,mu  " is op2030=0x40 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m1tamu(rs1);}
:vsetvli   rd, rs1, "e8,m2,ta,mu  " is op2030=0x41 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m2tamu(rs1);}
:vsetvli   rd, rs1, "e8,m4,ta,mu  " is op2030=0x42 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m4tamu(rs1);}
:vsetvli   rd, rs1, "e8,m8,ta,mu  " is op2030=0x43 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m8tamu(rs1);}
:vsetvli   rd, rs1, "e8,mf8,ta,mu " is op2030=0x45 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8mf8tamu(rs1);}
:vsetvli   rd, rs1, "e8,mf4,ta,mu " is op2030=0x46 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8mf4tamu(rs1);}
:vsetvli   rd, rs1, "e8,mf2,ta,mu " is op2030=0x47 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8mf2tamu(rs1);}
:vsetvli   rd, rs1, "e16,m1,ta,mu " is op2030=0x48 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m1tamu(rs1);}
:vsetvli   rd, rs1, "e16,m2,ta,mu " is op2030=0x49 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m2tamu(rs1);}
:vsetvli   rd, rs1, "e16,m4,ta,mu " is op2030=0x4a & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m4tamu(rs1);}
:vsetvli   rd, rs1, "e16,m8,ta,mu " is op2030=0x4b & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m8tamu(rs1);}
:vsetvli   rd, rs1, "e16,mf8,ta,mu" is op2030=0x4d & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16mf8tamu(rs1);}
:vsetvli   rd, rs1, "e16,mf4,ta,mu" is op2030=0x4e & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16mf4tamu(rs1);}
:vsetvli   rd, rs1, "e16,mf2,ta,mu" is op2030=0x4f & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16mf2tamu(rs1);}
:vsetvli   rd, rs1, "e32,m1,ta,mu " is op2030=0x50 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m1tamu(rs1);}
:vsetvli   rd, rs1, "e32,m2,ta,mu " is op2030=0x51 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m2tamu(rs1);}
:vsetvli   rd, rs1, "e32,m4,ta,mu " is op2030=0x52 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m4tamu(rs1);}
:vsetvli   rd, rs1, "e32,m8,ta,mu " is op2030=0x53 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m8tamu(rs1);}
:vsetvli   rd, rs1, "e32,mf8,ta,mu" is op2030=0x55 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32mf8tamu(rs1);}
:vsetvli   rd, rs1, "e32,mf4,ta,mu" is op2030=0x56 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32mf4tamu(rs1);}
:vsetvli   rd, rs1, "e32,mf2,ta,mu" is op2030=0x57 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32mf2tamu(rs1);}
:vsetvli   rd, rs1, "e64,m1,ta,mu " is op2030=0x58 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m1tamu(rs1);}
:vsetvli   rd, rs1, "e64,m2,ta,mu " is op2030=0x59 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m2tamu(rs1);}
:vsetvli   rd, rs1, "e64,m4,ta,mu " is op2030=0x5a & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m4tamu(rs1);}
:vsetvli   rd, rs1, "e64,m8,ta,mu " is op2030=0x5b & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m8tamu(rs1);}
:vsetvli   rd, rs1, "e64,mf8,ta,mu" is op2030=0x5d & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64mf8tamu(rs1);}
:vsetvli   rd, rs1, "e64,mf4,ta,mu" is op2030=0x5e & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64mf4tamu(rs1);}
:vsetvli   rd, rs1, "e64,mf2,ta,mu" is op2030=0x5f & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64mf2tamu(rs1);}
:vsetvli   rd, rs1, "e8,m1,tu,ma  " is op2030=0x80 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m1tuma(rs1);}
:vsetvli   rd, rs1, "e8,m2,tu,ma  " is op2030=0x81 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m2tuma(rs1);}
:vsetvli   rd, rs1, "e8,m4,tu,ma  " is op2030=0x82 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m4tuma(rs1);}
:vsetvli   rd, rs1, "e8,m8,tu,ma  " is op2030=0x83 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m8tuma(rs1);}
:vsetvli   rd, rs1, "e8,mf8,tu,ma " is op2030=0x85 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8mf8tuma(rs1);}
:vsetvli   rd, rs1, "e8,mf4,tu,ma " is op2030=0x86 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8mf4tuma(rs1);}
:vsetvli   rd, rs1, "e8,mf2,tu,ma " is op2030=0x87 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8mf2tuma(rs1);}
:vsetvli   rd, rs1, "e16,m1,tu,ma " is op2030=0x88 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m1tuma(rs1);}
:vsetvli   rd, rs1, "e16,m2,tu,ma " is op2030=0x89 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m2tuma(rs1);}
:vsetvli   rd, rs1, "e16,m4,tu,ma " is op2030=0x8a & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m4tuma(rs1);}
:vsetvli   rd, rs1, "e16,m8,tu,ma " is op2030=0x8b & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m8tuma(rs1);}
:vsetvli   rd, rs1, "e16,mf8,tu,ma" is op2030=0x8d & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16mf8tuma(rs1);}
:vsetvli   rd, rs1, "e16,mf4,tu,ma" is op2030=0x8e & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16mf4tuma(rs1);}
:vsetvli   rd, rs1, "e16,mf2,tu,ma" is op2030=0x8f & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16mf2tuma(rs1);}
:vsetvli   rd, rs1, "e32,m1,tu,ma " is op2030=0x90 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m1tuma(rs1);}
:vsetvli   rd, rs1, "e32,m2,tu,ma " is op2030=0x91 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m2tuma(rs1);}
:vsetvli   rd, rs1, "e32,m4,tu,ma " is op2030=0x92 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m4tuma(rs1);}
:vsetvli   rd, rs1, "e32,m8,tu,ma " is op2030=0x93 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m8tuma(rs1);}
:vsetvli   rd, rs1, "e32,mf8,tu,ma" is op2030=0x95 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32mf8tuma(rs1);}
:vsetvli   rd, rs1, "e32,mf4,tu,ma" is op2030=0x96 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32mf4tuma(rs1);}
:vsetvli   rd, rs1, "e32,mf2,tu,ma" is op2030=0x97 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32mf2tuma(rs1);}
:vsetvli   rd, rs1, "e64,m1,tu,ma " is op2030=0x98 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m1tuma(rs1);}
:vsetvli   rd, rs1, "e64,m2,tu,ma " is op2030=0x99 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m2tuma(rs1);}
:vsetvli   rd, rs1, "e64,m4,tu,ma " is op2030=0x9a & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m4tuma(rs1);}
:vsetvli   rd, rs1, "e64,m8,tu,ma " is op2030=0x9b & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m8tuma(rs1);}
:vsetvli   rd, rs1, "e64,mf8,tu,ma" is op2030=0x9d & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64mf8tuma(rs1);}
:vsetvli   rd, rs1, "e64,mf4,tu,ma" is op2030=0x9e & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64mf4tuma(rs1);}
:vsetvli   rd, rs1, "e64,mf2,tu,ma" is op2030=0x9f & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64mf2tuma(rs1);}
:vsetvli   rd, rs1, "e8,m1,ta,ma  " is op2030=0xc0 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m1tama(rs1);}
:vsetvli   rd, rs1, "e8,m2,ta,ma  " is op2030=0xc1 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m2tama(rs1);}
:vsetvli   rd, rs1, "e8,m4,ta,ma  " is op2030=0xc2 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m4tama(rs1);}
:vsetvli   rd, rs1, "e8,m8,ta,ma  " is op2030=0xc3 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8m8tama(rs1);}
:vsetvli   rd, rs1, "e8,mf8,ta,ma " is op2030=0xc5 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8mf8tama(rs1);}
:vsetvli   rd, rs1, "e8,mf4,ta,ma " is op2030=0xc6 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8mf4tama(rs1);}
:vsetvli   rd, rs1, "e8,mf2,ta,ma " is op2030=0xc7 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e8mf2tama(rs1);}
:vsetvli   rd, rs1, "e16,m1,ta,ma " is op2030=0xc8 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m1tama(rs1);}
:vsetvli   rd, rs1, "e16,m2,ta,ma " is op2030=0xc9 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m2tama(rs1);}
:vsetvli   rd, rs1, "e16,m4,ta,ma " is op2030=0xca & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m4tama(rs1);}
:vsetvli   rd, rs1, "e16,m8,ta,ma " is op2030=0xcb & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16m8tama(rs1);}
:vsetvli   rd, rs1, "e16,mf8,ta,ma" is op2030=0xcd & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16mf8tama(rs1);}
:vsetvli   rd, rs1, "e16,mf4,ta,ma" is op2030=0xce & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16mf4tama(rs1);}
:vsetvli   rd, rs1, "e16,mf2,ta,ma" is op2030=0xcf & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e16mf2tama(rs1);}
:vsetvli   rd, rs1, "e32,m1,ta,ma " is op2030=0xd0 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m1tama(rs1);}
:vsetvli   rd, rs1, "e32,m2,ta,ma " is op2030=0xd1 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m2tama(rs1);}
:vsetvli   rd, rs1, "e32,m4,ta,ma " is op2030=0xd2 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m4tama(rs1);}
:vsetvli   rd, rs1, "e32,m8,ta,ma " is op2030=0xd3 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32m8tama(rs1);}
:vsetvli   rd, rs1, "e32,mf8,ta,ma" is op2030=0xd5 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32mf8tama(rs1);}
:vsetvli   rd, rs1, "e32,mf4,ta,ma" is op2030=0xd6 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32mf4tama(rs1);}
:vsetvli   rd, rs1, "e32,mf2,ta,ma" is op2030=0xd7 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e32mf2tama(rs1);}
:vsetvli   rd, rs1, "e64,m1,ta,ma " is op2030=0xd8 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m1tama(rs1);}
:vsetvli   rd, rs1, "e64,m2,ta,ma " is op2030=0xd9 & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m2tama(rs1);}
:vsetvli   rd, rs1, "e64,m4,ta,ma " is op2030=0xda & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m4tama(rs1);}
:vsetvli   rd, rs1, "e64,m8,ta,ma " is op2030=0xdb & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64m8tama(rs1);}
:vsetvli   rd, rs1, "e64,mf8,ta,ma" is op2030=0xdd & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64mf8tama(rs1);}
:vsetvli   rd, rs1, "e64,mf4,ta,ma" is op2030=0xde & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64mf4tama(rs1);}
:vsetvli   rd, rs1, "e64,mf2,ta,ma" is op2030=0xdf & op3131=0x0 & rs1 & op1214=0x7 & rd & op0006=0x57 {rd=vsetvli_e64mf2tama(rs1);}

:vsetvli   rd, rs1, vtypei        is op3131=0x0 & vtypei & rs1 & op1214=0x7 & rd & op0006=0x57      {rd=vsetvli(rs1,vtypei);}

define pcodeop vsetivli;
define pcodeop vsetivli_e8m1tumu;
define pcodeop vsetivli_e8m2tumu;
define pcodeop vsetivli_e8m4tumu;
define pcodeop vsetivli_e8m8tumu;
define pcodeop vsetivli_e8mf8tumu;
define pcodeop vsetivli_e8mf4tumu;
define pcodeop vsetivli_e8mf2tumu;
define pcodeop vsetivli_e16m1tumu;
define pcodeop vsetivli_e16m2tumu;
define pcodeop vsetivli_e16m4tumu;
define pcodeop vsetivli_e16m8tumu;
define pcodeop vsetivli_e16mf8tumu;
define pcodeop vsetivli_e16mf4tumu;
define pcodeop vsetivli_e16mf2tumu;
define pcodeop vsetivli_e32m1tumu;
define pcodeop vsetivli_e32m2tumu;
define pcodeop vsetivli_e32m4tumu;
define pcodeop vsetivli_e32m8tumu;
define pcodeop vsetivli_e32mf8tumu;
define pcodeop vsetivli_e32mf4tumu;
define pcodeop vsetivli_e32mf2tumu;
define pcodeop vsetivli_e64m1tumu;
define pcodeop vsetivli_e64m2tumu;
define pcodeop vsetivli_e64m4tumu;
define pcodeop vsetivli_e64m8tumu;
define pcodeop vsetivli_e64mf8tumu;
define pcodeop vsetivli_e64mf4tumu;
define pcodeop vsetivli_e64mf2tumu;
define pcodeop vsetivli_e8m1tamu;
define pcodeop vsetivli_e8m2tamu;
define pcodeop vsetivli_e8m4tamu;
define pcodeop vsetivli_e8m8tamu;
define pcodeop vsetivli_e8mf8tamu;
define pcodeop vsetivli_e8mf4tamu;
define pcodeop vsetivli_e8mf2tamu;
define pcodeop vsetivli_e16m1tamu;
define pcodeop vsetivli_e16m2tamu;
define pcodeop vsetivli_e16m4tamu;
define pcodeop vsetivli_e16m8tamu;
define pcodeop vsetivli_e16mf8tamu;
define pcodeop vsetivli_e16mf4tamu;
define pcodeop vsetivli_e16mf2tamu;
define pcodeop vsetivli_e32m1tamu;
define pcodeop vsetivli_e32m2tamu;
define pcodeop vsetivli_e32m4tamu;
define pcodeop vsetivli_e32m8tamu;
define pcodeop vsetivli_e32mf8tamu;
define pcodeop vsetivli_e32mf4tamu;
define pcodeop vsetivli_e32mf2tamu;
define pcodeop vsetivli_e64m1tamu;
define pcodeop vsetivli_e64m2tamu;
define pcodeop vsetivli_e64m4tamu;
define pcodeop vsetivli_e64m8tamu;
define pcodeop vsetivli_e64mf8tamu;
define pcodeop vsetivli_e64mf4tamu;
define pcodeop vsetivli_e64mf2tamu;
define pcodeop vsetivli_e8m1tuma;
define pcodeop vsetivli_e8m2tuma;
define pcodeop vsetivli_e8m4tuma;
define pcodeop vsetivli_e8m8tuma;
define pcodeop vsetivli_e8mf8tuma;
define pcodeop vsetivli_e8mf4tuma;
define pcodeop vsetivli_e8mf2tuma;
define pcodeop vsetivli_e16m1tuma;
define pcodeop vsetivli_e16m2tuma;
define pcodeop vsetivli_e16m4tuma;
define pcodeop vsetivli_e16m8tuma;
define pcodeop vsetivli_e16mf8tuma;
define pcodeop vsetivli_e16mf4tuma;
define pcodeop vsetivli_e16mf2tuma;
define pcodeop vsetivli_e32m1tuma;
define pcodeop vsetivli_e32m2tuma;
define pcodeop vsetivli_e32m4tuma;
define pcodeop vsetivli_e32m8tuma;
define pcodeop vsetivli_e32mf8tuma;
define pcodeop vsetivli_e32mf4tuma;
define pcodeop vsetivli_e32mf2tuma;
define pcodeop vsetivli_e64m1tuma;
define pcodeop vsetivli_e64m2tuma;
define pcodeop vsetivli_e64m4tuma;
define pcodeop vsetivli_e64m8tuma;
define pcodeop vsetivli_e64mf8tuma;
define pcodeop vsetivli_e64mf4tuma;
define pcodeop vsetivli_e64mf2tuma;
define pcodeop vsetivli_e8m1tama;
define pcodeop vsetivli_e8m2tama;
define pcodeop vsetivli_e8m4tama;
define pcodeop vsetivli_e8m8tama;
define pcodeop vsetivli_e8mf8tama;
define pcodeop vsetivli_e8mf4tama;
define pcodeop vsetivli_e8mf2tama;
define pcodeop vsetivli_e16m1tama;
define pcodeop vsetivli_e16m2tama;
define pcodeop vsetivli_e16m4tama;
define pcodeop vsetivli_e16m8tama;
define pcodeop vsetivli_e16mf8tama;
define pcodeop vsetivli_e16mf4tama;
define pcodeop vsetivli_e16mf2tama;
define pcodeop vsetivli_e32m1tama;
define pcodeop vsetivli_e32m2tama;
define pcodeop vsetivli_e32m4tama;
define pcodeop vsetivli_e32m8tama;
define pcodeop vsetivli_e32mf8tama;
define pcodeop vsetivli_e32mf4tama;
define pcodeop vsetivli_e32mf2tama;
define pcodeop vsetivli_e64m1tama;
define pcodeop vsetivli_e64m2tama;
define pcodeop vsetivli_e64m4tama;
define pcodeop vsetivli_e64m8tama;
define pcodeop vsetivli_e64mf8tama;
define pcodeop vsetivli_e64mf4tama;
define pcodeop vsetivli_e64mf2tama;

# vsetivli      31=1 vtypei         rs1 14..12=0x7 rd 6..0=0x57
:vsetivli  rd, op1519, "e8,m1,tu,mu  " is op3031=0x3 & op2029=0x0 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m1tumu(op1519:5);}
:vsetivli  rd, op1519, "e8,m2,tu,mu  " is op3031=0x3 & op2029=0x1 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m2tumu(op1519:5);}
:vsetivli  rd, op1519, "e8,m4,tu,mu  " is op3031=0x3 & op2029=0x2 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m4tumu(op1519:5);}
:vsetivli  rd, op1519, "e8,m8,tu,mu  " is op3031=0x3 & op2029=0x3 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m8tumu(op1519:5);}
:vsetivli  rd, op1519, "e8,mf8,tu,mu " is op3031=0x3 & op2029=0x5 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8mf8tumu(op1519:5);}
:vsetivli  rd, op1519, "e8,mf4,tu,mu " is op3031=0x3 & op2029=0x6 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8mf4tumu(op1519:5);}
:vsetivli  rd, op1519, "e8,mf2,tu,mu " is op3031=0x3 & op2029=0x7 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8mf2tumu(op1519:5);}
:vsetivli  rd, op1519, "e16,m1,tu,mu " is op3031=0x3 & op2029=0x8 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m1tumu(op1519:5);}
:vsetivli  rd, op1519, "e16,m2,tu,mu " is op3031=0x3 & op2029=0x9 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m2tumu(op1519:5);}
:vsetivli  rd, op1519, "e16,m4,tu,mu " is op3031=0x3 & op2029=0xa & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m4tumu(op1519:5);}
:vsetivli  rd, op1519, "e16,m8,tu,mu " is op3031=0x3 & op2029=0xb & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m8tumu(op1519:5);}
:vsetivli  rd, op1519, "e16,mf8,tu,mu" is op3031=0x3 & op2029=0xd & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16mf8tumu(op1519:5);}
:vsetivli  rd, op1519, "e16,mf4,tu,mu" is op3031=0x3 & op2029=0xe & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16mf4tumu(op1519:5);}
:vsetivli  rd, op1519, "e16,mf2,tu,mu" is op3031=0x3 & op2029=0xf & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16mf2tumu(op1519:5);}
:vsetivli  rd, op1519, "e32,m1,tu,mu " is op3031=0x3 & op2029=0x10 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m1tumu(op1519:5);}
:vsetivli  rd, op1519, "e32,m2,tu,mu " is op3031=0x3 & op2029=0x11 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m2tumu(op1519:5);}
:vsetivli  rd, op1519, "e32,m4,tu,mu " is op3031=0x3 & op2029=0x12 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m4tumu(op1519:5);}
:vsetivli  rd, op1519, "e32,m8,tu,mu " is op3031=0x3 & op2029=0x13 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m8tumu(op1519:5);}
:vsetivli  rd, op1519, "e32,mf8,tu,mu" is op3031=0x3 & op2029=0x15 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32mf8tumu(op1519:5);}
:vsetivli  rd, op1519, "e32,mf4,tu,mu" is op3031=0x3 & op2029=0x16 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32mf4tumu(op1519:5);}
:vsetivli  rd, op1519, "e32,mf2,tu,mu" is op3031=0x3 & op2029=0x17 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32mf2tumu(op1519:5);}
:vsetivli  rd, op1519, "e64,m1,tu,mu " is op3031=0x3 & op2029=0x18 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m1tumu(op1519:5);}
:vsetivli  rd, op1519, "e64,m2,tu,mu " is op3031=0x3 & op2029=0x19 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m2tumu(op1519:5);}
:vsetivli  rd, op1519, "e64,m4,tu,mu " is op3031=0x3 & op2029=0x1a & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m4tumu(op1519:5);}
:vsetivli  rd, op1519, "e64,m8,tu,mu " is op3031=0x3 & op2029=0x1b & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m8tumu(op1519:5);}
:vsetivli  rd, op1519, "e64,mf8,tu,mu" is op3031=0x3 & op2029=0x1d & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64mf8tumu(op1519:5);}
:vsetivli  rd, op1519, "e64,mf4,tu,mu" is op3031=0x3 & op2029=0x1e & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64mf4tumu(op1519:5);}
:vsetivli  rd, op1519, "e64,mf2,tu,mu" is op3031=0x3 & op2029=0x1f & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64mf2tumu(op1519:5);}
:vsetivli  rd, op1519, "e8,m1,ta,mu  " is op3031=0x3 & op2029=0x40 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m1tamu(op1519:5);}
:vsetivli  rd, op1519, "e8,m2,ta,mu  " is op3031=0x3 & op2029=0x41 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m2tamu(op1519:5);}
:vsetivli  rd, op1519, "e8,m4,ta,mu  " is op3031=0x3 & op2029=0x42 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m4tamu(op1519:5);}
:vsetivli  rd, op1519, "e8,m8,ta,mu  " is op3031=0x3 & op2029=0x43 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m8tamu(op1519:5);}
:vsetivli  rd, op1519, "e8,mf8,ta,mu " is op3031=0x3 & op2029=0x45 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8mf8tamu(op1519:5);}
:vsetivli  rd, op1519, "e8,mf4,ta,mu " is op3031=0x3 & op2029=0x46 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8mf4tamu(op1519:5);}
:vsetivli  rd, op1519, "e8,mf2,ta,mu " is op3031=0x3 & op2029=0x47 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8mf2tamu(op1519:5);}
:vsetivli  rd, op1519, "e16,m1,ta,mu " is op3031=0x3 & op2029=0x48 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m1tamu(op1519:5);}
:vsetivli  rd, op1519, "e16,m2,ta,mu " is op3031=0x3 & op2029=0x49 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m2tamu(op1519:5);}
:vsetivli  rd, op1519, "e16,m4,ta,mu " is op3031=0x3 & op2029=0x4a & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m4tamu(op1519:5);}
:vsetivli  rd, op1519, "e16,m8,ta,mu " is op3031=0x3 & op2029=0x4b & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m8tamu(op1519:5);}
:vsetivli  rd, op1519, "e16,mf8,ta,mu" is op3031=0x3 & op2029=0x4d & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16mf8tamu(op1519:5);}
:vsetivli  rd, op1519, "e16,mf4,ta,mu" is op3031=0x3 & op2029=0x4e & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16mf4tamu(op1519:5);}
:vsetivli  rd, op1519, "e16,mf2,ta,mu" is op3031=0x3 & op2029=0x4f & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16mf2tamu(op1519:5);}
:vsetivli  rd, op1519, "e32,m1,ta,mu " is op3031=0x3 & op2029=0x50 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m1tamu(op1519:5);}
:vsetivli  rd, op1519, "e32,m2,ta,mu " is op3031=0x3 & op2029=0x51 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m2tamu(op1519:5);}
:vsetivli  rd, op1519, "e32,m4,ta,mu " is op3031=0x3 & op2029=0x52 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m4tamu(op1519:5);}
:vsetivli  rd, op1519, "e32,m8,ta,mu " is op3031=0x3 & op2029=0x53 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m8tamu(op1519:5);}
:vsetivli  rd, op1519, "e32,mf8,ta,mu" is op3031=0x3 & op2029=0x55 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32mf8tamu(op1519:5);}
:vsetivli  rd, op1519, "e32,mf4,ta,mu" is op3031=0x3 & op2029=0x56 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32mf4tamu(op1519:5);}
:vsetivli  rd, op1519, "e32,mf2,ta,mu" is op3031=0x3 & op2029=0x57 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32mf2tamu(op1519:5);}
:vsetivli  rd, op1519, "e64,m1,ta,mu " is op3031=0x3 & op2029=0x58 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m1tamu(op1519:5);}
:vsetivli  rd, op1519, "e64,m2,ta,mu " is op3031=0x3 & op2029=0x59 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m2tamu(op1519:5);}
:vsetivli  rd, op1519, "e64,m4,ta,mu " is op3031=0x3 & op2029=0x5a & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m4tamu(op1519:5);}
:vsetivli  rd, op1519, "e64,m8,ta,mu " is op3031=0x3 & op2029=0x5b & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m8tamu(op1519:5);}
:vsetivli  rd, op1519, "e64,mf8,ta,mu" is op3031=0x3 & op2029=0x5d & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64mf8tamu(op1519:5);}
:vsetivli  rd, op1519, "e64,mf4,ta,mu" is op3031=0x3 & op2029=0x5e & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64mf4tamu(op1519:5);}
:vsetivli  rd, op1519, "e64,mf2,ta,mu" is op3031=0x3 & op2029=0x5f & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64mf2tamu(op1519:5);}
:vsetivli  rd, op1519, "e8,m1,tu,ma  " is op3031=0x3 & op2029=0x80 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m1tuma(op1519:5);}
:vsetivli  rd, op1519, "e8,m2,tu,ma  " is op3031=0x3 & op2029=0x81 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m2tuma(op1519:5);}
:vsetivli  rd, op1519, "e8,m4,tu,ma  " is op3031=0x3 & op2029=0x82 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m4tuma(op1519:5);}
:vsetivli  rd, op1519, "e8,m8,tu,ma  " is op3031=0x3 & op2029=0x83 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m8tuma(op1519:5);}
:vsetivli  rd, op1519, "e8,mf8,tu,ma " is op3031=0x3 & op2029=0x85 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8mf8tuma(op1519:5);}
:vsetivli  rd, op1519, "e8,mf4,tu,ma " is op3031=0x3 & op2029=0x86 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8mf4tuma(op1519:5);}
:vsetivli  rd, op1519, "e8,mf2,tu,ma " is op3031=0x3 & op2029=0x87 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8mf2tuma(op1519:5);}
:vsetivli  rd, op1519, "e16,m1,tu,ma " is op3031=0x3 & op2029=0x88 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m1tuma(op1519:5);}
:vsetivli  rd, op1519, "e16,m2,tu,ma " is op3031=0x3 & op2029=0x89 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m2tuma(op1519:5);}
:vsetivli  rd, op1519, "e16,m4,tu,ma " is op3031=0x3 & op2029=0x8a & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m4tuma(op1519:5);}
:vsetivli  rd, op1519, "e16,m8,tu,ma " is op3031=0x3 & op2029=0x8b & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m8tuma(op1519:5);}
:vsetivli  rd, op1519, "e16,mf8,tu,ma" is op3031=0x3 & op2029=0x8d & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16mf8tuma(op1519:5);}
:vsetivli  rd, op1519, "e16,mf4,tu,ma" is op3031=0x3 & op2029=0x8e & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16mf4tuma(op1519:5);}
:vsetivli  rd, op1519, "e16,mf2,tu,ma" is op3031=0x3 & op2029=0x8f & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16mf2tuma(op1519:5);}
:vsetivli  rd, op1519, "e32,m1,tu,ma " is op3031=0x3 & op2029=0x90 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m1tuma(op1519:5);}
:vsetivli  rd, op1519, "e32,m2,tu,ma " is op3031=0x3 & op2029=0x91 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m2tuma(op1519:5);}
:vsetivli  rd, op1519, "e32,m4,tu,ma " is op3031=0x3 & op2029=0x92 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m4tuma(op1519:5);}
:vsetivli  rd, op1519, "e32,m8,tu,ma " is op3031=0x3 & op2029=0x93 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m8tuma(op1519:5);}
:vsetivli  rd, op1519, "e32,mf8,tu,ma" is op3031=0x3 & op2029=0x95 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32mf8tuma(op1519:5);}
:vsetivli  rd, op1519, "e32,mf4,tu,ma" is op3031=0x3 & op2029=0x96 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32mf4tuma(op1519:5);}
:vsetivli  rd, op1519, "e32,mf2,tu,ma" is op3031=0x3 & op2029=0x97 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32mf2tuma(op1519:5);}
:vsetivli  rd, op1519, "e64,m1,tu,ma " is op3031=0x3 & op2029=0x98 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m1tuma(op1519:5);}
:vsetivli  rd, op1519, "e64,m2,tu,ma " is op3031=0x3 & op2029=0x99 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m2tuma(op1519:5);}
:vsetivli  rd, op1519, "e64,m4,tu,ma " is op3031=0x3 & op2029=0x9a & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m4tuma(op1519:5);}
:vsetivli  rd, op1519, "e64,m8,tu,ma " is op3031=0x3 & op2029=0x9b & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m8tuma(op1519:5);}
:vsetivli  rd, op1519, "e64,mf8,tu,ma" is op3031=0x3 & op2029=0x9d & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64mf8tuma(op1519:5);}
:vsetivli  rd, op1519, "e64,mf4,tu,ma" is op3031=0x3 & op2029=0x9e & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64mf4tuma(op1519:5);}
:vsetivli  rd, op1519, "e64,mf2,tu,ma" is op3031=0x3 & op2029=0x9f & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64mf2tuma(op1519:5);}
:vsetivli  rd, op1519, "e8,m1,ta,ma  " is op3031=0x3 & op2029=0xc0 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m1tama(op1519:5);}
:vsetivli  rd, op1519, "e8,m2,ta,ma  " is op3031=0x3 & op2029=0xc1 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m2tama(op1519:5);}
:vsetivli  rd, op1519, "e8,m4,ta,ma  " is op3031=0x3 & op2029=0xc2 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m4tama(op1519:5);}
:vsetivli  rd, op1519, "e8,m8,ta,ma  " is op3031=0x3 & op2029=0xc3 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8m8tama(op1519:5);}
:vsetivli  rd, op1519, "e8,mf8,ta,ma " is op3031=0x3 & op2029=0xc5 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8mf8tama(op1519:5);}
:vsetivli  rd, op1519, "e8,mf4,ta,ma " is op3031=0x3 & op2029=0xc6 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8mf4tama(op1519:5);}
:vsetivli  rd, op1519, "e8,mf2,ta,ma " is op3031=0x3 & op2029=0xc7 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e8mf2tama(op1519:5);}
:vsetivli  rd, op1519, "e16,m1,ta,ma " is op3031=0x3 & op2029=0xc8 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m1tama(op1519:5);}
:vsetivli  rd, op1519, "e16,m2,ta,ma " is op3031=0x3 & op2029=0xc9 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m2tama(op1519:5);}
:vsetivli  rd, op1519, "e16,m4,ta,ma " is op3031=0x3 & op2029=0xca & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m4tama(op1519:5);}
:vsetivli  rd, op1519, "e16,m8,ta,ma " is op3031=0x3 & op2029=0xcb & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16m8tama(op1519:5);}
:vsetivli  rd, op1519, "e16,mf8,ta,ma" is op3031=0x3 & op2029=0xcd & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16mf8tama(op1519:5);}
:vsetivli  rd, op1519, "e16,mf4,ta,ma" is op3031=0x3 & op2029=0xce & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16mf4tama(op1519:5);}
:vsetivli  rd, op1519, "e16,mf2,ta,ma" is op3031=0x3 & op2029=0xcf & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e16mf2tama(op1519:5);}
:vsetivli  rd, op1519, "e32,m1,ta,ma " is op3031=0x3 & op2029=0xd0 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m1tama(op1519:5);}
:vsetivli  rd, op1519, "e32,m2,ta,ma " is op3031=0x3 & op2029=0xd1 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m2tama(op1519:5);}
:vsetivli  rd, op1519, "e32,m4,ta,ma " is op3031=0x3 & op2029=0xd2 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m4tama(op1519:5);}
:vsetivli  rd, op1519, "e32,m8,ta,ma " is op3031=0x3 & op2029=0xd3 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32m8tama(op1519:5);}
:vsetivli  rd, op1519, "e32,mf8,ta,ma" is op3031=0x3 & op2029=0xd5 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32mf8tama(op1519:5);}
:vsetivli  rd, op1519, "e32,mf4,ta,ma" is op3031=0x3 & op2029=0xd6 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32mf4tama(op1519:5);}
:vsetivli  rd, op1519, "e32,mf2,ta,ma" is op3031=0x3 & op2029=0xd7 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e32mf2tama(op1519:5);}
:vsetivli  rd, op1519, "e64,m1,ta,ma " is op3031=0x3 & op2029=0xd8 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m1tama(op1519:5);}
:vsetivli  rd, op1519, "e64,m2,ta,ma " is op3031=0x3 & op2029=0xd9 & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m2tama(op1519:5);}
:vsetivli  rd, op1519, "e64,m4,ta,ma " is op3031=0x3 & op2029=0xda & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m4tama(op1519:5);}
:vsetivli  rd, op1519, "e64,m8,ta,ma " is op3031=0x3 & op2029=0xdb & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64m8tama(op1519:5);}
:vsetivli  rd, op1519, "e64,mf8,ta,ma" is op3031=0x3 & op2029=0xdd & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64mf8tama(op1519:5);}
:vsetivli  rd, op1519, "e64,mf4,ta,ma" is op3031=0x3 & op2029=0xde & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64mf4tama(op1519:5);}
:vsetivli  rd, op1519, "e64,mf2,ta,ma" is op3031=0x3 & op2029=0xdf & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli_e64mf2tama(op1519:5);}

:vsetivli  rd, op1519, op2029        is op3031=0x3 & op2029      & op1519 & op1214=0x7 & rd & op0006=0x57 {rd=vsetivli(op1519:5,op2029:10);}

define pcodeop vsext_vf2;
# vsext.vf2      31..26=0x12 vm vs2 19..15=7 14..12=0x2 vd 6..0=0x57
# vsext.vf2 vd, vs2, vm  # Sign-extend SEW/2 source to SEW destination
:vsext.vf2  vd, vs2         is op2631=0x12 & op2525=1 & vs2 & op1519=0x7 & op1214=0x2 & vd & op0006=0x57 {vd=vsext_vf2(vs2);}
:vsext.vf2  vd, vs2, "v0.t" is op2631=0x12 & op2525=0 & vs2 & op1519=0x7 & op1214=0x2 & vd & op0006=0x57 {vd=vsext_vf2(vs2,v0);}

define pcodeop vsext_vf4;
# vsext.vf4      31..26=0x12 vm vs2 19..15=5 14..12=0x2 vd 6..0=0x57
# vsext.vf4 vd, vs2, vm  # Sign-extend SEW/4 source to SEW destination
:vsext.vf4  vd, vs2         is op2631=0x12 & op2525=1 & vs2 & op1519=0x5 & op1214=0x2 & vd & op0006=0x57 {vd=vsext_vf4(vs2);}
:vsext.vf4  vd, vs2, "v0.t" is op2631=0x12 & op2525=0 & vs2 & op1519=0x5 & op1214=0x2 & vd & op0006=0x57 {vd=vsext_vf4(vs2,v0);}

define pcodeop vsext_vf8;
# vsext.vf8      31..26=0x12 vm vs2 19..15=3 14..12=0x2 vd 6..0=0x57
# vsext.vf8 vd, vs2, vm  # Sign-extend SEW/8 source to SEW destination
:vsext.vf8  vd, vs2         is op2631=0x12 & op2525=1 & vs2 & op1519=0x3 & op1214=0x2 & vd & op0006=0x57 {vd=vsext_vf8(vs2);}
:vsext.vf8  vd, vs2, "v0.t" is op2631=0x12 & op2525=0 & vs2 & op1519=0x3 & op1214=0x2 & vd & op0006=0x57 {vd=vsext_vf8(vs2,v0);}

define pcodeop vslide1down_vx;
# vslide1down.vx 31..26=0x0f vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vslide1down.vx  vd, vs2, rs1, vm      # vd[i] = vs2[i+1], vd[vl-1]=x[rs1]
:vslide1down.vx   vd, vs2, rs1         is op2631=0xf & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vslide1down_vx(vs2,rs1);}
:vslide1down.vx   vd, vs2, rs1, "v0.t" is op2631=0xf & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vslide1down_vx(vs2,rs1,v0);}

define pcodeop vslide1up_vx;
# vslide1up.vx   31..26=0x0e vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vslide1up.vx  vd, vs2, rs1, vm        # vd[0]=x[rs1], vd[i+1] = vs2[i]
:vslide1up.vx   vd, vs2, rs1         is op2631=0xe & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vslide1up_vx(vs2,rs1);}
:vslide1up.vx   vd, vs2, rs1, "v0.t" is op2631=0xe & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vslide1up_vx(vs2,rs1,v0);}

define pcodeop vslidedown_vi;
# vslidedown.vi  31..26=0x0f vm vs2 uimm5 14..12=0x3 vd 6..0=0x57
# vslidedown.vi vd, vs2, uimm5, vm # vd[i] = vs2[i+uimm]
:vslidedown.vi  vd, vs2, uimm5         is op2631=0xf & op2525=1 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vslidedown_vi(vs2,uimm5);}
:vslidedown.vi  vd, vs2, uimm5, "v0.t" is op2631=0xf & op2525=0 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vslidedown_vi(vs2,uimm5,v0);}

define pcodeop vslidedown_vx;
# vslidedown.vx  31..26=0x0f vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vslidedown.vx vd, vs2, rs1, vm       # vd[i] = vs2[i+rs1]
:vslidedown.vx  vd, vs2, rs1         is op2631=0xf & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vslidedown_vx(vs2,rs1);}
:vslidedown.vx  vd, vs2, rs1, "v0.t" is op2631=0xf & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vslidedown_vx(vs2,rs1,v0);}

define pcodeop vslideup_vi;
# vslideup.vi    31..26=0x0e vm vs2 uimm5 14..12=0x3 vd 6..0=0x57
# vslideup.vi vd, vs2, uimm5, vm  # vd[i+uimm] = vs2[i]
:vslideup.vi  vd, vs2, uimm5         is op2631=0xe & op2525=1 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vslideup_vi(vs2,uimm5);}
:vslideup.vi  vd, vs2, uimm5, "v0.t" is op2631=0xe & op2525=0 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vslideup_vi(vs2,uimm5,v0);}

define pcodeop vslideup_vx;
# vslideup.vx    31..26=0x0e vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vslideup.vx vd, vs2, rs1, vm        # vd[i+rs1] = vs2[i]
:vslideup.vx  vd, vs2, rs1         is op2631=0xe & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vslideup_vx(vs2,rs1);}
:vslideup.vx  vd, vs2, rs1, "v0.t" is op2631=0xe & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vslideup_vx(vs2,rs1,v0);}

define pcodeop vsll_vi;
# vsll.vi        31..26=0x25 vm vs2 uimm5 14..12=0x3 vd 6..0=0x57
# vsll.vi vd, vs2, uimm5, vm   # vector-immediate
:vsll.vi  vd, vs2, uimm5         is op2631=0x25 & op2525=1 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vsll_vi(vs2,uimm5);}
:vsll.vi  vd, vs2, uimm5, "v0.t" is op2631=0x25 & op2525=0 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vsll_vi(vs2,uimm5,v0);}

define pcodeop vsll_vv;
# vsll.vv        31..26=0x25 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vsll.vv vd, vs2, vs1, vm   # Vector-vector
:vsll.vv  vd, vs2, vs1         is op2631=0x25 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vsll_vv(vs2,vs1);}
:vsll.vv  vd, vs2, vs1, "v0.t" is op2631=0x25 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vsll_vv(vs2,vs1,v0);}

define pcodeop vsll_vx;
# vsll.vx        31..26=0x25 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vsll.vx vd, vs2, rs1, vm   # vector-scalar
:vsll.vx  vd, vs2, rs1         is op2631=0x25 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vsll_vx(vs2,rs1);}
:vsll.vx  vd, vs2, rs1, "v0.t" is op2631=0x25 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vsll_vx(vs2,rs1,v0);}

define pcodeop vsmul_vv;
# vsmul.vv       31..26=0x27 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vsmul.vv vd, vs2, vs1, vm  # vd[i] = clip(roundoff_signed(vs2[i]*vs1[i], SEW-1))
:vsmul.vv  vd, vs2, vs1         is op2631=0x27 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vsmul_vv(vs2,vs1);}
:vsmul.vv  vd, vs2, vs1, "v0.t" is op2631=0x27 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vsmul_vv(vs2,vs1,v0);}

define pcodeop vsmul_vx;
# vsmul.vx       31..26=0x27 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vsmul.vx vd, vs2, rs1, vm  # vd[i] = clip(roundoff_signed(vs2[i]*x[rs1], SEW-1))
:vsmul.vx  vd, vs2, rs1         is op2631=0x27 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vsmul_vx(vs2,rs1);}
:vsmul.vx  vd, vs2, rs1, "v0.t" is op2631=0x27 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vsmul_vx(vs2,rs1,v0);}

define pcodeop vsra_vi;
# vsra.vi        31..26=0x29 vm vs2 uimm5 14..12=0x3 vd 6..0=0x57
# vsra.vi vd, vs2, uimm5, vm   # vector-immediate
:vsra.vi  vd, vs2, uimm5         is op2631=0x29 & op2525=1 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vsra_vi(vs2,uimm5);}
:vsra.vi  vd, vs2, uimm5, "v0.t" is op2631=0x29 & op2525=0 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vsra_vi(vs2,uimm5,v0);}

define pcodeop vsra_vv;
# vsra.vv        31..26=0x29 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vsra.vv vd, vs2, vs1, vm   # Vector-vector
:vsra.vv  vd, vs2, vs1         is op2631=0x29 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vsra_vv(vs2,vs1);}
:vsra.vv  vd, vs2, vs1, "v0.t" is op2631=0x29 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vsra_vv(vs2,vs1,v0);}

define pcodeop vsra_vx;
# vsra.vx        31..26=0x29 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vsra.vx vd, vs2, rs1, vm   # vector-scalar
:vsra.vx  vd, vs2, rs1         is op2631=0x29 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vsra_vx(vs2,rs1);}
:vsra.vx  vd, vs2, rs1, "v0.t" is op2631=0x29 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vsra_vx(vs2,rs1,v0);}

define pcodeop vsrl_vi;
# vsrl.vi        31..26=0x28 vm vs2 uimm5 14..12=0x3 vd 6..0=0x57
# vsrl.vi vd, vs2, uimm5, vm   # vector-immediate
:vsrl.vi  vd, vs2, uimm5         is op2631=0x28 & op2525=1 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vsrl_vi(vs2,uimm5);}
:vsrl.vi  vd, vs2, uimm5, "v0.t" is op2631=0x28 & op2525=0 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vsrl_vi(vs2,uimm5,v0);}

define pcodeop vsrl_vv;
# vsrl.vv        31..26=0x28 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vsrl.vv vd, vs2, vs1, vm   # Vector-vector
:vsrl.vv  vd, vs2, vs1         is op2631=0x28 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vsrl_vv(vs2,vs1);}
:vsrl.vv  vd, vs2, vs1, "v0.t" is op2631=0x28 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vsrl_vv(vs2,vs1,v0);}

define pcodeop vsrl_vx;
# vsrl.vx        31..26=0x28 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vsrl.vx vd, vs2, rs1, vm   # vector-scalar
:vsrl.vx  vd, vs2, rs1         is op2631=0x28 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vsrl_vx(vs2,rs1);}
:vsrl.vx  vd, vs2, rs1, "v0.t" is op2631=0x28 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vsrl_vx(vs2,rs1,v0);}

define pcodeop vsse1024_v;
# vsse1024.v      nf 28=1 27..26=2 vm rs2 rs1 14..12=0x7 vs3 6..0=0x27
# vsse1024.v vs3, (rs1), rs2, vm  # 1024-bit strided store
:vsse1024.v     vs3, (rs1), rs2         is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsse1024_v(vs3,rs1,rs2);}
:vsse1024.v     vs3, (rs1), rs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsse1024_v(vs3,rs1,rs2,v0);}

define pcodeop vssseq2e1024_v;
:vssseg2e1024.v vs3, (rs1), rs2         is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseq2e1024_v(vs3,rs1,rs2);}
:vssseg2e1024.v vs3, (rs1), rs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseq2e1024_v(vs3,rs1,rs2,v0);}

define pcodeop vssseq3e1024_v;
:vssseg3e1024.v vs3, (rs1), rs2         is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseq3e1024_v(vs3,rs1,rs2);}
:vssseg3e1024.v vs3, (rs1), rs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseq3e1024_v(vs3,rs1,rs2,v0);}

define pcodeop vssseq4e1024_v;
:vssseg4e1024.v vs3, (rs1), rs2         is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseq4e1024_v(vs3,rs1,rs2);}
:vssseg4e1024.v vs3, (rs1), rs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseq4e1024_v(vs3,rs1,rs2,v0);}

define pcodeop vssseq5e1024_v;
:vssseg5e1024.v vs3, (rs1), rs2         is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseq5e1024_v(vs3,rs1,rs2);}
:vssseg5e1024.v vs3, (rs1), rs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseq5e1024_v(vs3,rs1,rs2,v0);}

define pcodeop vssseq6e1024_v;
:vssseg6e1024.v vs3, (rs1), rs2         is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseq6e1024_v(vs3,rs1,rs2);}
:vssseg6e1024.v vs3, (rs1), rs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseq6e1024_v(vs3,rs1,rs2,v0);}

define pcodeop vssseq7e1024_v;
:vssseg7e1024.v vs3, (rs1), rs2         is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseq7e1024_v(vs3,rs1,rs2);}
:vssseg7e1024.v vs3, (rs1), rs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseq7e1024_v(vs3,rs1,rs2,v0);}

define pcodeop vssseq8e1024_v;
:vssseg8e1024.v vs3, (rs1), rs2         is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseq8e1024_v(vs3,rs1,rs2);}
:vssseg8e1024.v vs3, (rs1), rs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseq8e1024_v(vs3,rs1,rs2,v0);}

define pcodeop vsse128_v;
# vsse128.v       nf 28=1 27..26=2 vm rs2 rs1 14..12=0x0 vs3 6..0=0x27
# vsse128.v  vs3, (rs1), rs2, vm  #  128-bit strided store
:vsse128.v     vs3, (rs1), rs2         is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsse128_v(vs3,rs1,rs2);}
:vsse128.v     vs3, (rs1), rs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsse128_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg2e128_v;
:vssseg2e128.v vs3, (rs1), rs2         is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg2e128_v(vs3,rs1,rs2);}
:vssseg2e128.v vs3, (rs1), rs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg2e128_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg3e128_v;
:vssseg3e128.v vs3, (rs1), rs2         is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg3e128_v(vs3,rs1,rs2);}
:vssseg3e128.v vs3, (rs1), rs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg3e128_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg4e128_v;
:vssseg4e128.v vs3, (rs1), rs2         is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg4e128_v(vs3,rs1,rs2);}
:vssseg4e128.v vs3, (rs1), rs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg4e128_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg5e128_v;
:vssseg5e128.v vs3, (rs1), rs2         is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg5e128_v(vs3,rs1,rs2);}
:vssseg5e128.v vs3, (rs1), rs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg5e128_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg6e128_v;
:vssseg6e128.v vs3, (rs1), rs2         is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg6e128_v(vs3,rs1,rs2);}
:vssseg6e128.v vs3, (rs1), rs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg6e128_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg7e128_v;
:vssseg7e128.v vs3, (rs1), rs2         is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg7e128_v(vs3,rs1,rs2);}
:vssseg7e128.v vs3, (rs1), rs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg7e128_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg8e128_v;
:vssseg8e128.v vs3, (rs1), rs2         is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg8e128_v(vs3,rs1,rs2);}
:vssseg8e128.v vs3, (rs1), rs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg8e128_v(vs3,rs1,rs2,v0);}

define pcodeop vsse16_v;
# vsse16.v        nf 28=0 27..26=2 vm rs2 rs1 14..12=0x5 vs3 6..0=0x27
# vsse16.v   vs3, (rs1), rs2, vm  #   16-bit strided store
:vsse16.v     vs3, (rs1), rs2         is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsse16_v(vs3,rs1,rs2);}
:vsse16.v     vs3, (rs1), rs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsse16_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg2e16_v;
:vssseg2e16.v vs3, (rs1), rs2         is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg2e16_v(vs3,rs1,rs2);}
:vssseg2e16.v vs3, (rs1), rs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg2e16_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg3e16_v;
:vssseg3e16.v vs3, (rs1), rs2         is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg3e16_v(vs3,rs1,rs2);}
:vssseg3e16.v vs3, (rs1), rs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg3e16_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg4e16_v;
:vssseg4e16.v vs3, (rs1), rs2         is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg4e16_v(vs3,rs1,rs2);}
:vssseg4e16.v vs3, (rs1), rs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg4e16_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg5e16_v;
:vssseg5e16.v vs3, (rs1), rs2         is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg5e16_v(vs3,rs1,rs2);}
:vssseg5e16.v vs3, (rs1), rs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg5e16_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg6e16_v;
:vssseg6e16.v vs3, (rs1), rs2         is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg6e16_v(vs3,rs1,rs2);}
:vssseg6e16.v vs3, (rs1), rs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg6e16_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg7e16_v;
:vssseg7e16.v vs3, (rs1), rs2         is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg7e16_v(vs3,rs1,rs2);}
:vssseg7e16.v vs3, (rs1), rs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg7e16_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg8e16_v;
:vssseg8e16.v vs3, (rs1), rs2         is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg8e16_v(vs3,rs1,rs2);}
:vssseg8e16.v vs3, (rs1), rs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg8e16_v(vs3,rs1,rs2,v0);}

define pcodeop vsse256_v;
# vsse256.v       nf 28=1 27..26=2 vm rs2 rs1 14..12=0x5 vs3 6..0=0x27
# vsse256.v  vs3, (rs1), rs2, vm  #  256-bit strided store
:vsse256.v     vs3, (rs1), rs2         is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsse256_v(vs3,rs1,rs2);}
:vsse256.v     vs3, (rs1), rs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsse256_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg2e256_v;
:vssseg2e256.v vs3, (rs1), rs2         is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg2e256_v(vs3,rs1,rs2);}
:vssseg2e256.v vs3, (rs1), rs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg2e256_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg3e256_v;
:vssseg3e256.v vs3, (rs1), rs2         is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg3e256_v(vs3,rs1,rs2);}
:vssseg3e256.v vs3, (rs1), rs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg3e256_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg4e256_v;
:vssseg4e256.v vs3, (rs1), rs2         is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg4e256_v(vs3,rs1,rs2);}
:vssseg4e256.v vs3, (rs1), rs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg4e256_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg5e256_v;
:vssseg5e256.v vs3, (rs1), rs2         is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg5e256_v(vs3,rs1,rs2);}
:vssseg5e256.v vs3, (rs1), rs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg5e256_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg6e256_v;
:vssseg6e256.v vs3, (rs1), rs2         is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg6e256_v(vs3,rs1,rs2);}
:vssseg6e256.v vs3, (rs1), rs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg6e256_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg7e256_v;
:vssseg7e256.v vs3, (rs1), rs2         is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg7e256_v(vs3,rs1,rs2);}
:vssseg7e256.v vs3, (rs1), rs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg7e256_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg8e256_v;
:vssseg8e256.v vs3, (rs1), rs2         is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg8e256_v(vs3,rs1,rs2);}
:vssseg8e256.v vs3, (rs1), rs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vssseg8e256_v(vs3,rs1,rs2,v0);}

define pcodeop vsse32_v;
# vsse32.v        nf 28=0 27..26=2 vm rs2 rs1 14..12=0x6 vs3 6..0=0x27
# vsse32.v   vs3, (rs1), rs2, vm  #   32-bit strided store
:vsse32.v     vs3, (rs1), rs2         is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsse32_v(vs3,rs1,rs2);}
:vsse32.v     vs3, (rs1), rs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsse32_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg2e32_v;
:vssseg2e32.v vs3, (rs1), rs2         is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg2e32_v(vs3,rs1,rs2);}
:vssseg2e32.v vs3, (rs1), rs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg2e32_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg3e32_v;
:vssseg3e32.v vs3, (rs1), rs2         is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg3e32_v(vs3,rs1,rs2);}
:vssseg3e32.v vs3, (rs1), rs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg3e32_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg4e32_v;
:vssseg4e32.v vs3, (rs1), rs2         is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg4e32_v(vs3,rs1,rs2);}
:vssseg4e32.v vs3, (rs1), rs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg4e32_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg5e32_v;
:vssseg5e32.v vs3, (rs1), rs2         is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg5e32_v(vs3,rs1,rs2);}
:vssseg5e32.v vs3, (rs1), rs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg5e32_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg6e32_v;
:vssseg6e32.v vs3, (rs1), rs2         is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg6e32_v(vs3,rs1,rs2);}
:vssseg6e32.v vs3, (rs1), rs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg6e32_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg7e32_v;
:vssseg7e32.v vs3, (rs1), rs2         is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg7e32_v(vs3,rs1,rs2);}
:vssseg7e32.v vs3, (rs1), rs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg7e32_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg8e32_v;
:vssseg8e32.v vs3, (rs1), rs2         is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg8e32_v(vs3,rs1,rs2);}
:vssseg8e32.v vs3, (rs1), rs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg8e32_v(vs3,rs1,rs2,v0);}

define pcodeop vsse512_v;
# vsse512.v       nf 28=1 27..26=2 vm rs2 rs1 14..12=0x6 vs3 6..0=0x27
# vsse512.v  vs3, (rs1), rs2  #  512-bit strided store
:vsse512.v     vs3, (rs1), rs2         is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsse512_v(vs3,rs1,rs2);}
:vsse512.v     vs3, (rs1), rs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsse512_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg2e512_v;
:vssseg2e512.v vs3, (rs1), rs2         is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg2e512_v(vs3,rs1,rs2);}
:vssseg2e512.v vs3, (rs1), rs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg2e512_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg3e512_v;
:vssseg3e512.v vs3, (rs1), rs2         is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg3e512_v(vs3,rs1,rs2);}
:vssseg3e512.v vs3, (rs1), rs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg3e512_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg4e512_v;
:vssseg4e512.v vs3, (rs1), rs2         is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg4e512_v(vs3,rs1,rs2);}
:vssseg4e512.v vs3, (rs1), rs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg4e512_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg5e512_v;
:vssseg5e512.v vs3, (rs1), rs2         is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg5e512_v(vs3,rs1,rs2);}
:vssseg5e512.v vs3, (rs1), rs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg5e512_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg6e512_v;
:vssseg6e512.v vs3, (rs1), rs2         is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg6e512_v(vs3,rs1,rs2);}
:vssseg6e512.v vs3, (rs1), rs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg6e512_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg7e512_v;
:vssseg7e512.v vs3, (rs1), rs2         is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg7e512_v(vs3,rs1,rs2);}
:vssseg7e512.v vs3, (rs1), rs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg7e512_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg8e512_v;
:vssseg8e512.v vs3, (rs1), rs2         is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg8e512_v(vs3,rs1,rs2);}
:vssseg8e512.v vs3, (rs1), rs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vssseg8e512_v(vs3,rs1,rs2,v0);}

define pcodeop vsse64_v;
# vsse64.v        nf 28=0 27..26=2 vm rs2 rs1 14..12=0x7 vs3 6..0=0x27
# vsse64.v   vs3, (rs1), rs2, vm  #   64-bit strided store
:vsse64.v     vs3, (rs1), rs2         is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsse64_v(vs3,rs1,rs2);}
:vsse64.v     vs3, (rs1), rs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsse64_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg2e64_v;
:vssseg2e64.v vs3, (rs1), rs2         is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseg2e64_v(vs3,rs1,rs2);}
:vssseg2e64.v vs3, (rs1), rs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseg2e64_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg3e64_v;
:vssseg3e64.v vs3, (rs1), rs2         is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseg3e64_v(vs3,rs1,rs2);}
:vssseg3e64.v vs3, (rs1), rs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseg3e64_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg4e64_v;
:vssseg4e64.v vs3, (rs1), rs2         is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseg4e64_v(vs3,rs1,rs2);}
:vssseg4e64.v vs3, (rs1), rs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseg4e64_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg5e64_v;
:vssseg5e64.v vs3, (rs1), rs2         is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseg5e64_v(vs3,rs1,rs2);}
:vssseg5e64.v vs3, (rs1), rs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseg5e64_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg6e64_v;
:vssseg6e64.v vs3, (rs1), rs2         is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseg6e64_v(vs3,rs1,rs2);}
:vssseg6e64.v vs3, (rs1), rs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseg6e64_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg7e64_v;
:vssseg7e64.v vs3, (rs1), rs2         is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseg7e64_v(vs3,rs1,rs2);}
:vssseg7e64.v vs3, (rs1), rs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseg7e64_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg8e64_v;
:vssseg8e64.v vs3, (rs1), rs2         is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseg8e64_v(vs3,rs1,rs2);}
:vssseg8e64.v vs3, (rs1), rs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vssseg8e64_v(vs3,rs1,rs2,v0);}

define pcodeop vsse8_v;
# vsse8.v         nf 28=0 27..26=2 vm rs2 rs1 14..12=0x0 vs3 6..0=0x27
# vsse8.v    vs3, (rs1), rs2, vm  #    8-bit strided store
:vsse8.v     vs3, (rs1), rs2         is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsse8_v(vs3,rs1,rs2);}
:vsse8.v     vs3, (rs1), rs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsse8_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg2e8_v;
:vssseg2e8.v vs3, (rs1), rs2         is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg2e8_v(vs3,rs1,rs2);}
:vssseg2e8.v vs3, (rs1), rs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg2e8_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg3e8_v;
:vssseg3e8.v vs3, (rs1), rs2         is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg3e8_v(vs3,rs1,rs2);}
:vssseg3e8.v vs3, (rs1), rs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg3e8_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg4e8_v;
:vssseg4e8.v vs3, (rs1), rs2         is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg4e8_v(vs3,rs1,rs2);}
:vssseg4e8.v vs3, (rs1), rs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg4e8_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg5e8_v;
:vssseg5e8.v vs3, (rs1), rs2         is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg5e8_v(vs3,rs1,rs2);}
:vssseg5e8.v vs3, (rs1), rs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg5e8_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg6e8_v;
:vssseg6e8.v vs3, (rs1), rs2         is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg6e8_v(vs3,rs1,rs2);}
:vssseg6e8.v vs3, (rs1), rs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg6e8_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg7e8_v;
:vssseg7e8.v vs3, (rs1), rs2         is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg7e8_v(vs3,rs1,rs2);}
:vssseg7e8.v vs3, (rs1), rs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg7e8_v(vs3,rs1,rs2,v0);}

define pcodeop vssseg8e8_v;
:vssseg8e8.v vs3, (rs1), rs2         is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=1 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg8e8_v(vs3,rs1,rs2);}
:vssseg8e8.v vs3, (rs1), rs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x2 & op2525=0 & rs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vssseg8e8_v(vs3,rs1,rs2,v0);}

define pcodeop vssra_vi;
# vssra.vi       31..26=0x2b vm vs2 uimm5 14..12=0x3 vd 6..0=0x57
# vssra.vi vd, vs2, uimm5, vm   # vd[i] = roundoff_signed(vs2[i], uimm)
:vssra.vi  vd, vs2, uimm5         is op2631=0x2b & op2525=1 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vssra_vi(vs2,uimm5);}
:vssra.vi  vd, vs2, uimm5, "v0.t" is op2631=0x2b & op2525=0 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vssra_vi(vs2,uimm5,v0);}

define pcodeop vssra_vv;
# vssra.vv       31..26=0x2b vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vssra.vv vd, vs2, vs1, vm   # vd[i] = roundoff_signed(vs2[i],vs1[i])
:vssra.vv  vd, vs2, vs1         is op2631=0x2b & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vssra_vv(vs2,vs1);}
:vssra.vv  vd, vs2, vs1, "v0.t" is op2631=0x2b & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vssra_vv(vs2,vs1,v0);}

define pcodeop vssra_vx;
# vssra.vx       31..26=0x2b vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vssra.vx vd, vs2, rs1, vm   # vd[i] = roundoff_signed(vs2[i], x[rs1])
:vssra.vx  vd, vs2, rs1         is op2631=0x2b & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vssra_vx(vs2,rs1);}
:vssra.vx  vd, vs2, rs1, "v0.t" is op2631=0x2b & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vssra_vx(vs2,rs1,v0);}

define pcodeop vssrl_vi;
# vssrl.vi       31..26=0x2a vm vs2 uimm5 14..12=0x3 vd 6..0=0x57
# vssrl.vi vd, vs2, uimm5, vm   # vd[i] = roundoff_unsigned(vs2[i], uimm)
:vssrl.vi  vd, vs2, uimm5         is op2631=0x2a & op2525=1 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vssrl_vi(vs2,uimm5);}
:vssrl.vi  vd, vs2, uimm5, "v0.t" is op2631=0x2a & op2525=0 & vs2 & uimm5 & op1214=0x3 & vd & op0006=0x57 {vd=vssrl_vi(vs2,uimm5,v0);}

define pcodeop vssrl_vv;
# vssrl.vv       31..26=0x2a vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vssrl.vv vd, vs2, vs1, vm   # vd[i] = roundoff_unsigned(vs2[i], vs1[i])
:vssrl.vv  vd, vs2, vs1         is op2631=0x2a & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vssrl_vv(vs2,vs1);}
:vssrl.vv  vd, vs2, vs1, "v0.t" is op2631=0x2a & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vssrl_vv(vs2,vs1,v0);}

define pcodeop vssrl_vx;
# vssrl.vx       31..26=0x2a vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vssrl.vx vd, vs2, rs1, vm   # vd[i] = roundoff_unsigned(vs2[i], x[rs1])
:vssrl.vx  vd, vs2, rs1         is op2631=0x2a & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vssrl_vx(vs2,rs1);}
:vssrl.vx  vd, vs2, rs1, "v0.t" is op2631=0x2a & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vssrl_vx(vs2,rs1,v0);}

define pcodeop vssub_vv;
# vssub.vv       31..26=0x23 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vssub.vv vd, vs2, vs1, vm   # Vector-vector
:vssub.vv  vd, vs2, vs1         is op2631=0x23 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vssub_vv(vs2,vs1);}
:vssub.vv  vd, vs2, vs1, "v0.t" is op2631=0x23 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vssub_vv(vs2,vs1,v0);}

define pcodeop vssub_vx;
# vssub.vx       31..26=0x23 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vssub.vx vd, vs2, rs1, vm   # vector-scalar
:vssub.vx  vd, vs2, rs1         is op2631=0x23 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vssub_vx(vs2,rs1);}
:vssub.vx  vd, vs2, rs1, "v0.t" is op2631=0x23 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vssub_vx(vs2,rs1,v0);}

define pcodeop vssubu_vv;
# vssubu.vv      31..26=0x22 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vssubu.vv vd, vs2, vs1, vm   # Vector-vector
:vssubu.vv  vd, vs2, vs1         is op2631=0x22 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vssubu_vv(vs2,vs1);}
:vssubu.vv  vd, vs2, vs1, "v0.t" is op2631=0x22 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vssubu_vv(vs2,vs1,v0);}

define pcodeop vssubu_vx;
# vssubu.vx      31..26=0x22 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vssubu.vx vd, vs2, rs1, vm   # vector-scalar
:vssubu.vx  vd, vs2, rs1         is op2631=0x22 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vssubu_vx(vs2,rs1);}
:vssubu.vx  vd, vs2, rs1, "v0.t" is op2631=0x22 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vssubu_vx(vs2,rs1,v0);}

define pcodeop vsub_vv;
# vsub.vv         31..26=0x02 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vsub.vv vd, vs2, vs1, vm   # Vector-vector
:vsub.vv  vd, vs2, vs1         is op2631=0x2 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vsub_vv(vs2,vs1);}
:vsub.vv  vd, vs2, vs1, "v0.t" is op2631=0x2 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vsub_vv(vs2,vs1,v0);}

define pcodeop vsub_vx;
# vsub.vx        31..26=0x02 vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vsub.vx vd, vs2, rs1, vm   # vector-scalar
:vsub.vx  vd, vs2, rs1         is op2631=0x2 & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vsub_vx(vs2,rs1);}
:vsub.vx  vd, vs2, rs1, "v0.t" is op2631=0x2 & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vsub_vx(vs2,rs1,v0);}

define pcodeop vsuxei1024_v;
# vsuxei1024.v     nf 28=1 27..26=1 vm vs2 rs1 14..12=0x7 vs3 6..0=0x27
# vsuxei1024.v  vs3, (rs1), vs2, vm # unordered 1024-bit indexed store of SEW data
:vsuxei1024.v     vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxei1024_v(vs3,rs1,vs2);}
:vsuxei1024.v     vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxei1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg2ei1024_v;
:vsuxseg2ei1024.v vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg2ei1024_v(vs3,rs1,vs2);}
:vsuxseg2ei1024.v vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg2ei1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg3ei1024_v;
:vsuxseg3ei1024.v vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg3ei1024_v(vs3,rs1,vs2);}
:vsuxseg3ei1024.v vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg3ei1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg4ei1024_v;
:vsuxseg4ei1024.v vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg4ei1024_v(vs3,rs1,vs2);}
:vsuxseg4ei1024.v vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg4ei1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg5ei1024_v;
:vsuxseg5ei1024.v vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg5ei1024_v(vs3,rs1,vs2);}
:vsuxseg5ei1024.v vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg5ei1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg6ei1024_v;
:vsuxseg6ei1024.v vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg6ei1024_v(vs3,rs1,vs2);}
:vsuxseg6ei1024.v vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg6ei1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg7ei1024_v;
:vsuxseg7ei1024.v vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg7ei1024_v(vs3,rs1,vs2);}
:vsuxseg7ei1024.v vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg7ei1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg8ei1024_v;
:vsuxseg8ei1024.v vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg8ei1024_v(vs3,rs1,vs2);}
:vsuxseg8ei1024.v vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg8ei1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxei128_v;
# vsuxei128.v      nf 28=1 27..26=1 vm vs2 rs1 14..12=0x0 vs3 6..0=0x27
# vsuxei128.v  vs3, (rs1), vs2, vm # unordered 128-bit indexed store of SEW data
:vsuxei128.v     vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxei128_v(vs3,rs1,vs2);}
:vsuxei128.v     vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg2ei128_v;
:vsuxseg2ei128.v vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg2ei128_v(vs3,rs1,vs2);}
:vsuxseg2ei128.v vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg2ei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg3ei128_v;
:vsuxseg3ei128.v vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg3ei128_v(vs3,rs1,vs2);}
:vsuxseg3ei128.v vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg3ei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg4ei128_v;
:vsuxseg4ei128.v vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg4ei128_v(vs3,rs1,vs2);}
:vsuxseg4ei128.v vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg4ei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg5ei128_v;
:vsuxseg5ei128.v vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg5ei128_v(vs3,rs1,vs2);}
:vsuxseg5ei128.v vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg5ei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg6ei128_v;
:vsuxseg6ei128.v vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg6ei128_v(vs3,rs1,vs2);}
:vsuxseg6ei128.v vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg6ei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg7ei128_v;
:vsuxseg7ei128.v vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg7ei128_v(vs3,rs1,vs2);}
:vsuxseg7ei128.v vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg7ei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg8ei128_v;
:vsuxseg8ei128.v vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg8ei128_v(vs3,rs1,vs2);}
:vsuxseg8ei128.v vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg8ei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxei16_v;
# vsuxei16.v       nf 28=0 27..26=1 vm vs2 rs1 14..12=0x5 vs3 6..0=0x27
# vsuxei16.v  vs3, (rs1), vs2, vm # unordered 16-bit indexed store of SEW data
:vsuxei16.v     vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxei16_v(vs3,rs1,vs2);}
:vsuxei16.v     vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg2ei16_v;
:vsuxseg2ei16.v vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg2ei16_v(vs3,rs1,vs2);}
:vsuxseg2ei16.v vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg2ei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg3ei16_v;
:vsuxseg3ei16.v vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg3ei16_v(vs3,rs1,vs2);}
:vsuxseg3ei16.v vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg3ei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg4ei16_v;
:vsuxseg4ei16.v vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg4ei16_v(vs3,rs1,vs2);}
:vsuxseg4ei16.v vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg4ei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg5ei16_v;
:vsuxseg5ei16.v vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg5ei16_v(vs3,rs1,vs2);}
:vsuxseg5ei16.v vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg5ei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg6ei16_v;
:vsuxseg6ei16.v vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg6ei16_v(vs3,rs1,vs2);}
:vsuxseg6ei16.v vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg6ei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg7ei16_v;
:vsuxseg7ei16.v vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg7ei16_v(vs3,rs1,vs2);}
:vsuxseg7ei16.v vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg7ei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg8ei16_v;
:vsuxseg8ei16.v vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg8ei16_v(vs3,rs1,vs2);}
:vsuxseg8ei16.v vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg8ei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxei256_v;
# vsuxei256.v      nf 28=1 27..26=1 vm vs2 rs1 14..12=0x5 vs3 6..0=0x27
# vsuxei256.v  vs3, (rs1), vs2, vm # unordered 256-bit indexed store of SEW data
:vsuxei256.v   vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxei256_v(vs3,rs1,vs2);}
:vsuxei256.v   vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg2ei256_v;
:vsuxseg2ei256.v vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg2ei256_v(vs3,rs1,vs2);}
:vsuxseg2ei256.v vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg2ei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg3ei256_v;
:vsuxseg3ei256.v vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg3ei256_v(vs3,rs1,vs2);}
:vsuxseg3ei256.v vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg3ei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg4ei256_v;
:vsuxseg4ei256.v vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg4ei256_v(vs3,rs1,vs2);}
:vsuxseg4ei256.v vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg4ei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg5ei256_v;
:vsuxseg5ei256.v vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg5ei256_v(vs3,rs1,vs2);}
:vsuxseg5ei256.v vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg5ei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg6ei256_v;
:vsuxseg6ei256.v vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg6ei256_v(vs3,rs1,vs2);}
:vsuxseg6ei256.v vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg6ei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg7ei256_v;
:vsuxseg7ei256.v vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg7ei256_v(vs3,rs1,vs2);}
:vsuxseg7ei256.v vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg7ei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg8ei256_v;
:vsuxseg8ei256.v vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg8ei256_v(vs3,rs1,vs2);}
:vsuxseg8ei256.v vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsuxseg8ei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxei32_v;
# vsuxei32.v       nf 28=0 27..26=1 vm vs2 rs1 14..12=0x6 vs3 6..0=0x27
# vsuxei32.v  vs3, (rs1), vs2, vm # unordered 32-bit indexed store of SEW data
:vsuxei32.v   vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxei32_v(vs3,rs1,vs2);}
:vsuxei32.v   vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg2ei32_v;
:vsuxseg2ei32.v vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg2ei32_v(vs3,rs1,vs2);}
:vsuxseg2ei32.v vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg2ei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg3ei32_v;
:vsuxseg3ei32.v vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg3ei32_v(vs3,rs1,vs2);}
:vsuxseg3ei32.v vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg3ei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg4ei32_v;
:vsuxseg4ei32.v vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg4ei32_v(vs3,rs1,vs2);}
:vsuxseg4ei32.v vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg4ei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg5ei32_v;
:vsuxseg5ei32.v vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg5ei32_v(vs3,rs1,vs2);}
:vsuxseg5ei32.v vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg5ei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg6ei32_v;
:vsuxseg6ei32.v vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg6ei32_v(vs3,rs1,vs2);}
:vsuxseg6ei32.v vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg6ei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg7ei32_v;
:vsuxseg7ei32.v vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg7ei32_v(vs3,rs1,vs2);}
:vsuxseg7ei32.v vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg7ei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg8ei32_v;
:vsuxseg8ei32.v vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg8ei32_v(vs3,rs1,vs2);}
:vsuxseg8ei32.v vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg8ei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxei512_v;
# vsuxei512.v      nf 28=1 27..26=1 vm vs2 rs1 14..12=0x6 vs3 6..0=0x27
# vsuxei512.v  vs3, (rs1), vs2, vm # unordered 512-bit indexed store of SEW data
:vsuxei512.v     vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxei512_v(vs3,rs1,vs2);}
:vsuxei512.v     vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg2ei512_v;
:vsuxseg2ei512.v vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg2ei512_v(vs3,rs1,vs2);}
:vsuxseg2ei512.v vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg2ei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg3ei512_v;
:vsuxseg3ei512.v vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg3ei512_v(vs3,rs1,vs2);}
:vsuxseg3ei512.v vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg3ei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg4ei512_v;
:vsuxseg4ei512.v vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg4ei512_v(vs3,rs1,vs2);}
:vsuxseg4ei512.v vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg4ei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg5ei512_v;
:vsuxseg5ei512.v vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg5ei512_v(vs3,rs1,vs2);}
:vsuxseg5ei512.v vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg5ei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg6ei512_v;
:vsuxseg6ei512.v vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg6ei512_v(vs3,rs1,vs2);}
:vsuxseg6ei512.v vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg6ei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg7ei512_v;
:vsuxseg7ei512.v vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg7ei512_v(vs3,rs1,vs2);}
:vsuxseg7ei512.v vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg7ei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg8ei512_v;
:vsuxseg8ei512.v vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x1 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg8ei512_v(vs3,rs1,vs2);}
:vsuxseg8ei512.v vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsuxseg8ei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxei64_v;
# vsuxei64.v       nf 28=0 27..26=1 vm vs2 rs1 14..12=0x7 vs3 6..0=0x27
# vsuxei64.v  vs3, (rs1), vs2, vm # unordered 64-bit indexed store of SEW data
:vsuxei64.v     vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxei64_v(vs3,rs1,vs2);}
:vsuxei64.v     vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg2ei64_v;
:vsuxseg2ei64.v vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg2ei64_v(vs3,rs1,vs2);}
:vsuxseg2ei64.v vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg2ei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg3ei64_v;
:vsuxseg3ei64.v vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg3ei64_v(vs3,rs1,vs2);}
:vsuxseg3ei64.v vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg3ei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg4ei64_v;
:vsuxseg4ei64.v vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg4ei64_v(vs3,rs1,vs2);}
:vsuxseg4ei64.v vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg4ei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg5ei64_v;
:vsuxseg5ei64.v vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg5ei64_v(vs3,rs1,vs2);}
:vsuxseg5ei64.v vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg5ei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg6ei64_v;
:vsuxseg6ei64.v vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg6ei64_v(vs3,rs1,vs2);}
:vsuxseg6ei64.v vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg6ei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg7ei64_v;
:vsuxseg7ei64.v vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg7ei64_v(vs3,rs1,vs2);}
:vsuxseg7ei64.v vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg7ei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg8ei64_v;
:vsuxseg8ei64.v vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg8ei64_v(vs3,rs1,vs2);}
:vsuxseg8ei64.v vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsuxseg8ei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxei8_v;
# vsuxei8.v        nf 28=0 27..26=1 vm vs2 rs1 14..12=0x0 vs3 6..0=0x27
# vsuxei8.v   vs3, (rs1), vs2, vm # unordered  8-bit indexed store of SEW data
:vsuxei8.v     vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxei8_v(vs3,rs1,vs2);}
:vsuxei8.v     vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxei8_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg2ei8_v;
:vsuxseg2ei8.v vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg2ei8_v(vs3,rs1,vs2);}
:vsuxseg2ei8.v vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg2ei8_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg3ei8_v;
:vsuxseg3ei8.v vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg3ei8_v(vs3,rs1,vs2);}
:vsuxseg3ei8.v vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg3ei8_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg4ei8_v;
:vsuxseg4ei8.v vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg4ei8_v(vs3,rs1,vs2);}
:vsuxseg4ei8.v vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg4ei8_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg5ei8_v;
:vsuxseg5ei8.v vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg5ei8_v(vs3,rs1,vs2);}
:vsuxseg5ei8.v vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg5ei8_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg6ei8_v;
:vsuxseg6ei8.v vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg6ei8_v(vs3,rs1,vs2);}
:vsuxseg6ei8.v vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg6ei8_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg7ei8_v;
:vsuxseg7ei8.v vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg7ei8_v(vs3,rs1,vs2);}
:vsuxseg7ei8.v vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg7ei8_v(vs3,rs1,vs2,v0);}

define pcodeop vsuxseg8ei8_v;
:vsuxseg8ei8.v vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg8ei8_v(vs3,rs1,vs2);}
:vsuxseg8ei8.v vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x1 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsuxseg8ei8_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxei1024_v;
# vsoxei1024.v      nf 28=1 27..26=3 vm vs2 rs1 14..12=0x7 vs3 6..0=0x27
# vsoxei1024.v   vs3, (rs1), vs2, vm  # ordered 1024-bit indexed store of SEW data
:vsoxei1024.v     vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxei1024_v(vs3,rs1,vs2);}
:vsoxei1024.v     vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxei1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxsege2i1024_v;
:vsoxseg2ei1024.v vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxsege2i1024_v(vs3,rs1,vs2);}
:vsoxseg2ei1024.v vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxsege2i1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg3ei1024_v;
:vsoxseg3ei1024.v vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg3ei1024_v(vs3,rs1,vs2);}
:vsoxseg3ei1024.v vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg3ei1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg4ei1024_v;
:vsoxseg4ei1024.v vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg4ei1024_v(vs3,rs1,vs2);}
:vsoxseg4ei1024.v vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg4ei1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg5ei1024_v;
:vsoxseg5ei1024.v vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg5ei1024_v(vs3,rs1,vs2);}
:vsoxseg5ei1024.v vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg5ei1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg6ei1024_v;
:vsoxseg6ei1024.v vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg6ei1024_v(vs3,rs1,vs2);}
:vsoxseg6ei1024.v vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg6ei1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg7ei1024_v;
:vsoxseg7ei1024.v vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg7ei1024_v(vs3,rs1,vs2);}
:vsoxseg7ei1024.v vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg7ei1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg8ei1024_v;
:vsoxseg8ei1024.v vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg8ei1024_v(vs3,rs1,vs2);}
:vsoxseg8ei1024.v vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg8ei1024_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxei128_v;
# vsoxei128.v       nf 28=1 27..26=3 vm vs2 rs1 14..12=0x0 vs3 6..0=0x27
# vsoxei128.v   vs3, (rs1), vs2, vm  # ordered 128-bit indexed store of SEW data
:vsoxei128.v     vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxei128_v(vs3,rs1,vs2);}
:vsoxei128.v     vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg2ei128_v;
:vsoxseg2ei128.v vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg2ei128_v(vs3,rs1,vs2);}
:vsoxseg2ei128.v vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg2ei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg3ei128_v;
:vsoxseg3ei128.v vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg3ei128_v(vs3,rs1,vs2);}
:vsoxseg3ei128.v vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg3ei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg4ei128_v;
:vsoxseg4ei128.v vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg4ei128_v(vs3,rs1,vs2);}
:vsoxseg4ei128.v vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg4ei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg5ei128_v;
:vsoxseg5ei128.v vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg5ei128_v(vs3,rs1,vs2);}
:vsoxseg5ei128.v vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg5ei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg6ei128_v;
:vsoxseg6ei128.v vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg6ei128_v(vs3,rs1,vs2);}
:vsoxseg6ei128.v vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg6ei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg7ei128_v;
:vsoxseg7ei128.v vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg7ei128_v(vs3,rs1,vs2);}
:vsoxseg7ei128.v vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg7ei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg8ei128_v;
:vsoxseg8ei128.v vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg8ei128_v(vs3,rs1,vs2);}
:vsoxseg8ei128.v vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg8ei128_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxei16_v;
# vsoxei16.v        nf 28=0 27..26=3 vm vs2 rs1 14..12=0x5 vs3 6..0=0x27
# vsoxei16.v   vs3, (rs1), vs2, vm  # ordered 16-bit indexed store of SEW data
:vsoxei16.v     vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxei16_v(vs3,rs1,vs2);}
:vsoxei16.v     vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg2ei16_v;
:vsoxseg2ei16.v vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg2ei16_v(vs3,rs1,vs2);}
:vsoxseg2ei16.v vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg2ei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg3ei16_v;
:vsoxseg3ei16.v vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg3ei16_v(vs3,rs1,vs2);}
:vsoxseg3ei16.v vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg3ei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg4ei16_v;
:vsoxseg4ei16.v vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg4ei16_v(vs3,rs1,vs2);}
:vsoxseg4ei16.v vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg4ei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg5ei16_v;
:vsoxseg5ei16.v vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg5ei16_v(vs3,rs1,vs2);}
:vsoxseg5ei16.v vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg5ei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg6ei16_v;
:vsoxseg6ei16.v vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg6ei16_v(vs3,rs1,vs2);}
:vsoxseg6ei16.v vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg6ei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg7ei16_v;
:vsoxseg7ei16.v vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg7ei16_v(vs3,rs1,vs2);}
:vsoxseg7ei16.v vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg7ei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg8ei16_v;
:vsoxseg8ei16.v vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg8ei16_v(vs3,rs1,vs2);}
:vsoxseg8ei16.v vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg8ei16_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxei256_v;
# vsoxei256.v       nf 28=1 27..26=3 vm vs2 rs1 14..12=0x5 vs3 6..0=0x27
# vsoxei256.v   vs3, (rs1), vs2, vm  # ordered 256-bit indexed store of SEW data
:vsoxei256.v     vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxei256_v(vs3,rs1,vs2);}
:vsoxei256.v     vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg2ei256_v;
:vsoxseg2ei256.v vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg2ei256_v(vs3,rs1,vs2);}
:vsoxseg2ei256.v vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg2ei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg3ei256_v;
:vsoxseg3ei256.v vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg3ei256_v(vs3,rs1,vs2);}
:vsoxseg3ei256.v vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg3ei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg4ei256_v;
:vsoxseg4ei256.v vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg4ei256_v(vs3,rs1,vs2);}
:vsoxseg4ei256.v vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg4ei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg5ei256_v;
:vsoxseg5ei256.v vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg5ei256_v(vs3,rs1,vs2);}
:vsoxseg5ei256.v vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg5ei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg6ei256_v;
:vsoxseg6ei256.v vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg6ei256_v(vs3,rs1,vs2);}
:vsoxseg6ei256.v vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg6ei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg7ei256_v;
:vsoxseg7ei256.v vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg7ei256_v(vs3,rs1,vs2);}
:vsoxseg7ei256.v vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg7ei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg8ei256_v;
:vsoxseg8ei256.v vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg8ei256_v(vs3,rs1,vs2);}
:vsoxseg8ei256.v vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x5 & vs3 & op0006=0x27 {vsoxseg8ei256_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxei32_v;
# vsoxei32.v        nf 28=0 27..26=3 vm vs2 rs1 14..12=0x6 vs3 6..0=0x27
# vsoxei32.v   vs3, (rs1), vs2, vm  # ordered 32-bit indexed store of SEW data
:vsoxei32.v     vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxei32_v(vs3,rs1,vs2);}
:vsoxei32.v     vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg2ei32_v;
:vsoxseg2ei32.v vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg2ei32_v(vs3,rs1,vs2);}
:vsoxseg2ei32.v vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg2ei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg3ei32_v;
:vsoxseg3ei32.v vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg3ei32_v(vs3,rs1,vs2);}
:vsoxseg3ei32.v vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg3ei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg4ei32_v;
:vsoxseg4ei32.v vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg4ei32_v(vs3,rs1,vs2);}
:vsoxseg4ei32.v vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg4ei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg5ei32_v;
:vsoxseg5ei32.v vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg5ei32_v(vs3,rs1,vs2);}
:vsoxseg5ei32.v vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg5ei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg6ei32_v;
:vsoxseg6ei32.v vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg6ei32_v(vs3,rs1,vs2);}
:vsoxseg6ei32.v vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg6ei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg7ei32_v;
:vsoxseg7ei32.v vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg7ei32_v(vs3,rs1,vs2);}
:vsoxseg7ei32.v vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg7ei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg8ei32_v;
:vsoxseg8ei32.v vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg8ei32_v(vs3,rs1,vs2);}
:vsoxseg8ei32.v vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg8ei32_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxei512_v;
# vsoxei512.v       nf 28=1 27..26=3 vm vs2 rs1 14..12=0x6 vs3 6..0=0x27
# vsoxei512.v   vs3, (rs1), vs2, vm  # ordered 512-bit indexed store of SEW data
:vsoxei512.v     vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxei512_v(vs3,rs1,vs2);}
:vsoxei512.v     vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg2ei512_v;
:vsoxseg2ei512.v vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg2ei512_v(vs3,rs1,vs2);}
:vsoxseg2ei512.v vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg2ei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg3ei512_v;
:vsoxseg3ei512.v vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg3ei512_v(vs3,rs1,vs2);}
:vsoxseg3ei512.v vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg3ei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg4ei512_v;
:vsoxseg4ei512.v vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg4ei512_v(vs3,rs1,vs2);}
:vsoxseg4ei512.v vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg4ei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg5ei512_v;
:vsoxseg5ei512.v vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg5ei512_v(vs3,rs1,vs2);}
:vsoxseg5ei512.v vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg5ei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg6ei512_v;
:vsoxseg6ei512.v vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg6ei512_v(vs3,rs1,vs2);}
:vsoxseg6ei512.v vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg6ei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg7ei512_v;
:vsoxseg7ei512.v vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg7ei512_v(vs3,rs1,vs2);}
:vsoxseg7ei512.v vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg7ei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg8ei512_v;
:vsoxseg8ei512.v vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x1 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg8ei512_v(vs3,rs1,vs2);}
:vsoxseg8ei512.v vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x1 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x6 & vs3 & op0006=0x27 {vsoxseg8ei512_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxei64_v;
# vsoxei64.v        nf 28=0 27..26=3 vm vs2 rs1 14..12=0x7 vs3 6..0=0x27
# vsoxei64.v   vs3, (rs1), vs2, vm  # ordered 64-bit indexed store of SEW data
:vsoxei64.v     vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxei64_v(vs3,rs1,vs2);}
:vsoxei64.v     vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg2ei64_v;
:vsoxseg2ei64.v vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg2ei64_v(vs3,rs1,vs2);}
:vsoxseg2ei64.v vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg2ei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg3ei64_v;
:vsoxseg3ei64.v vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg3ei64_v(vs3,rs1,vs2);}
:vsoxseg3ei64.v vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg3ei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg4ei64_v;
:vsoxseg4ei64.v vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg4ei64_v(vs3,rs1,vs2);}
:vsoxseg4ei64.v vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg4ei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg5ei64_v;
:vsoxseg5ei64.v vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg5ei64_v(vs3,rs1,vs2);}
:vsoxseg5ei64.v vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg5ei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg6ei64_v;
:vsoxseg6ei64.v vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg6ei64_v(vs3,rs1,vs2);}
:vsoxseg6ei64.v vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg6ei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg7ei64_v;
:vsoxseg7ei64.v vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg7ei64_v(vs3,rs1,vs2);}
:vsoxseg7ei64.v vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg7ei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg8ei64_v;
:vsoxseg8ei64.v vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg8ei64_v(vs3,rs1,vs2);}
:vsoxseg8ei64.v vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x7 & vs3 & op0006=0x27 {vsoxseg8ei64_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxei8_v;
# vsoxei8.v         nf 28=0 27..26=3 vm vs2 rs1 14..12=0x0 vs3 6..0=0x27
# vsoxei8.v    vs3, (rs1), vs2, vm  # ordered  8-bit indexed store of SEW data
:vsoxei8.v      vs3, (rs1), vs2         is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxei8_v(vs3,rs1,vs2);}
:vsoxei8.v      vs3, (rs1), vs2, "v0.t" is nf & op2931=0 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxei8_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg2ei8_v;
:vsoxseg2ei8.v  vs3, (rs1), vs2         is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg2ei8_v(vs3,rs1,vs2);}
:vsoxseg2ei8.v  vs3, (rs1), vs2, "v0.t" is nf & op2931=1 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg2ei8_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg3ei8_v;
:vsoxseg3ei8.v  vs3, (rs1), vs2         is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg3ei8_v(vs3,rs1,vs2);}
:vsoxseg3ei8.v  vs3, (rs1), vs2, "v0.t" is nf & op2931=2 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg3ei8_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg4ei8_v;
:vsoxseg4ei8.v  vs3, (rs1), vs2         is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg4ei8_v(vs3,rs1,vs2);}
:vsoxseg4ei8.v  vs3, (rs1), vs2, "v0.t" is nf & op2931=3 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg4ei8_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg5ei8_v;
:vsoxseg5ei8.v  vs3, (rs1), vs2         is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg5ei8_v(vs3,rs1,vs2);}
:vsoxseg5ei8.v  vs3, (rs1), vs2, "v0.t" is nf & op2931=4 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg5ei8_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg6ei8_v;
:vsoxseg6ei8.v  vs3, (rs1), vs2         is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg6ei8_v(vs3,rs1,vs2);}
:vsoxseg6ei8.v  vs3, (rs1), vs2, "v0.t" is nf & op2931=5 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg6ei8_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg7ei8_v;
:vsoxseg7ei8.v  vs3, (rs1), vs2         is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg7ei8_v(vs3,rs1,vs2);}
:vsoxseg7ei8.v  vs3, (rs1), vs2, "v0.t" is nf & op2931=6 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg7ei8_v(vs3,rs1,vs2,v0);}

define pcodeop vsoxseg8ei8_v;
:vsoxseg8ei8.v  vs3, (rs1), vs2         is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=1 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg8ei8_v(vs3,rs1,vs2);}
:vsoxseg8ei8.v  vs3, (rs1), vs2, "v0.t" is nf & op2931=7 & op2828=0x0 & op2627=0x3 & op2525=0 & vs2 & rs1 & op1214=0x0 & vs3 & op0006=0x27 {vsoxseg8ei8_v(vs3,rs1,vs2,v0);}

define pcodeop vwadd_vv;
# vwadd.vv       31..26=0x31 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vwadd.vv  vd, vs2, vs1, vm  # vector-vector
:vwadd.vv   vd, vs2, vs1         is op2631=0x31 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwadd_vv(vs2,vs1);}
:vwadd.vv   vd, vs2, vs1, "v0.t" is op2631=0x31 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwadd_vv(vs2,vs1,v0);}

define pcodeop vwcvt_xxv;
define pcodeop vwadd_vx;
# vwadd.vx       31..26=0x31 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vwadd.vx  vd, vs2, rs1, vm  # vector-scalar
:vwcvt.x.x.v vd, vs2              is op2631=0x31 & op2525=1 & vs2 & op1519=0 & op1214=0x6 & vd & op0006=0x57 {vd=vwcvt_xxv(vs2);}
:vwcvt.x.x.v vd, vs2, "v0.t"      is op2631=0x31 & op2525=0 & vs2 & op1519=0 & op1214=0x6 & vd & op0006=0x57 {vd=vwcvt_xxv(vs2,v0);}
:vwadd.vx    vd, vs2, rs1         is op2631=0x31 & op2525=1 & vs2 & rs1      & op1214=0x6 & vd & op0006=0x57 {vd=vwadd_vx(vs2,rs1);}
:vwadd.vx    vd, vs2, rs1, "v0.t" is op2631=0x31 & op2525=0 & vs2 & rs1      & op1214=0x6 & vd & op0006=0x57 {vd=vwadd_vx(vs2,rs1,v0);}

define pcodeop vwadd_wv;
# vwadd.wv       31..26=0x35 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vwadd.wv  vd, vs2, vs1, vm  # vector-vector
:vwadd.wv   vd, vs2, vs1         is op2631=0x35 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwadd_wv(vs2,vs1);}
:vwadd.wv   vd, vs2, vs1, "v0.t" is op2631=0x35 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwadd_wv(vs2,vs1,v0);}

define pcodeop vwadd_wx;
# vwadd.wx       31..26=0x35 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vwadd.wx  vd, vs2, rs1, vm  # vector-scalar
:vwadd.wx   vd, vs2, rs1         is op2631=0x35 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwadd_wx(vs2,rs1);}
:vwadd.wx   vd, vs2, rs1, "v0.t" is op2631=0x35 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwadd_wx(vs2,rs1,v0);}

define pcodeop vwaddu_vv;
# vwaddu.vv      31..26=0x30 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vwaddu.vv  vd, vs2, vs1, vm  # vector-vector
#??:vwcvtu.x.x.v vd, vs2              is op2631=0x30 & op2525=1 & vs2 & op1519=0 & op1214=0x2 & vd & op0006=0x57
#??:vwcvtu.x.x.v vd, vs2, "v0.t"      is op2631=0x30 & op2525=0 & vs2 & op1519=0 & op1214=0x2 & vd & op0006=0x57
:vwaddu.vv    vd, vs2, vs1         is op2631=0x30 & op2525=1 & vs2 & vs1      & op1214=0x2 & vd & op0006=0x57 {vd=vwaddu_vv(vs2,vs1);}
:vwaddu.vv    vd, vs2, vs1, "v0.t" is op2631=0x30 & op2525=0 & vs2 & vs1      & op1214=0x2 & vd & op0006=0x57 {vd=vwaddu_vv(vs2,vs1,v0);}

define pcodeop vwcvtu_xxv;
define pcodeop vwaddu_vx;
# vwaddu.vx      31..26=0x30 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vwaddu.vx  vd, vs2, rs1, vm  # vector-scalar
:vwcvtu.x.x.v vd, vs2             is op2631=0x30 & op2525=1 & vs2 & op1519=0 & op1214=0x6 & vd & op0006=0x57 {vd=vwcvtu_xxv(vs2);}
:vwcvtu.x.x.v vd, vs2, "v0.t"     is op2631=0x30 & op2525=0 & vs2 & op1519=0 & op1214=0x6 & vd & op0006=0x57 {vd=vwcvtu_xxv(vs2,v0);}
:vwaddu.vx   vd, vs2, rs1         is op2631=0x30 & op2525=1 & vs2 & rs1      & op1214=0x6 & vd & op0006=0x57 {vd=vwaddu_vx(vs2,rs1);}
:vwaddu.vx   vd, vs2, rs1, "v0.t" is op2631=0x30 & op2525=0 & vs2 & rs1      & op1214=0x6 & vd & op0006=0x57 {vd=vwaddu_vx(vs2,rs1,v0);}

define pcodeop vwaddu_wv;
# vwaddu.wv      31..26=0x34 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vwaddu.wv  vd, vs2, vs1, vm  # vector-vector
:vwaddu.wv   vd, vs2, vs1         is op2631=0x34 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwaddu_wv(vs2,vs1);}
:vwaddu.wv   vd, vs2, vs1, "v0.t" is op2631=0x34 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwaddu_wv(vs2,vs1,v0);}

define pcodeop vwaddu_wx;
# vwaddu.wx      31..26=0x34 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vwaddu.wx  vd, vs2, rs1, vm  # vector-scalar
:vwaddu.wx   vd, vs2, rs1         is op2631=0x34 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwaddu_wx(vs2,rs1);}
:vwaddu.wx   vd, vs2, rs1, "v0.t" is op2631=0x34 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwaddu_wx(vs2,rs1,v0);}

define pcodeop vwmacc_vv;
# vwmacc.vv      31..26=0x3d vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vwmacc.vv vd, vs1, vs2, vm    # vd[i] = +(vs1[i] * vs2[i]) + vd[i]
:vwmacc.vv  vd, vs1, vs2         is op2631=0x3d & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwmacc_vv(vs1,vs2);}
:vwmacc.vv  vd, vs1, vs2, "v0.t" is op2631=0x3d & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwmacc_vv(vs1,vs2,v0);}

define pcodeop vwmacc_vx;
# vwmacc.vx      31..26=0x3d vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vwmacc.vx vd, rs1, vs2, vm    # vd[i] = +(x[rs1] * vs2[i]) + vd[i]
:vwmacc.vx  vd, rs1, vs2         is op2631=0x3d & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwmacc_vx(rs1,vs2);}
:vwmacc.vx  vd, rs1, vs2, "v0.t" is op2631=0x3d & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwmacc_vx(rs1,vs2,v0);}

define pcodeop vwmaccsu_vv;
# vwmaccsu.vv    31..26=0x3f vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vwmaccsu.vv vd, vs1, vs2, vm    # vd[i] = +(signed(vs1[i]) * unsigned(vs2[i])) + vd[i]
:vwmaccsu.vv  vd, vs1, vs2         is op2631=0x3f & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwmaccsu_vv(vs1,vs2);}
:vwmaccsu.vv  vd, vs1, vs2, "v0.t" is op2631=0x3f & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwmaccsu_vv(vs1,vs2,v0);}

define pcodeop vwmaccsu_vx;
# vwmaccsu.vx    31..26=0x3f vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vwmaccsu.vx vd, rs1, vs2, vm    # vd[i] = +(signed(x[rs1]) * unsigned(vs2[i])) + vd[i]
:vwmaccsu.vx  vd, rs1, vs2         is op2631=0x3f & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwmaccsu_vx(rs1,vs2);}
:vwmaccsu.vx  vd, rs1, vs2, "v0.t" is op2631=0x3f & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwmaccsu_vx(rs1,vs2,v0);}

define pcodeop vwmaccu_vv;
# vwmaccu.vv     31..26=0x3c vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vwmaccu.vv vd, vs1, vs2, vm    # vd[i] = +(vs1[i] * vs2[i]) + vd[i]
:vwmaccu.vv  vd, vs1, vs2         is op2631=0x3c & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwmaccsu_vv(vs1,vs2);}
:vwmaccu.vv  vd, vs1, vs2, "v0.t" is op2631=0x3c & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwmaccsu_vv(vs1,vs2,v0);}

define pcodeop vwmaccu_vx;
# vwmaccu.vx     31..26=0x3c vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vwmaccu.vx vd, rs1, vs2, vm    # vd[i] = +(x[rs1] * vs2[i]) + vd[i]
:vwmaccu.vx  vd, rs1, vs2         is op2631=0x3c & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwmaccu_vx(rs1,vs2);}
:vwmaccu.vx  vd, rs1, vs2, "v0.t" is op2631=0x3c & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwmaccu_vx(rs1,vs2,v0);}

define pcodeop vwmaccus_vx;
# vwmaccus.vx    31..26=0x3e vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vwmaccus.vx vd, rs1, vs2, vm    # vd[i] = +(unsigned(x[rs1]) * signed(vs2[i])) + vd[i]
:vwmaccus.vx  vd, rs1, vs2         is op2631=0x3e & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwmaccus_vx(rs1,vs2);}
:vwmaccus.vx  vd, rs1, vs2, "v0.t" is op2631=0x3e & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwmaccus_vx(rs1,vs2,v0);}

define pcodeop vwmul_vv;
# vwmul.vv       31..26=0x3b vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vwmul.vv  vd, vs2, vs1, vm  # vector-vector
:vwmul.vv   vd, vs2, vs1         is op2631=0x3b & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwmul_vv(vs2,vs1);}
:vwmul.vv   vd, vs2, vs1, "v0.t" is op2631=0x3b & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwmul_vv(vs2,vs1,v0);}

define pcodeop vwmul_vx;
# vwmul.vx       31..26=0x3b vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vwmul.vx  vd, vs2, rs1, vm # vector-scalar
:vwmul.vx   vd, vs2, rs1         is op2631=0x3b & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwmul_vx(vs2,rs1);}
:vwmul.vx   vd, vs2, rs1, "v0.t" is op2631=0x3b & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwmul_vx(vs2,rs1,v0);}

define pcodeop vwmulsu_vv;
# vwmulsu.vv     31..26=0x3a vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vwmulsu.vv vd, vs2, vs1, vm # vector-vector
:vwmulsu.vv  vd, vs2, vs1         is op2631=0x3a & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwmulsu_vv(vs2,vs1);}
:vwmulsu.vv  vd, vs2, vs1, "v0.t" is op2631=0x3a & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwmulsu_vv(vs2,vs1,v0);}

define pcodeop vwmulsu_vx;
# vwmulsu.vx     31..26=0x3a vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vwmulsu.vx vd, vs2, rs1, vm # vector-scalar
:vwmulsu.vx  vd, vs2, rs1         is op2631=0x3a & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwmulsu_vx(vs2,rs1);}
:vwmulsu.vx  vd, vs2, rs1, "v0.t" is op2631=0x3a & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwmulsu_vx(vs2,rs1,v0);}

define pcodeop vwmulu_vv;
# vwmulu.vv      31..26=0x38 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vwmulu.vv vd, vs2, vs1, vm # vector-vector
:vwmulu.vv  vd, vs2, vs1          is op2631=0x38 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwmulu_vv(vs2,vs1);}
:vwmulu.vv  vd, vs2, vs1, "v0.t"  is op2631=0x38 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwmulu_vv(vs2,vs1,v0);}

define pcodeop vwmulu_vx;
# vwmulu.vx      31..26=0x38 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vwmulu.vx vd, vs2, rs1, vm # vector-scalar
:vwmulu.vx  vd, vs2, rs1         is op2631=0x38 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwmulu_vx(vs2,rs1);}
:vwmulu.vx  vd, vs2, rs1, "v0.t" is op2631=0x38 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwmulu_vx(vs2,rs1,v0);}

define pcodeop vwredsum_vs;
# vwredsum.vs    31..26=0x31 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vwredsum.vs  vd, vs2, vs1, vm   # 2*SEW = 2*SEW + sum(sign-extend(SEW))
:vwredsum.vs   vd, vs2, vs1         is op2631=0x31 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vwredsum_vs(vs2,vs1);}
:vwredsum.vs   vd, vs2, vs1, "v0.t" is op2631=0x31 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vwredsum_vs(vs2,vs1,v0);}

define pcodeop vwredsumu_vs;
# vwredsumu.vs   31..26=0x30 vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vwredsumu.vs vd, vs2, vs1, vm   # 2*SEW = 2*SEW + sum(zero-extend(SEW))
:vwredsumu.vs  vd, vs2, vs1         is op2631=0x30 & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vwredsumu_vs(vs2,vs1);}
:vwredsumu.vs  vd, vs2, vs1, "v0.t" is op2631=0x30 & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vwredsumu_vs(vs2,vs1,v0);}

define pcodeop vwsub_vv;
# vwsub.vv       31..26=0x33 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vwsub.vv  vd, vs2, vs1, vm  # vector-vector
:vwsub.vv   vd, vs2, vs1         is op2631=0x33 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwsub_vv(vs2,vs1);}
:vwsub.vv   vd, vs2, vs1, "v0.t" is op2631=0x33 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwsub_vv(vs2,vs1,v0);}

define pcodeop vwsub_vx;
# vwsub.vx       31..26=0x33 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vwsub.vx  vd, vs2, rs1, vm  # vector-scalar
:vwsub.vx   vd, vs2, rs1         is op2631=0x33 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwsub_vx(vs2,rs1);}
:vwsub.vx   vd, vs2, rs1, "v0.t" is op2631=0x33 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwsub_vx(vs2,rs1,v0);}

define pcodeop vwsub_wv;
# vwsub.wv       31..26=0x37 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vwsub.wv  vd, vs2, vs1, vm  # vector-vector
:vwsub.wv   vd, vs2, vs1         is op2631=0x37 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwsub_wv(vs2,vs1);}
:vwsub.wv   vd, vs2, vs1, "v0.t" is op2631=0x37 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwsub_wv(vs2,vs1,v0);}

define pcodeop vwsub_wx;
# vwsub.wx       31..26=0x37 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vwsub.wx  vd, vs2, rs1, vm  # vector-scalar
:vwsub.wx   vd, vs2, rs1         is op2631=0x37 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwsub_wx(vs2,rs1);}
:vwsub.wx   vd, vs2, rs1, "v0.t" is op2631=0x37 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwsub_wx(vs2,rs1,v0);}

define pcodeop vwsubu_vv;
# vwsubu.vv      31..26=0x32 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vwsubu.vv  vd, vs2, vs1, vm  # vector-vector
:vwsubu.vv   vd, vs2, vs1         is op2631=0x32 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwsubu_vv(vs2,vs1);}
:vwsubu.vv   vd, vs2, vs1, "v0.t" is op2631=0x32 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwsubu_vv(vs2,vs1,v0);}

define pcodeop vwsubu_vx;
# vwsubu.vx      31..26=0x32 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vwsubu.vx  vd, vs2, rs1, vm  # vector-scalar
:vwsubu.vx   vd, vs2, rs1         is op2631=0x32 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwsubu_vx(vs2,rs1);}
:vwsubu.vx   vd, vs2, rs1, "v0.t" is op2631=0x32 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwsubu_vx(vs2,rs1,v0);}

define pcodeop vwsubu_wv;
# vwsubu.wv      31..26=0x36 vm vs2 vs1 14..12=0x2 vd 6..0=0x57
# vwsubu.wv  vd, vs2, vs1, vm  # vector-vector
:vwsubu.wv   vd, vs2, vs1         is op2631=0x36 & op2525=1 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwsubu_wv(vs2,vs1);}
:vwsubu.wv   vd, vs2, vs1, "v0.t" is op2631=0x36 & op2525=0 & vs2 & vs1 & op1214=0x2 & vd & op0006=0x57 {vd=vwsubu_wv(vs2,vs1,v0);}

define pcodeop vwsubu_wx;
# vwsubu.wx      31..26=0x36 vm vs2 rs1 14..12=0x6 vd 6..0=0x57
# vwsubu.wx  vd, vs2, rs1, vm  # vector-scalar
:vwsubu.wx   vd, vs2, rs1         is op2631=0x36 & op2525=1 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwsubu_wx(vs2,rs1);}
:vwsubu.wx   vd, vs2, rs1, "v0.t" is op2631=0x36 & op2525=0 & vs2 & rs1 & op1214=0x6 & vd & op0006=0x57 {vd=vwsubu_wx(vs2,rs1,v0);}

define pcodeop vnot_v;
define pcodeop vxor_vi;
# vxor.vi        31..26=0x0b vm vs2 simm5 14..12=0x3 vd 6..0=0x57
# vxor.vi vd, vs2, simm5, vm    # vector-immediate
:vnot.v   vd, vs2                is op2631=0xb & op2525=1 & vs2 & sop1519=0x1f & op1214=0x3 & vd & op0006=0x57 {vd=vnot_v(vs2);}
:vnot.v   vd, vs2, "v0.t"        is op2631=0xb & op2525=0 & vs2 & sop1519=0x1f & op1214=0x3 & vd & op0006=0x57 {vd=vnot_v(vs2,v0);}
:vxor.vi  vd, vs2, simm5         is op2631=0xb & op2525=1 & vs2 & simm5        & op1214=0x3 & vd & op0006=0x57 {vd=vxor_vi(vs2,simm5);}
:vxor.vi  vd, vs2, simm5, "v0.t" is op2631=0xb & op2525=0 & vs2 & simm5        & op1214=0x3 & vd & op0006=0x57 {vd=vxor_vi(vs2,simm5,v0);}

define pcodeop vxor_vv;
# vxor.vv         31..26=0x0b vm vs2 vs1 14..12=0x0 vd 6..0=0x57
# vxor.vv vd, vs2, vs1, vm    # Vector-vector
:vxor.vv  vd, vs2, vs1         is op2631=0xb & op2525=1 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vxor_vv(vs2,vs1);}
:vxor.vv  vd, vs2, vs1, "v0.t" is op2631=0xb & op2525=0 & vs2 & vs1 & op1214=0x0 & vd & op0006=0x57 {vd=vxor_vv(vs2,vs1,v0);}

define pcodeop vxor_vx;
# vxor.vx        31..26=0x0b vm vs2 rs1 14..12=0x4 vd 6..0=0x57
# vxor.vx vd, vs2, rs1, vm    # vector-scalar
:vxor.vx  vd, vs2, rs1         is op2631=0xb & op2525=1 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vxor_vx(vs2,rs1);}
:vxor.vx  vd, vs2, rs1, "v0.t" is op2631=0xb & op2525=0 & vs2 & rs1 & op1214=0x4 & vd & op0006=0x57 {vd=vxor_vx(vs2,rs1,v0);}

define pcodeop vzext_vf2;
# vzext.vf2      31..26=0x12 vm vs2 19..15=6 14..12=0x2 vd 6..0=0x57
# vzext.vf2 vd, vs2, vm  # Zero-extend SEW/2 source to SEW destination
:vzext.vf2  vd, vs2         is op2631=0x12 & op2525=1 & vs2 & op1519=0x6 & op1214=0x2 & vd & op0006=0x57 {vd=vzext_vf2(vs2);}
:vzext.vf2  vd, vs2, "v0.t" is op2631=0x12 & op2525=0 & vs2 & op1519=0x6 & op1214=0x2 & vd & op0006=0x57 {vd=vzext_vf2(vs2,v0);}

define pcodeop vzext_vf4;
# vzext.vf4      31..26=0x12 vm vs2 19..15=4 14..12=0x2 vd 6..0=0x57
# vzext.vf4 vd, vs2, vm  # Zero-extend SEW/4 source to SEW destination
:vzext.vf4  vd, vs2         is op2631=0x12 & op2525=1 & vs2 & op1519=0x4 & op1214=0x2 & vd & op0006=0x57 {vd=vzext_vf4(vs2);}
:vzext.vf4  vd, vs2, "v0.t" is op2631=0x12 & op2525=0 & vs2 & op1519=0x4 & op1214=0x2 & vd & op0006=0x57 {vd=vzext_vf4(vs2,v0);}

define pcodeop vzext_vf8;
# vzext.vf8      31..26=0x12 vm vs2 19..15=2 14..12=0x2 vd 6..0=0x57
# vzext.vf8 vd, vs2, vm  # Zero-extend SEW/8 source to SEW destination
:vzext.vf8  vd, vs2         is op2631=0x12 & op2525=1 & vs2 & op1519=0x2 & op1214=0x2 & vd & op0006=0x57 {vd=vzext_vf8(vs2);}
:vzext.vf8  vd, vs2, "v0.t" is op2631=0x12 & op2525=0 & vs2 & op1519=0x2 & op1214=0x2 & vd & op0006=0x57 {vd=vzext_vf8(vs2,v0);}
